[{"C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\index.js":"1","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\TLApp.js":"2","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\context\\DrawerContext.js":"3","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\context\\AuthContext.js":"4","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\pages\\admin.js":"5","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\pages\\login.js":"6","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\pages\\solicitud-critica.js":"7","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\pages\\inicio.js":"8","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\pages\\prep_critica.js":"9","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\pages\\solicitud-diseno.js":"10","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\pages\\prep_diseno.js":"11","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\pages\\prev_resultado.js":"12","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\customRouter\\publicRoute.js":"13","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\customRouter\\privateRoute.js":"14","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\drawer\\index.js":"15","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\firebase.js":"16","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\api.js":"17","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\helpers\\userStorage.js":"18","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\modal\\designDetail.js":"19","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\modal\\critiqueDetail.js":"20","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\footer\\footer.js":"21","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\data\\data.js":"22","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\hooks\\useStepObserver.js":"23","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\stories-carrousel\\carrousel.js":"24","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\home-panorama\\panorama.js":"25","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\forms\\step-manager\\step-manager.js":"26","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\navbar\\index.js":"27","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\request-card\\index.js":"28","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\dropdown-image\\index.js":"29","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\drawer\\drawer.js":"30","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\tabs\\index.js":"31","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\tag\\index.js":"32","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\forms\\forms-steps\\index.js":"33","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\loading-screen\\index.js":"34","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\helpers\\functions.js":"35","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\modal\\confirmationModal.js":"36","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\navbar\\navbar.js":"37","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\request-card\\card.js":"38","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\dropdown-image\\dropdown.js":"39","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\tabs\\tabs.js":"40","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\tag\\tag.js":"41","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\forms\\forms-steps\\form-steps.js":"42","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\avatar\\index.js":"43","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\loading-screen\\loading-screen.js":"44","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\story-card\\index.js":"45","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\hooks\\useOutsideListener.js":"46","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\avatar\\avatar.js":"47","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\story-card\\story_card.js":"48","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\pages\\test_resultado.js":"49","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\customRouter\\anyRoute.js":"50"},{"size":358,"mtime":1612154583817,"results":"51","hashOfConfig":"52"},{"size":1714,"mtime":1615086942336,"results":"53","hashOfConfig":"52"},{"size":924,"mtime":1612329952620,"results":"54","hashOfConfig":"52"},{"size":854,"mtime":1615091284936,"results":"55","hashOfConfig":"52"},{"size":8671,"mtime":1615093735038,"results":"56","hashOfConfig":"52"},{"size":3759,"mtime":1615093721295,"results":"57","hashOfConfig":"52"},{"size":18822,"mtime":1615093667552,"results":"58","hashOfConfig":"52"},{"size":4926,"mtime":1612489601931,"results":"59","hashOfConfig":"52"},{"size":10481,"mtime":1614117881879,"results":"60","hashOfConfig":"52"},{"size":20272,"mtime":1615093675622,"results":"61","hashOfConfig":"52"},{"size":9734,"mtime":1614123696037,"results":"62","hashOfConfig":"52"},{"size":6090,"mtime":1615093699204,"results":"63","hashOfConfig":"52"},{"size":570,"mtime":1615085338575,"results":"64","hashOfConfig":"52"},{"size":571,"mtime":1615085341762,"results":"65","hashOfConfig":"52"},{"size":35,"mtime":1611783381168,"results":"66","hashOfConfig":"52"},{"size":659,"mtime":1612134803982,"results":"67","hashOfConfig":"52"},{"size":6978,"mtime":1614449487955,"results":"68","hashOfConfig":"52"},{"size":224,"mtime":1613341053805,"results":"69","hashOfConfig":"52"},{"size":10153,"mtime":1614146772671,"results":"70","hashOfConfig":"52"},{"size":9655,"mtime":1614146767466,"results":"71","hashOfConfig":"52"},{"size":1689,"mtime":1611974876703,"results":"72","hashOfConfig":"52"},{"size":954,"mtime":1613942834432,"results":"73","hashOfConfig":"52"},{"size":651,"mtime":1611963889219,"results":"74","hashOfConfig":"52"},{"size":3936,"mtime":1612489526320,"results":"75","hashOfConfig":"52"},{"size":1358,"mtime":1612829661812,"results":"76","hashOfConfig":"52"},{"size":230,"mtime":1611891779839,"results":"77","hashOfConfig":"52"},{"size":35,"mtime":1610169602941,"results":"78","hashOfConfig":"52"},{"size":33,"mtime":1612493180152,"results":"79","hashOfConfig":"52"},{"size":37,"mtime":1611812649805,"results":"80","hashOfConfig":"52"},{"size":2145,"mtime":1613346467308,"results":"81","hashOfConfig":"52"},{"size":32,"mtime":1612743758990,"results":"82","hashOfConfig":"52"},{"size":32,"mtime":1610813286511,"results":"83","hashOfConfig":"52"},{"size":39,"mtime":1611877771633,"results":"84","hashOfConfig":"52"},{"size":43,"mtime":1612489867120,"results":"85","hashOfConfig":"52"},{"size":1744,"mtime":1614110936212,"results":"86","hashOfConfig":"52"},{"size":2558,"mtime":1613425752627,"results":"87","hashOfConfig":"52"},{"size":5173,"mtime":1613409017428,"results":"88","hashOfConfig":"52"},{"size":3940,"mtime":1614146747534,"results":"89","hashOfConfig":"52"},{"size":2460,"mtime":1614109074857,"results":"90","hashOfConfig":"52"},{"size":1992,"mtime":1613320003851,"results":"91","hashOfConfig":"52"},{"size":251,"mtime":1610819468986,"results":"92","hashOfConfig":"52"},{"size":834,"mtime":1611881968391,"results":"93","hashOfConfig":"52"},{"size":35,"mtime":1612494927695,"results":"94","hashOfConfig":"52"},{"size":834,"mtime":1615091188463,"results":"95","hashOfConfig":"52"},{"size":39,"mtime":1610293845546,"results":"96","hashOfConfig":"52"},{"size":913,"mtime":1613359450735,"results":"97","hashOfConfig":"52"},{"size":459,"mtime":1612495138270,"results":"98","hashOfConfig":"52"},{"size":746,"mtime":1610429606771,"results":"99","hashOfConfig":"52"},{"size":4903,"mtime":1615101318125,"results":"100","hashOfConfig":"52"},{"size":453,"mtime":1615086499952,"results":"101","hashOfConfig":"52"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},"1arx63t",{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"104"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"104"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"104"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"104"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"104"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"104"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"104"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"104"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"104"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"104"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"104"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"104"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"213","messages":"214","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\index.js",[],["215","216"],"C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\TLApp.js",["217"],"C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\context\\DrawerContext.js",[],"C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\context\\AuthContext.js",[],"C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\pages\\admin.js",["218","219","220"],"C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\pages\\login.js",["221"],"C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\pages\\solicitud-critica.js",["222","223","224","225"],"C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\pages\\inicio.js",[],"C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\pages\\prep_critica.js",["226"],"import React, { useState, useEffect } from 'react'\r\nimport Footer from '../componentes/footer/footer';\r\nimport Navbar from '../componentes/navbar';\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport Fade from 'react-reveal/Fade';\r\nimport { css } from \"@emotion/core\";\r\nimport { setRequestDone } from '../api';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowLeft, faPaperPlane, faCheckCircle, faHome, faEye } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst overrideSpinnerInline = css`\r\n  display: inline-block;\r\n  vertical-align: middle;\r\n`;\r\n\r\nconst Preparation = ({ location }) => {\r\n\r\n    const { id, title, about, link, type, points } = location.state.data;\r\n\r\n    const [success, setSuccess] = useState(false);\r\n    const [urlResult, setUrlResult] = useState('');\r\n    const [loading, setLoading] = useState(false); // Determina si se está enviando el form\r\n    const [intention, setIntention] = useState('');\r\n    const [hook, setHook] = useState('');\r\n    const [ortography, setOrtography] = useState('');\r\n    const [improvement, setImprovement] = useState('');\r\n\r\n    const history = useHistory();\r\n\r\n    const intentionRequested = points.includes('INTENCION');\r\n    const hookRequested = points.includes('ENGANCHE');\r\n    const ortographyRequested = points.includes('ORTOGRAFIA');\r\n\r\n\r\n    const updIntention = (e) => {\r\n        setIntention(e.target.value);\r\n    }\r\n\r\n    const updHook = (e) => {\r\n        setHook(e.target.value);\r\n    }\r\n\r\n    const updOrtography = (e) => {\r\n        setOrtography(e.target.value);\r\n    }\r\n\r\n    const updImprovement = (e) => {\r\n        setImprovement(e.target.value);\r\n    }\r\n\r\n    const goBackwards = () => {\r\n        history.push('/admin');\r\n    }\r\n\r\n    const send = async (e) => {\r\n        e.preventDefault();\r\n        if (!checkErrors()) {\r\n            setLoading(true);\r\n            saveChanges();\r\n        }\r\n    }\r\n\r\n    const saveChanges = () => {\r\n        const data = {\r\n            requestId: id,\r\n            title: title.trim(),\r\n            type: type.trim(),\r\n            intention: intention.trim(),\r\n            hook: hook.trim(),\r\n            ortography: ortography.trim(),\r\n            improvement: improvement.trim(),\r\n        };\r\n\r\n        setRequestDone(data).then(result => {\r\n            window.scrollTo(0, 0);\r\n            setLoading(false);\r\n            if (!result.error) {\r\n                setUrlResult(result.url);\r\n                setSuccess(true);\r\n            } else {\r\n                alert(result.error);\r\n                setSuccess(false);\r\n            }\r\n        });\r\n    }\r\n\r\n    const checkErrors = () => {\r\n\r\n        // Name\r\n        if (intentionRequested) {\r\n            if (!(/^(?!\\s*$).{1,1000}/.test(intention))) {\r\n                alert('La intención de la obra debe tener de 1 a 1000 caracteres');\r\n                return true;\r\n            }\r\n        }\r\n\r\n        // Hooks\r\n        if (hookRequested) {\r\n            if (!(/^(?!\\s*$).{1,1000}/.test(hook))) {\r\n                alert('En enganche de la obra debe tener de 1 a 1000 caracteres');\r\n                return true;\r\n            }\r\n        }\r\n\r\n        // Ortography\r\n        if (ortographyRequested) {\r\n            if (!(/^(?!\\s*$).{1,1000}/.test(ortography))) {\r\n                alert('La ortografía de la obra debe tener de 1 a 1000 caracteres');\r\n                return true;\r\n            }\r\n        }\r\n\r\n        // Improvement (optional)\r\n        if (improvement) {\r\n            if (!(/^(?!\\s*$).{1,1000}/.test(improvement))) {\r\n                alert('El consejo para el autor debe tener de 1 a 1000 caracteres');\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n        setSuccess(false);\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <Navbar />\r\n            <main className='main-body below-navbar colored-background'>\r\n                <section className='container-xl section prep-req-container'>\r\n                    <div className='flex-align-center mb-2'>\r\n                        <FontAwesomeIcon onClick={goBackwards} className='mr-1' icon={faArrowLeft} size='lg' />\r\n                        <h4 className='request-prep-title m-0 clamp clamp-2'>Crítica: {title}</h4>\r\n                    </div>\r\n                    {\r\n                        success\r\n                            ?\r\n                            <div className='form-container text-align-center'>\r\n                                <Fade bottom>\r\n                                    <FontAwesomeIcon color={'#3DE58D'} icon={faCheckCircle} style={{ fontSize: '8rem' }} />\r\n                                    <h3 className='mt-1 mb-1'>¡Crítica enviada!</h3>\r\n                                </Fade>\r\n                                <p className='txt-responsive-form m0-auto'>Tu experiencia ha aumentado :)</p>\r\n                                <div className='button-container mt-3'>\r\n                                    <button onClick={() => window.open(urlResult, '_blank')} className='button button-light-purple button-option-request ml-auto'>\r\n                                        <FontAwesomeIcon icon={faEye} size='1x' />\r\n                                        {' '}\r\n                                                Ver resultado\r\n                                        </button>\r\n                                    <button onClick={goBackwards} className='button button-blue button-option-request mr-auto'>\r\n                                        <FontAwesomeIcon icon={faHome} size='1x' />\r\n                                        {' '}\r\n                                                Regresar\r\n                                        </button>\r\n                                </div>\r\n                            </div>\r\n                            :\r\n                            <>\r\n                                <div className=''>\r\n                                    <p>{about}</p>\r\n                                    <h4>Link de la obra</h4>\r\n                                    {\r\n                                        link\r\n                                            ?\r\n                                            <a target='_blank' href={link}>{link}</a>\r\n                                            :\r\n                                            <p>No existe link</p>\r\n                                    }\r\n                                    {\r\n                                        intentionRequested\r\n                                        &&\r\n                                        <div className='form-group'>\r\n                                            <h4>¿Se logró transmitir la idea?</h4>\r\n                                            <textarea minLength=\"1\" maxLength=\"1000\" rows=\"4\" value={intention} onChange={updIntention} id=\"txtIntencion\" placeholder=\"Ejemplo: Siento que la idea se transmite correctamente, porque genera en el lector una sensación de...\"></textarea>\r\n                                        </div>\r\n                                    }\r\n                                    {\r\n                                        hookRequested\r\n                                        &&\r\n                                        <div className='form-group'>\r\n                                            <h4>¿Qué tal fue el enganche de la obra?</h4>\r\n                                            <textarea minLength=\"1\" maxLength=\"1000\" rows=\"4\" value={hook} onChange={updHook} id=\"txtEnganche\" placeholder=\"Ejemplo: Considero que tiene un enganche bueno, pero no es suficiente. Debería enganchar mucho desde un inicio...\"></textarea>\r\n                                        </div>\r\n                                    }\r\n                                    {\r\n                                        ortographyRequested\r\n                                        &&\r\n                                        <div className='form-group'>\r\n                                            <h4>¿Qué tal fue la ortografía?</h4>\r\n                                            <textarea minLength=\"1\" maxLength=\"1000\" rows=\"4\" value={ortography} onChange={updOrtography} id=\"txtOrtografia\" placeholder=\"Ejemplo: La ortografía fue excelente. Haces un correcto uso de las comas, los puntos y las tildes...\"></textarea>\r\n                                        </div>\r\n                                    }\r\n                                    <div className='form-group'>\r\n                                        <h4>¿Algún consejo para que el autor pueda mejorar? (Opcional)</h4>\r\n                                        <textarea minLength=\"1\" maxLength=\"1000\" rows=\"4\" value={improvement} onChange={updImprovement} id=\"txtOrtografia\" placeholder=\"Ejemplo: La ortografía fue excelente. Haces un correcto uso de las comas, los puntos y las tildes...\"></textarea>\r\n                                    </div>\r\n                                </div>\r\n                                <div className='form-buttons-container mt-3'>\r\n                                    {\r\n                                        loading\r\n                                            ?\r\n                                            <span className='button button-green justify-self-right'>\r\n                                                Enviando\r\n                                {' '}\r\n                                                <ClipLoader color={'#fff'} loading={true} css={overrideSpinnerInline} size={22} />\r\n                                            </span>\r\n                                            :\r\n                                            <button onClick={send} className='button button-green justify-self-right'>\r\n                                                <FontAwesomeIcon icon={faPaperPlane} size='1x' />\r\n                                                {' '}\r\n                                                <span className='d-none d-md-inline'>\r\n                                                    Enviar\r\n                                                </span>\r\n                                            </button>\r\n                                    }\r\n                                </div>\r\n                            </>\r\n                    }\r\n                </section>\r\n            </main>\r\n            <Footer />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Preparation;","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\pages\\solicitud-diseno.js",["227"],"C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\pages\\prep_diseno.js",["228","229"],"import React, { useRef, useState, useEffect } from 'react'\r\nimport Footer from '../componentes/footer/footer';\r\nimport Navbar from '../componentes/navbar';\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport Fade from 'react-reveal/Fade';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { css } from \"@emotion/core\";\r\nimport { getGeneratedId, uploadImage, setRequestDone } from '../api';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowLeft, faPaperPlane, faCheckCircle, faHome, faEye } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst overrideSpinnerInline = css`\r\n  display: inline-block;\r\n  vertical-align: middle;\r\n`;\r\n\r\nconst maxFileSize = 5242880;\r\n\r\nconst Preparation = ({ location }) => {\r\n\r\n    const { title, id, type, link } = location.state.data;\r\n\r\n    const refDesign = useRef(null);\r\n\r\n    const [success, setSuccess] = useState(false);\r\n    const [urlResult, setUrlResult] = useState('');\r\n    const [loading, setLoading] = useState(false); // Determina si se está enviando el form\r\n    const [comment, setComment] = useState('');\r\n    const [design, setDesign] = useState(null);\r\n\r\n    const history = useHistory();\r\n\r\n    const updComment = (e) => {\r\n        setComment(e.target.value);\r\n    }\r\n\r\n    const goBackwards = () => {\r\n        history.push('/admin');\r\n    }\r\n\r\n    const startSelectDesign = (e) => {\r\n        e.preventDefault();\r\n        refDesign.current.click();\r\n    }\r\n\r\n    const selectDesign = (e) => {\r\n        e.preventDefault();\r\n        const file = e.target.files[0];\r\n        if (file) {\r\n            if (file.size <= maxFileSize) {\r\n                setDesign(file);\r\n            } else {\r\n                alert('La imagen debe ser menor a 5MB')\r\n            }\r\n        }\r\n    }\r\n\r\n    const deleteDesign = (e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        setDesign(null);\r\n    }\r\n\r\n    const send = async (e) => {\r\n        e.preventDefault();\r\n        if (!checkErrors()) {\r\n            setLoading(true);\r\n            saveChanges();\r\n        }\r\n    }\r\n\r\n    const saveChanges = () => {\r\n        const data = {\r\n            requestId: id,\r\n            type: type.trim(),\r\n            comment: comment.trim()\r\n        };\r\n\r\n        uploadImage('solicitud-diseno', design)\r\n            .then(url => {\r\n                setRequestDone({ ...data, urlResult: url }).then(result => {\r\n                    window.scrollTo(0, 0);\r\n                    setLoading(false);\r\n                    if (!result.error) {\r\n                        setUrlResult(result.url);\r\n                        setSuccess(true);\r\n                    } else {\r\n                        alert(result.error);\r\n                        setSuccess(false);\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                setLoading(false);\r\n                setSuccess(false);\r\n                alert('Error al subir la imagen. Reintente');\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n    const checkErrors = () => {\r\n\r\n        // Comment\r\n        if (comment) {\r\n            if (!(/^(?!\\s*$).{1,1000}/.test(comment))) {\r\n                alert('Tu comentario debe debe tener de 1 a 1000 caracteres');\r\n                return true;\r\n            }\r\n        }\r\n\r\n        // File\r\n        if (!design) {\r\n            alert('Debes subir tu diseño final');\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n        setSuccess(false);\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <Navbar />\r\n            <main className='main-body below-navbar colored-background'>\r\n                <section className='container-xl section prep-req-container'>\r\n                    <div className='flex-align-center mb-2'>\r\n                        <FontAwesomeIcon onClick={goBackwards} className='mr-1' icon={faArrowLeft} size='lg' />\r\n                        <h4 className='request-prep-title m-0 clamp clamp-2'>Diseño: {title}</h4>\r\n                    </div>\r\n                    {\r\n                        success\r\n                            ?\r\n                            <div className='form-container text-align-center'>\r\n                                <Fade bottom>\r\n                                    <FontAwesomeIcon color={'#3DE58D'} icon={faCheckCircle} style={{ fontSize: '8rem' }} />\r\n                                    <h3 className='mt-1 mb-1'>¡Diseño enviado!</h3>\r\n                                </Fade>\r\n                                <p className='txt-responsive-form m0-auto'>Tu experiencia ha aumentado :)</p>\r\n                                <div className='button-container mt-3'>\r\n                                    <button onClick={() => window.open(urlResult, '_blank')} className='button button-light-purple button-option-request ml-auto'>\r\n                                        <FontAwesomeIcon icon={faEye} size='1x' />\r\n                                        {' '}\r\n                                                Ver resultado\r\n                                        </button>\r\n                                    <button onClick={goBackwards} className='button button-blue button-option-request mr-auto'>\r\n                                        <FontAwesomeIcon icon={faHome} size='1x' />\r\n                                        {' '}\r\n                                                Regresar\r\n                                        </button>\r\n                                </div>\r\n                            </div>\r\n                            :\r\n                            <>\r\n                                <div className=''>\r\n                                    <h4>Link de la obra</h4>\r\n                                    {\r\n                                        link\r\n                                            ?\r\n                                            <a target='_blank' href={link}>{link}</a>\r\n                                            :\r\n                                            <p>No existe link</p>\r\n                                    }\r\n                                    <div className='form-group'>\r\n                                        <h4>Diseño terminado</h4>\r\n                                        {\r\n                                            design\r\n                                                ?\r\n                                                <button onClick={startSelectDesign} className={`d-flex justify-content-between align-items-center button button-light-purple button-thin stretch ${design ? 'd-flex' : ''}`}>\r\n                                                    <span className='clamp clamp-1'>\r\n                                                        {design.name}\r\n                                                    </span>\r\n                                                    <span onClick={deleteDesign} className='fa fa-times' style={{ color: 'white' }}></span>\r\n                                                </button>\r\n                                                :\r\n                                                <button onClick={startSelectDesign} className={`button button-light-purple button-thin stretch ${design ? 'd-flex' : ''}`}>\r\n                                                    <span>\r\n                                                        Subir diseño\r\n                                        </span>\r\n                                                </button>\r\n                                        }\r\n                                        <input type=\"file\" onChange={selectDesign} accept=\"image/*\" ref={refDesign} className='d-none' id=\"flDiseno\" />\r\n                                    </div>\r\n                                    <div className='form-group'>\r\n                                        <h4>¿Algún comentario o recomendación? (Opcional)</h4>\r\n                                        <textarea minLength=\"1\" maxLength=\"1000\" rows=\"4\" value={comment} onChange={updComment} placeholder=\"Ejemplo: Considero que tiene un enganche bueno, pero no es suficiente. Debería enganchar mucho desde un inicio...\"></textarea>\r\n                                    </div>\r\n                                </div>\r\n                                <div className='form-buttons-container mt-3'>\r\n                                    {\r\n                                        loading\r\n                                            ?\r\n                                            <span className='button button-green justify-self-right'>\r\n                                                Enviando\r\n                                                {' '}\r\n                                                <ClipLoader color={'#fff'} loading={true} css={overrideSpinnerInline} size={22} />\r\n                                            </span>\r\n                                            :\r\n                                            <button onClick={send} className='button button-green justify-self-right'>\r\n                                                <FontAwesomeIcon icon={faPaperPlane} size='1x' />\r\n                                                {' '}\r\n                                                <span className='d-none d-md-inline'>\r\n                                                    Enviar\r\n                                                </span>\r\n                                            </button>\r\n                                    }\r\n                                </div>\r\n                            </>\r\n                    }\r\n                </section>\r\n            </main>\r\n            <Footer />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Preparation;","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\pages\\prev_resultado.js",["230","231","232","233","234","235"],"C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\customRouter\\publicRoute.js",[],"C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\customRouter\\privateRoute.js",[],"C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\drawer\\index.js",[],"C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\firebase.js",[],"C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\api.js",["236","237"],"//import 'babel-polyfill';\r\nimport firebase from './firebase';\r\nimport { setProfileStorage } from './helpers/userStorage';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst firestore = firebase.firestore();\r\nconst auth = firebase.auth();\r\nconst storage = firebase.storage();\r\n\r\n// Solicitudes\r\n\r\nexport const takeRequest = async (requestId, type, expDays) => {\r\n    return request('takeRequest', { requestId, type, expDays }, 'POST', true);\r\n}\r\n\r\nexport const saveRequest = async (object) => {\r\n    return firestore.collection('solicitudes').doc().set({ ...object, createdAt: firebase.firestore.FieldValue.serverTimestamp() }, { merge: true });\r\n}\r\n\r\nexport const setRequestDone = async (data) => {\r\n    return request('generateResultRequest', data, 'POST', true);\r\n}\r\n\r\nexport const getRequest = async (requestId) => {\r\n    return firestore.collection('solicitudes').doc(requestId).get()\r\n        .then(doc => {\r\n            if (doc.exists) {\r\n                return { data: { ...doc.data(), id: doc.id } }\r\n            } else {\r\n                return { error: 'No existe una solicitud con ese id' }\r\n            }\r\n        })\r\n        .catch(error => {\r\n            return { error }\r\n        })\r\n}\r\n\r\nexport const getRequests = async (workerId, type, status, startAfter, limit = 10) => {\r\n\r\n    let request = firestore.collection('solicitudes').where('type', '==', type).where('status', '==', status).orderBy('createdAt', 'desc');\r\n\r\n    if (startAfter) {\r\n        request = request.startAfter(startAfter);\r\n    }\r\n\r\n    if (workerId) {\r\n        request = request.where('takenBy', '==', workerId);\r\n    }\r\n\r\n    return request.limit(limit + 1).get()\r\n        .then(qsn => {\r\n            let list = [];\r\n            qsn.forEach(doc => list.push({ ...doc.data(), id: doc.id }));\r\n            const isLast = list.length < limit + 1;\r\n            if (!isLast) list.pop();\r\n            return { list, isLast };\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n            return { list: [] };\r\n        });;\r\n}\r\n\r\n/*export const listenRequests = (workerId, type, status, limit = 10, callback) => {\r\n    let request = firestore.collection('solicitudes').where('type', '==', type).where('status', '==', status).orderBy('createdAt', 'desc');\r\n    if (workerId) {\r\n        request.where('takenBy', workerId);\r\n    }\r\n    return request.limit(limit).onSnapshot(qsn => {\r\n        let list = [];\r\n        qsn.forEach(doc => list.push({ ...doc.data(), id: doc.id }));\r\n        callback(list);\r\n    });\r\n}*/\r\n\r\n// Estadísticas\r\n\r\nexport const getStatistics = async keys => {\r\n    let promises = keys.map(key => {\r\n        return firestore.collection('estadisticas').doc(key).get()\r\n            .then(doc => {\r\n                if (doc.exists) {\r\n                    return { statistics: { ...doc.data() } }\r\n                } else {\r\n                    return { error: 'No se pudo obtener la estadística ' + key }\r\n                }\r\n            })\r\n            .catch(error => {\r\n                return { error }\r\n            })\r\n    });\r\n    return Promise.all(promises);\r\n}\r\n\r\n// Sesión\r\n\r\nexport const getProfile = async (uid) => {\r\n    return firestore.collection('perfiles').doc(uid).get()\r\n        .then(doc => {\r\n            if (doc.exists) {\r\n                return { profile: { ...doc.data() } }\r\n            } else {\r\n                return { error: 'No existe un usuario con ese id' }\r\n            }\r\n        })\r\n        .catch(error => {\r\n            return { error }\r\n        })\r\n}\r\n\r\nexport const login = async (email, password) => {\r\n    return auth.signInWithEmailAndPassword(email, password)\r\n        .then(user => {\r\n            return getProfile(user.user.uid).then(({ profile, error }) => {\r\n                if (!error) {\r\n                    setProfileStorage(profile);\r\n                    return { user };\r\n                } else {\r\n                    logout();\r\n                    return { error: 'No se pudo obtener el perfil' };\r\n                }\r\n            })\r\n        })\r\n        .catch(error => {\r\n            let errMessage;\r\n            switch (error.code) {\r\n                case 'auth/invalid-email':\r\n                    errMessage = 'El usuario es inválido';\r\n                    break;\r\n                case 'auth/user-disabled':\r\n                    errMessage = 'El usuario ha sido deshabilitado';\r\n                    break;\r\n                case 'auth/user-not-found':\r\n                    errMessage = 'El usuario no ha sido encontrado';\r\n                    break;\r\n                case 'auth/wrong-password':\r\n                    errMessage = 'El usuario es inválido';\r\n                    break;\r\n                case 'auth/too-many-requests':\r\n                    errMessage = 'Ha habido muchos intentos de login. Inténtalo en unos minutos.';\r\n                    break;\r\n                default:\r\n                    errMessage = 'Ha ocurrido un error con el servicio de autenticación';\r\n            }\r\n            return { error: errMessage };\r\n        });\r\n}\r\n\r\nexport const logout = async () => {\r\n    return auth.signOut().then(function () {\r\n        setProfileStorage(null);\r\n        return true;\r\n    }).catch(function (error) {\r\n        console.log(error.message);\r\n    });\r\n}\r\n\r\n// Archivos\r\nexport const uploadImage = async (ruta, archivo) => {\r\n    return new Promise((resolve, reject) => {\r\n\r\n        let storageRef = storage.ref();\r\n        let imgRef = storageRef.child(`${ruta}/${uuidv4()}`);\r\n        const task = imgRef.put(archivo);\r\n        task.on('state_changed', function (snapshot) {\r\n            var progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n            console.log('Upload is ' + progress + '% done');\r\n            switch (snapshot.state) {\r\n                case firebase.storage.TaskState.PAUSED: // or 'paused'\r\n                    console.log('Upload is paused');\r\n                    break;\r\n                case firebase.storage.TaskState.RUNNING: // or 'running'\r\n                    console.log('Upload is running');\r\n                    break;\r\n            }\r\n        }, function (error) {\r\n            reject(error);\r\n        }, function () {\r\n            task.snapshot.ref.getDownloadURL().then(function (downloadURL) {\r\n                resolve(downloadURL);\r\n            });\r\n        });\r\n    })\r\n}\r\n\r\n// Funciones firestore\r\nexport const getGeneratedId = async (collection) => {\r\n    return firestore.collection(collection).doc().id;\r\n}\r\n\r\n// Api fetch\r\nexport const request = async (path, data, method, authorized) => {\r\n    const result = await fetch(process.env.REACT_APP_ENDPOINT + path, {\r\n        method: method,\r\n        body: data ? JSON.stringify(data) : null,\r\n        headers: {\r\n            Authorization: authorized ? 'Bearer ' + await auth.currentUser.getIdToken() : null\r\n        }\r\n    });\r\n    if (result.status == '200') {\r\n        return await result.json();\r\n    } else {\r\n        return { error: result.statusText };\r\n    }\r\n}","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\helpers\\userStorage.js",[],"C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\modal\\designDetail.js",["238","239","240","241","242","243","244","245","246","247","248","249","250"],"import React, { useContext, useState, useEffect } from 'react';\r\nimport ConfirmationModal from './confirmationModal';\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport Avatar from '../avatar';\r\nimport Zoom from 'react-reveal/Zoom';\r\nimport { contactTypes } from '../../data/data';\r\nimport { getDateText, getExpDateText } from '../../helpers/functions';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { designTypes } from '../../data/data';\r\nimport { AuthContext } from '../../context/AuthContext';\r\nimport { css } from \"@emotion/core\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faAngleDown, faHandPaper, faLayerGroup, faPaintBrush, faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport './modals.css';\r\n\r\nconst iconSize = 20;\r\nconst color = '#756F86';\r\n\r\nconst overrideSpinnerInline = css`\r\n  display: inline-block;\r\n  margin-left: .6rem;\r\n  vertical-align: middle;\r\n`;\r\n\r\nconst Modal = ({ isOpen, data, takeRequest, takingRequest, succesfulRequestTake, close }) => {\r\n\r\n    const { logged } = useContext(AuthContext);\r\n\r\n    const [openConfirmationModal, setOpenConfirmationModal] = useState(false);\r\n\r\n    const history = useHistory();\r\n\r\n    const getMessengerTypeName = (type) => {\r\n        const messengerType = contactTypes.find(c => c.type == type);\r\n        if (messengerType) {\r\n            return messengerType.name;\r\n        }\r\n        return '';\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (isOpen) {\r\n            document.body.style.overflow = 'hidden';\r\n        } else {\r\n            document.body.style.overflow = 'unset';\r\n        }\r\n    }, [isOpen]);\r\n\r\n    let styles = '';\r\n    if (isOpen) {\r\n        styles = 'open';\r\n    } else {\r\n        styles = 'close';\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (isOpen) {\r\n            document.body.style.overflow = 'hidden';\r\n        } else {\r\n            document.body.style.overflow = 'unset';\r\n        }\r\n    }, [isOpen]);\r\n\r\n    const getDesignType = (type) => {\r\n        const obj = designTypes.find(e => e.type == type);\r\n        if (obj) {\r\n            return obj;\r\n        }\r\n        return {};\r\n    }\r\n    const { icon, text } = getDesignType(data?.designType);\r\n\r\n    const confirm = () => {\r\n        setOpenConfirmationModal(false);\r\n        takeRequest(data?.id);\r\n    }\r\n\r\n    const isTakenByMe = data?.takenBy == logged.uid;\r\n\r\n    if (isTakenByMe) {\r\n        getExpDateText(data?.takenAt, data?.expDate)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ConfirmationModal\r\n                isOpen={openConfirmationModal}\r\n                title='Casi listo'\r\n                message='Al aceptar, tienes tres días para entregar la crítica o acordar una fecha con la persona interesada. ¿Continuar?'\r\n                confirm={confirm}\r\n                close={() => setOpenConfirmationModal(false)} />\r\n            <div className={'overlay overlay-modal ' + styles} onClick={close}>\r\n            </div>\r\n            <Zoom bottom collapse when={isOpen}>\r\n                <div className={'modal ' + styles}>\r\n                    <div className='modal-container'>\r\n                        <div className='header-container position-relative'>\r\n                            <Avatar clases='modal-avatar' />\r\n                            <div className='title-container'>\r\n                                <h3 className='clamp clamp-1'>{data?.title}</h3>\r\n                                <p>{\r\n                                    data?.status == 'DISPONIBLE' || isTakenByMe && data?.status == 'HECHO'\r\n                                        ?\r\n                                        getDateText(data?.createdAt.seconds * 1000)\r\n                                        :\r\n                                        isTakenByMe && data?.status == 'TOMADO'\r\n                                            ?\r\n                                            getExpDateText(data?.expDate.seconds * 1000)\r\n                                            :\r\n                                            null\r\n                                }</p>\r\n                            </div>\r\n                            <FontAwesomeIcon icon={faAngleDown} onClick={close} className='close-icon' />\r\n                        </div>\r\n                        <div className='description-container'>\r\n                            <h4>Tipo de diseño</h4>\r\n                            <span className={icon} style={{ color, fontSize: iconSize }}>{data?.icon}</span>\r\n                            <p className='d-inline ml-1'>{text}</p>\r\n                            <h4>¿Qué quiero transmitir?</h4>\r\n                            <p>{data?.intention || 'No hay intención'}</p>\r\n                            <h4>Boceto de referencia</h4>\r\n                            {\r\n                                data?.urlImg\r\n                                    ?\r\n                                    <div>\r\n                                        <a target='_blank' href={data?.urlImg}>\r\n                                            <img src={data?.urlImg} alt='img-boceto' className='sample-design-detail' />\r\n                                        </a>\r\n                                    </div>\r\n                                    :\r\n                                    <p>'No hay boceto de referencia</p>\r\n                            }\r\n                            <h4>Link de la obra</h4>\r\n                            {\r\n                                data?.link\r\n                                    ?\r\n                                    <a target='_blank' href={data?.link}>{data?.link}</a>\r\n                                    :\r\n                                    <p>No existe link</p>\r\n                            }\r\n                            <h4>Pseudónimo del autor</h4>\r\n                            <p>{data?.author || 'Sin nombre'}</p>\r\n                            {\r\n                                isTakenByMe\r\n                                &&\r\n                                <>\r\n                                    <h4>Datos de contacto</h4>\r\n                                    <p className=\"m-0\"><b>Nombre:</b> {data?.name}</p>\r\n                                    <p className=\"m-0\"><b>Contacto:</b> {data?.phone} ({getMessengerTypeName(data?.messengerType)})</p>\r\n                                    <p className=\"m-0 mb-2\"><b>Correo:</b> {data?.email}</p>\r\n                                </>\r\n                            }\r\n                        </div>\r\n                        <div className=\"footer-card-container\">\r\n                            <div className='button-container'>\r\n                                {\r\n                                    takingRequest\r\n                                        ?\r\n                                        <button onClick={() => { }} className='button button-blue button-option-request'>\r\n                                            Cargando\r\n                                                {' '}\r\n                                            <ClipLoader color={'#fff'} loading={true} css={overrideSpinnerInline} size={22} />\r\n                                        </button>\r\n                                        :\r\n                                        <>\r\n                                            <>\r\n                                                {\r\n                                                    data?.status == 'DISPONIBLE'\r\n                                                        ?\r\n                                                        <button onClick={() => setOpenConfirmationModal(true)} className='button button-blue button-option-request'>\r\n                                                            <FontAwesomeIcon color={'#fff'} icon={faHandPaper} className='icon' />\r\n                                                            Tomar pedido\r\n                                                        </button>\r\n                                                        :\r\n                                                        data?.status == 'TOMADO' && isTakenByMe\r\n                                                            ?\r\n                                                            <button onClick={() => history.push('prep_diseno', { data })} className='button button-green button-option-request'>\r\n                                                                <FontAwesomeIcon color={'#fff'} icon={faPaintBrush} className='icon' />\r\n                                                            Iniciar diseño\r\n                                                            </button>\r\n                                                            :\r\n                                                            null\r\n                                                }\r\n                                            </>\r\n                                            {\r\n                                                data?.status == 'HECHO' && isTakenByMe\r\n                                                && (\r\n                                                    <button onClick={() => history.push('prev_resultado', { data })} className='button button-green button-option-request'>\r\n                                                        <FontAwesomeIcon color={'#fff'} icon={faLayerGroup} className='icon' />\r\n                                                        Ir a resultado\r\n                                                    </button>\r\n                                                )\r\n                                            }\r\n                                            <button onClick={close} className='button button-red button-option-request'>\r\n                                                <FontAwesomeIcon color={'#fff'} icon={faTimes} className='icon' />\r\n                                                Cerrar\r\n                                            </button>\r\n                                        </>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Zoom>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Modal;","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\modal\\critiqueDetail.js",["251","252","253","254","255","256","257","258","259","260","261","262"],"import React, { useContext, useState, useEffect } from 'react';\r\nimport ConfirmationModal from './confirmationModal';\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport Avatar from '../avatar';\r\nimport Zoom from 'react-reveal/Zoom';\r\nimport { contactTypes } from '../../data/data';\r\nimport { getDateText, getExpDateText } from '../../helpers/functions';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { critiquePoints } from '../../data/data';\r\nimport { AuthContext } from '../../context/AuthContext';\r\nimport { css } from \"@emotion/core\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faAngleDown, faEdit, faHandPaper, faLayerGroup, faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport './modals.css';\r\n\r\nconst overrideSpinnerInline = css`\r\n  display: inline-block;\r\n  margin-left: .6rem;\r\n  vertical-align: middle;\r\n`;\r\n\r\nconst Modal = ({ isOpen, data, takeRequest, takingRequest, succesfulRequestTake, close }) => {\r\n\r\n    const { logged } = useContext(AuthContext);\r\n\r\n    const [openConfirmationModal, setOpenConfirmationModal] = useState(false);\r\n\r\n    const history = useHistory();\r\n\r\n    const getMessengerTypeName = (type) => {\r\n        const messengerType = contactTypes.find(c => c.type == type);\r\n        if (messengerType) {\r\n            return messengerType.name;\r\n        }\r\n        return '';\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (isOpen) {\r\n            document.body.style.overflow = 'hidden';\r\n        } else {\r\n            document.body.style.overflow = 'unset';\r\n        }\r\n    }, [isOpen]);\r\n\r\n    let styles = '';\r\n    if (isOpen) {\r\n        styles = 'open';\r\n    } else {\r\n        styles = 'close';\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (isOpen) {\r\n            document.body.style.overflow = 'hidden';\r\n        } else {\r\n            document.body.style.overflow = 'unset';\r\n        }\r\n    }, [isOpen]);\r\n\r\n    const getAbrevPointName = (id) => {\r\n        const obj = critiquePoints.find(e => e.id == id);\r\n        if (obj) {\r\n            return obj.abrev;\r\n        }\r\n        return '';\r\n    }\r\n\r\n    const confirm = () => {\r\n        setOpenConfirmationModal(false);\r\n        takeRequest(data?.id);\r\n    }\r\n\r\n    const isTakenByMe = data?.takenBy == logged.uid;\r\n\r\n    return (\r\n        <>\r\n            <ConfirmationModal\r\n                isOpen={openConfirmationModal}\r\n                title='Casi listo'\r\n                message='Al aceptar, tienes tres días para entregar la crítica o acordar una fecha con la persona interesada. ¿Continuar?'\r\n                confirm={confirm}\r\n                close={() => setOpenConfirmationModal(false)} />\r\n            <div className={'overlay overlay-modal ' + styles} onClick={close}>\r\n            </div>\r\n            <Zoom bottom collapse when={isOpen}>\r\n                <div className={'modal ' + styles}>\r\n                    <div className='modal-container'>\r\n                        <div className='header-container position-relative'>\r\n                            <Avatar clases='modal-avatar' />\r\n                            <div className='title-container'>\r\n                                <h3 className='clamp clamp-1'>{data?.title}</h3>\r\n                                <p>{\r\n                                    data?.status == 'DISPONIBLE' || isTakenByMe && data?.status == 'HECHO'\r\n                                        ?\r\n                                        getDateText(data?.createdAt.seconds * 1000)\r\n                                        :\r\n                                        isTakenByMe && data?.status == 'TOMADO'\r\n                                            ?\r\n                                            getExpDateText(data?.expDate.seconds * 1000)\r\n                                            :\r\n                                            null\r\n                                }</p>\r\n                            </div>\r\n                            <FontAwesomeIcon icon={faAngleDown} onClick={close} className='close-icon' />\r\n                        </div>\r\n                        <div className='description-container'>\r\n                            <p>{data?.about || 'No hay descripción'}</p>\r\n                            <h4>Link de la obra</h4>\r\n                            {\r\n                                data?.link\r\n                                    ?\r\n                                    <a target='_blank' href={data?.link}>{data?.link}</a>\r\n                                    :\r\n                                    <p>No existe link</p>\r\n                            }\r\n                            <h4>¿Qué quiero transmitir?</h4>\r\n                            <p>{data?.intention || 'No hay intención'}</p>\r\n                            <h4>Puntos a criticar</h4>\r\n                            <ul>\r\n                                {\r\n                                    data?.points?.map(point => (\r\n                                        <li key={point}>{getAbrevPointName(point)}</li>\r\n                                    ))\r\n                                }\r\n                            </ul>\r\n                            {\r\n                                (!data?.points || data?.points?.length < 1)\r\n                                &&\r\n                                <p>No se han especificado puntos</p>\r\n                            }\r\n                            {\r\n                                isTakenByMe\r\n                                &&\r\n                                <>\r\n                                    <h4>Datos de contacto</h4>\r\n                                    <p className=\"m-0\"><b>Nombre:</b> {data?.name}</p>\r\n                                    <p className=\"m-0\"><b>Contacto:</b> {data?.phone} ({getMessengerTypeName(data?.messengerType)})</p>\r\n                                    <p className=\"m-0 mb-2\"><b>Correo:</b> {data?.email}</p>\r\n                                </>\r\n                            }\r\n                        </div>\r\n                        <div className=\"footer-card-container\">\r\n                            <div className='button-container'>\r\n                                {\r\n                                    takingRequest\r\n                                        ?\r\n                                        <button onClick={() => { }} className='button button-blue button-option-request'>\r\n                                            Cargando\r\n                                                {' '}\r\n                                            <ClipLoader color={'#fff'} loading={true} css={overrideSpinnerInline} size={22} />\r\n                                        </button>\r\n                                        :\r\n                                        <>\r\n                                            <>\r\n                                                {\r\n                                                    data?.status == 'DISPONIBLE'\r\n                                                        ?\r\n                                                        <button onClick={() => setOpenConfirmationModal(true)} className='button button-blue button-option-request'>\r\n                                                            <FontAwesomeIcon color={'#fff'} icon={faHandPaper} className='icon' />\r\n                                                            Tomar pedido\r\n                                                        </button>\r\n                                                        :\r\n                                                        data?.status == 'TOMADO' && isTakenByMe\r\n                                                            ?\r\n                                                            <button onClick={() => history.push('prep_critica', { data })} className='button button-green button-option-request'>\r\n                                                                <FontAwesomeIcon color={'#fff'} icon={faEdit} className='icon' />\r\n                                                            Iniciar crítica\r\n                                                            </button>\r\n                                                            :\r\n                                                            null\r\n                                                }\r\n                                            </>\r\n                                            {\r\n                                                data?.status == 'HECHO' && isTakenByMe\r\n                                                && (\r\n                                                    <button onClick={() => history.push('prev_resultado', { data })} className='button button-green button-option-request'>\r\n                                                        <FontAwesomeIcon color={'#fff'} icon={faLayerGroup} className='icon' />\r\n                                                        Ir a resultado\r\n                                                    </button>\r\n                                                )\r\n                                            }\r\n                                            <button onClick={close} className='button button-red button-option-request'>\r\n                                                <FontAwesomeIcon color={'#fff'} icon={faTimes} className='icon' />\r\n                                                Cerrar\r\n                                            </button>\r\n                                        </>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </Zoom>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Modal;","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\footer\\footer.js",[],"C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\data\\data.js",[],"C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\hooks\\useStepObserver.js",[],"C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\stories-carrousel\\carrousel.js",[],"C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\home-panorama\\panorama.js",[],"C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\forms\\step-manager\\step-manager.js",[],"C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\navbar\\index.js",[],"C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\request-card\\index.js",[],"C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\dropdown-image\\index.js",[],"C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\drawer\\drawer.js",["263"],"import React, { useEffect, useContext } from 'react'\r\nimport { DrawerContext } from '../../context/DrawerContext'\r\nimport { AuthContext } from '../../context/AuthContext'\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { logout } from '../../api'\r\nimport './drawer.css'\r\n\r\nconst Drawer = () => {\r\n\r\n    const { logged } = useContext(AuthContext);\r\n    const { isOpen, close } = useContext(DrawerContext);\r\n\r\n    let history = useHistory();\r\n\r\n    const logoutUser = (e) => {\r\n        e.preventDefault();\r\n        logout()\r\n            .then(res => {\r\n                if (res) {\r\n                    close();\r\n                    history.push('/login');\r\n                }\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (isOpen) {\r\n            document.body.style.overflow = 'hidden';\r\n        } else {\r\n            document.body.style.overflow = 'unset';\r\n        }\r\n    }, [isOpen]);\r\n\r\n    let styles = '';\r\n    if (isOpen) {\r\n        styles = 'open';\r\n    } else {\r\n        styles = 'close';\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={'overlay ' + styles} onClick={close}>\r\n            </div>\r\n            <div className={'drawer ' + styles}>\r\n                {\r\n                    logged\r\n                        ?\r\n                        <a onClick={logoutUser} className='btn-drawer'>\r\n                            Salir\r\n                        </a>\r\n                        :\r\n                        <>\r\n                            <Link to='/sol_critica' onClick={close} className='btn-drawer'>\r\n                                Pide tu crítica\r\n                            </Link>\r\n                            <Link to='/sol_diseno' onClick={close} className='btn-drawer'>\r\n                                Pide tu diseño\r\n                            </Link>\r\n                            <Link to='/login' onClick={close} className='btn-drawer'>\r\n                                Login de creativos\r\n                            </Link>\r\n                        </>\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Drawer;","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\tabs\\index.js",[],"C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\tag\\index.js",[],"C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\forms\\forms-steps\\index.js",[],"C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\loading-screen\\index.js",[],"C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\helpers\\functions.js",[],"C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\modal\\confirmationModal.js",[],"C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\navbar\\navbar.js",["264","265"],"import React, { useRef, useState, useContext, useEffect } from 'react'\r\nimport Avatar from '../avatar'\r\nimport { useOutsideListener } from '../../hooks/useOutsideListener';\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { logout } from '../../api'\r\nimport { Link } from \"react-router-dom\"\r\nimport { DrawerContext } from '../../context/DrawerContext'\r\nimport { AuthContext } from '../../context/AuthContext'\r\nimport { getProfileStorage } from '../../helpers/userStorage'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faAngleDown } from '@fortawesome/free-solid-svg-icons';\r\nimport Logo from '../../img/logo.png'\r\nimport Sanguchito from '../../img/sanguchito.svg'\r\nimport './navbar.css'\r\n\r\nconst Navbar = ({ startTransparent }) => {\r\n\r\n    const { open, close } = useContext(DrawerContext);\r\n    const { logged } = useContext(AuthContext);\r\n\r\n    const [openOptions, setOpenOptions] = useState(false);\r\n    let history = useHistory();\r\n\r\n    const outsideListenerRef = useRef(null); // Escucha cuando se hace click fuera de\r\n    const arrowTogglerRef = useRef(null);\r\n\r\n    const { outsideListener$ } = useOutsideListener(outsideListenerRef);\r\n    const [scrolled, setScrolled] = useState(false);\r\n    const [width, setWidth] = useState(0);\r\n\r\n    const handleScroll = () => {\r\n        const offset = window.scrollY\r\n        if (offset > 20) {\r\n            setScrolled(true)\r\n        } else {\r\n            setScrolled(false)\r\n        }\r\n    }\r\n\r\n    const logoutUser = (e) => {\r\n        e.preventDefault();\r\n        logout()\r\n            .then(res => {\r\n                if (res) {\r\n                    close();\r\n                    history.push('/login');\r\n                }\r\n            })\r\n    }\r\n\r\n    const toggleOptionsContainer = () => {\r\n        setOpenOptions(!openOptions);\r\n    }\r\n\r\n    const updWith = () => {\r\n        setWidth(window.innerWidth);\r\n    }\r\n\r\n    useEffect(() => {\r\n        outsideListener$.subscribe(event => {\r\n            if (arrowTogglerRef.current && !arrowTogglerRef.current.contains(event.target)) {\r\n                setOpenOptions(false);\r\n            }\r\n        })\r\n    }, [outsideListener$, arrowTogglerRef])\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"scroll\", handleScroll)\r\n        return () => window.removeEventListener(\"scroll\", handleScroll)\r\n    }, [scrolled]);\r\n\r\n    useEffect(() => {\r\n        if (width === 0) {\r\n            setWidth(window.innerWidth);\r\n        }\r\n\r\n        if (width < 768) {\r\n            setOpenOptions(false);\r\n        }\r\n\r\n        window.addEventListener('resize', updWith);\r\n        return () => window.removeEventListener('resize', updWith);\r\n    }, [width]);\r\n\r\n    let navClasses = 'main-navbar';\r\n    if (!startTransparent || scrolled) {\r\n        navClasses += ' navbar-scrolled';\r\n    }\r\n\r\n    let optionsClasses = 'container-submenu-navbar';\r\n    if (openOptions) {\r\n        optionsClasses += ' open';\r\n    } else {\r\n        optionsClasses += ' close';\r\n    }\r\n\r\n    let fName, lName, urlImg;\r\n    const profile = getProfileStorage();\r\n    if (profile) {\r\n        fName = profile.fName;\r\n        lName = profile.lName;\r\n        urlImg = profile.urlImg;\r\n    }\r\n\r\n    return (\r\n        <nav className={navClasses}>\r\n            <div className='container-xl container-navbar position-relative'>\r\n                <Link to='/' className='logo-header'>\r\n                    <img alt='logo' src={Logo} />\r\n                </Link>\r\n                <img alt='sanguchito' onClick={open} src={Sanguchito} className='img-sanguchito' />\r\n                <div className='navbar-nav'>\r\n                    {\r\n                        logged\r\n                            ?\r\n                            <>\r\n                                <span className='btn-nav'>\r\n                                    Hola, {fName}\r\n                                </span>\r\n                                <Avatar clases='img-profile-navbar' />\r\n                                <span ref={arrowTogglerRef} onClick={toggleOptionsContainer} className='btn-nav m-0 pl-1 pr-1'>\r\n                                    <FontAwesomeIcon icon={faAngleDown} size='1x' />\r\n                                </span>\r\n                            </>\r\n                            :\r\n                            <>\r\n                                <Link to='/sol_critica' className='btn-nav'>\r\n                                    Críticas\r\n                                </Link>\r\n                                <Link to='/sol_diseno' className='btn-nav'>\r\n                                    Diseños\r\n                                </Link>\r\n                                <Link to='/login' className='btn-nav'>\r\n                                    Login\r\n                                </Link>\r\n                            </>\r\n                    }\r\n                </div>\r\n            </div>\r\n            <div ref={outsideListenerRef} className={optionsClasses}>\r\n                <ul>\r\n                    <li onClick={logoutUser}>\r\n                        Salir\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar;\r\n","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\request-card\\card.js",["266","267","268","269","270","271","272","273","274","275","276"],"import React, { useContext } from 'react';\r\nimport Avatar from '../avatar';\r\nimport { getDateText, getExpDateText } from '../../helpers/functions';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { AuthContext } from '../../context/AuthContext';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faEdit, faPaintBrush, faEye, faDownload, faLayerGroup } from '@fortawesome/free-solid-svg-icons';\r\nimport './card.css'\r\n\r\nconst Card = React.forwardRef(({ data, select }, ref) => {\r\n\r\n    const { logged } = useContext(AuthContext);\r\n    const history = useHistory();\r\n\r\n    const isTakenByMe = data?.takenBy == logged.uid;\r\n\r\n    return (\r\n        <div ref={ref} className='request-card-container'>\r\n            <div className='header-container'>\r\n                <Avatar clases='request-avatar' />\r\n                <div className='title-container'>\r\n                    <h3 className='clamp clamp-1'>{data?.title}</h3>\r\n                    <p>\r\n                        {\r\n                            data?.status == 'DISPONIBLE' || isTakenByMe && data?.status == 'HECHO'\r\n                                ?\r\n                                getDateText(data?.createdAt.seconds * 1000)\r\n                                :\r\n                                isTakenByMe && data?.status == 'TOMADO'\r\n                                    ?\r\n                                    getExpDateText(data?.expDate.seconds * 1000)\r\n                                    :\r\n                                    null\r\n                        }\r\n                    </p>\r\n                </div>\r\n            </div>\r\n            <div className='description-container'>\r\n                <p className='clamp clamp-2'>\r\n                    {data.intention}\r\n                </p>\r\n            </div>\r\n            <div className='footer-card-container'>\r\n                <div className='button-container'>\r\n                    {\r\n                        data?.status == 'TOMADO' && isTakenByMe\r\n                        && (\r\n                            data?.type == 'CRITICA'\r\n                                ?\r\n                                <button onClick={() => history.push('prep_critica', { data })} className='button button-green button-option-request'>\r\n                                    <FontAwesomeIcon color={'#fff'} icon={faEdit} className='icon' />\r\n                                Iniciar crítica\r\n                            </button>\r\n                                :\r\n                                data?.type == 'DISENO'\r\n                                    ?\r\n                                    <button onClick={() => history.push('prep_diseno', { data })} className='button button-green button-option-request'>\r\n                                        <FontAwesomeIcon color={'#fff'} icon={faPaintBrush} className='icon' />\r\n                                    Iniciar diseño\r\n                                </button>\r\n                                    :\r\n                                    null\r\n                        )\r\n                    }\r\n                    {\r\n                        data?.status == 'HECHO' && isTakenByMe\r\n                        && (\r\n                            <button onClick={() => history.push('prev_resultado', { data })} className='button button-green button-option-request'>\r\n                                <FontAwesomeIcon color={'#fff'} icon={faLayerGroup} className='icon' />\r\n                                Ir a resultado\r\n                            </button>\r\n                        )\r\n                    }\r\n                    <button onClick={() => select(data)} className='button button-blue button-option-request'>\r\n                        <FontAwesomeIcon color={'#fff'} icon={faEye} className='icon' />\r\n                        Ver\r\n                </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default Card;","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\dropdown-image\\dropdown.js",[],"C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\tabs\\tabs.js",["277"],"import React from 'react'\r\nimport ImgVacio from \"../../img/reading-sitting.svg\";\r\nimport InfiniteScroll from 'react-infinite-scroll-component'\r\nimport './tabs.css'\r\n\r\nconst Tabs = ({ tabs, requestList, requestMoreData, hasMore, loader, activeIndex, select, initialLoading, loadingMore, children }) => {\r\n\r\n    const porcAnchoPestana = 100 / tabs.length;\r\n\r\n    const childrenArray = React.Children.toArray(children);\r\n\r\n    const switchTab = (e, index) => {\r\n        e.preventDefault();\r\n        select(index);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"material-tabs\">\r\n                {\r\n                    tabs.map((pestana, index) => (\r\n                        <a key={index} onClick={(e) => switchTab(e, index)} className=\"active\">{pestana}</a>\r\n                    ))\r\n                }\r\n                <span className=\"tab-bar\" style={{ width: `${porcAnchoPestana}%`, left: `${porcAnchoPestana * activeIndex}%` }}></span>\r\n            </div>\r\n            {\r\n\r\n                initialLoading\r\n                    ?\r\n                    loader\r\n                    :\r\n                    requestList && requestList.length > 0\r\n                        ?\r\n                        <InfiniteScroll\r\n                            className=\"tab-content\"\r\n                            dataLength={requestList.length}\r\n                            next={requestMoreData}\r\n                            hasMore={hasMore}\r\n                            loader={loader}>\r\n                            {\r\n                                childrenArray\r\n                            }\r\n                        </InfiniteScroll>\r\n                        :\r\n                        <div>\r\n                            <img src={ImgVacio} className=\"img-vacio\" alt=\"img-vacio\" />\r\n                            <h2 className=\"text-align-center m-0 text-empty\">Oops! aún nada por aquí</h2>\r\n                        </div>\r\n            }\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Tabs;\r\n","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\tag\\tag.js",[],"C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\forms\\forms-steps\\form-steps.js",["278"],"import React from 'react'\r\nimport './form-steps.css'\r\n\r\nconst Steps = ({ activeIndex, navigateTo, steps }) => {\r\n\r\n    const chunksPercentage = 100 / (steps.length + 1);\r\n    const totalWidth = chunksPercentage * (steps.length - 1);\r\n\r\n    return (\r\n        <div className='form-steps'>\r\n            <div className='line' style={{ left: chunksPercentage + '%', width: totalWidth + '%' }}></div>\r\n            {\r\n                steps.map((step, index) => (\r\n                    <div className='step-container'>\r\n                        <div onClick={() => navigateTo(index)} className={`form-step ${index == activeIndex ? 'active' : ''}`}>{index + 1}</div>\r\n                        <div className='step-text'>{step}</div>\r\n                    </div>\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Steps;","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\avatar\\index.js",[],"C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\loading-screen\\loading-screen.js",[],"C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\story-card\\index.js",[],"C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\hooks\\useOutsideListener.js",["279"],"import React, { useRef, useEffect } from \"react\";\r\nimport { Subject } from 'rxjs';\r\n\r\n/**\r\n * Hook that alerts clicks outside of the passed ref\r\n */\r\nexport const useOutsideListener = (ref) => {\r\n\r\n    const outsideListener = useRef(new Subject());\r\n\r\n    useEffect(() => {\r\n        /**\r\n       * Alert if clicked on outside of element\r\n       */\r\n        function handleClickOutside(event) {\r\n            if (ref.current && !ref.current.contains(event.target)) {\r\n                outsideListener.current.next(event);\r\n            }\r\n        }\r\n\r\n        // Bind the event listener\r\n        document.addEventListener(\"mousedown\", handleClickOutside);\r\n        return () => {\r\n            // Unbind the event listener on clean up\r\n            document.removeEventListener(\"mousedown\", handleClickOutside);\r\n        };\r\n    }, [ref]);\r\n\r\n    return {\r\n        outsideListener$: outsideListener.current\r\n    }\r\n\r\n}\r\n","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\avatar\\avatar.js",["280"],"import React, { useState, useEffect } from 'react'\r\nimport GenericUserImg from '../../img/usuario-generico.svg'\r\n\r\nconst Avatar = ({ img, clases }) => {\r\n    const [avatarImg, setAvatarImg] = useState(GenericUserImg);\r\n\r\n    useEffect(() => {\r\n        setAvatarImg(avatarImg);\r\n    }, [img])\r\n\r\n    return (\r\n        <img onError={() => setAvatarImg(GenericUserImg)} alt='img-avatar' src={avatarImg} className={clases} />\r\n    )\r\n}\r\n\r\nexport default Avatar;\r\n","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\story-card\\story_card.js",[],"C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\pages\\test_resultado.js",["281","282","283","284","285","286","287","288","289"],"C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\customRouter\\anyRoute.js",["290"],{"ruleId":"291","replacedBy":"292"},{"ruleId":"293","replacedBy":"294"},{"ruleId":"295","severity":1,"message":"296","line":15,"column":10,"nodeType":"297","messageId":"298","endLine":15,"endColumn":18},{"ruleId":"299","severity":1,"message":"300","line":46,"column":9,"nodeType":"301","messageId":"302","endLine":53,"endColumn":10},{"ruleId":"303","severity":1,"message":"304","line":65,"column":23,"nodeType":"305","messageId":"306","endLine":65,"endColumn":25},{"ruleId":"307","severity":1,"message":"308","line":149,"column":8,"nodeType":"309","endLine":149,"endColumn":37,"suggestions":"310"},{"ruleId":"311","severity":1,"message":"312","line":43,"column":26,"nodeType":"313","messageId":"314","endLine":43,"endColumn":27,"suggestions":"315"},{"ruleId":"303","severity":1,"message":"316","line":83,"column":20,"nodeType":"305","messageId":"306","endLine":83,"endColumn":22},{"ruleId":"303","severity":1,"message":"316","line":84,"column":48,"nodeType":"305","messageId":"306","endLine":84,"endColumn":50},{"ruleId":"311","severity":1,"message":"312","line":160,"column":26,"nodeType":"313","messageId":"314","endLine":160,"endColumn":27,"suggestions":"317"},{"ruleId":"303","severity":1,"message":"304","line":193,"column":35,"nodeType":"305","messageId":"306","endLine":193,"endColumn":37},{"ruleId":"318","severity":1,"message":"319","line":169,"column":45,"nodeType":"320","endLine":169,"endColumn":76},{"ruleId":"311","severity":1,"message":"312","line":193,"column":26,"nodeType":"313","messageId":"314","endLine":193,"endColumn":27,"suggestions":"321"},{"ruleId":"295","severity":1,"message":"322","line":8,"column":10,"nodeType":"297","messageId":"298","endLine":8,"endColumn":24},{"ruleId":"318","severity":1,"message":"319","line":163,"column":45,"nodeType":"320","endLine":163,"endColumn":76},{"ruleId":"303","severity":1,"message":"304","line":69,"column":104,"nodeType":"305","messageId":"306","endLine":69,"endColumn":106},{"ruleId":"303","severity":1,"message":"304","line":74,"column":87,"nodeType":"305","messageId":"306","endLine":74,"endColumn":89},{"ruleId":"303","severity":1,"message":"304","line":77,"column":85,"nodeType":"305","messageId":"306","endLine":77,"endColumn":87},{"ruleId":"303","severity":1,"message":"304","line":77,"column":119,"nodeType":"305","messageId":"306","endLine":77,"endColumn":121},{"ruleId":"303","severity":1,"message":"304","line":87,"column":62,"nodeType":"305","messageId":"306","endLine":87,"endColumn":64},{"ruleId":"303","severity":1,"message":"304","line":95,"column":66,"nodeType":"305","messageId":"306","endLine":95,"endColumn":68},{"ruleId":"299","severity":1,"message":"300","line":168,"column":13,"nodeType":"301","messageId":"302","endLine":175,"endColumn":14},{"ruleId":"303","severity":1,"message":"304","line":200,"column":23,"nodeType":"305","messageId":"306","endLine":200,"endColumn":25},{"ruleId":"303","severity":1,"message":"304","line":34,"column":61,"nodeType":"305","messageId":"306","endLine":34,"endColumn":63},{"ruleId":"303","severity":1,"message":"304","line":65,"column":50,"nodeType":"305","messageId":"306","endLine":65,"endColumn":52},{"ruleId":"303","severity":1,"message":"304","line":78,"column":39,"nodeType":"305","messageId":"306","endLine":78,"endColumn":41},{"ruleId":"303","severity":1,"message":"304","line":102,"column":50,"nodeType":"305","messageId":"306","endLine":102,"endColumn":52},{"ruleId":"323","severity":1,"message":"324","line":102,"column":66,"nodeType":"325","messageId":"326","endLine":102,"endColumn":68},{"ruleId":"323","severity":1,"message":"324","line":102,"column":81,"nodeType":"325","messageId":"326","endLine":102,"endColumn":83},{"ruleId":"303","severity":1,"message":"304","line":102,"column":97,"nodeType":"305","messageId":"306","endLine":102,"endColumn":99},{"ruleId":"303","severity":1,"message":"304","line":106,"column":69,"nodeType":"305","messageId":"306","endLine":106,"endColumn":71},{"ruleId":"318","severity":1,"message":"319","line":126,"column":41,"nodeType":"320","endLine":126,"endColumn":80},{"ruleId":"318","severity":1,"message":"319","line":137,"column":37,"nodeType":"320","endLine":137,"endColumn":74},{"ruleId":"303","severity":1,"message":"304","line":168,"column":66,"nodeType":"305","messageId":"306","endLine":168,"endColumn":68},{"ruleId":"303","severity":1,"message":"304","line":175,"column":70,"nodeType":"305","messageId":"306","endLine":175,"endColumn":72},{"ruleId":"303","severity":1,"message":"304","line":186,"column":62,"nodeType":"305","messageId":"306","endLine":186,"endColumn":64},{"ruleId":"303","severity":1,"message":"304","line":31,"column":61,"nodeType":"305","messageId":"306","endLine":31,"endColumn":63},{"ruleId":"303","severity":1,"message":"304","line":62,"column":51,"nodeType":"305","messageId":"306","endLine":62,"endColumn":53},{"ruleId":"303","severity":1,"message":"304","line":74,"column":39,"nodeType":"305","messageId":"306","endLine":74,"endColumn":41},{"ruleId":"303","severity":1,"message":"304","line":94,"column":50,"nodeType":"305","messageId":"306","endLine":94,"endColumn":52},{"ruleId":"323","severity":1,"message":"324","line":94,"column":66,"nodeType":"325","messageId":"326","endLine":94,"endColumn":68},{"ruleId":"323","severity":1,"message":"324","line":94,"column":81,"nodeType":"325","messageId":"326","endLine":94,"endColumn":83},{"ruleId":"303","severity":1,"message":"304","line":94,"column":97,"nodeType":"305","messageId":"306","endLine":94,"endColumn":99},{"ruleId":"303","severity":1,"message":"304","line":98,"column":69,"nodeType":"305","messageId":"306","endLine":98,"endColumn":71},{"ruleId":"318","severity":1,"message":"319","line":113,"column":37,"nodeType":"320","endLine":113,"endColumn":74},{"ruleId":"303","severity":1,"message":"304","line":157,"column":66,"nodeType":"305","messageId":"306","endLine":157,"endColumn":68},{"ruleId":"303","severity":1,"message":"304","line":164,"column":70,"nodeType":"305","messageId":"306","endLine":164,"endColumn":72},{"ruleId":"303","severity":1,"message":"304","line":175,"column":62,"nodeType":"305","messageId":"306","endLine":175,"endColumn":64},{"ruleId":"327","severity":1,"message":"328","line":50,"column":25,"nodeType":"320","endLine":50,"endColumn":72},{"ruleId":"295","severity":1,"message":"329","line":101,"column":9,"nodeType":"297","messageId":"298","endLine":101,"endColumn":14},{"ruleId":"295","severity":1,"message":"330","line":102,"column":9,"nodeType":"297","messageId":"298","endLine":102,"endColumn":15},{"ruleId":"295","severity":1,"message":"331","line":7,"column":39,"nodeType":"297","messageId":"298","endLine":7,"endColumn":49},{"ruleId":"303","severity":1,"message":"304","line":15,"column":39,"nodeType":"305","messageId":"306","endLine":15,"endColumn":41},{"ruleId":"303","severity":1,"message":"304","line":25,"column":42,"nodeType":"305","messageId":"306","endLine":25,"endColumn":44},{"ruleId":"323","severity":1,"message":"324","line":25,"column":58,"nodeType":"325","messageId":"326","endLine":25,"endColumn":60},{"ruleId":"323","severity":1,"message":"324","line":25,"column":73,"nodeType":"325","messageId":"326","endLine":25,"endColumn":75},{"ruleId":"303","severity":1,"message":"304","line":25,"column":89,"nodeType":"305","messageId":"306","endLine":25,"endColumn":91},{"ruleId":"303","severity":1,"message":"304","line":29,"column":61,"nodeType":"305","messageId":"306","endLine":29,"endColumn":63},{"ruleId":"303","severity":1,"message":"304","line":46,"column":38,"nodeType":"305","messageId":"306","endLine":46,"endColumn":40},{"ruleId":"303","severity":1,"message":"304","line":48,"column":40,"nodeType":"305","messageId":"306","endLine":48,"endColumn":42},{"ruleId":"303","severity":1,"message":"304","line":55,"column":44,"nodeType":"305","messageId":"306","endLine":55,"endColumn":46},{"ruleId":"303","severity":1,"message":"304","line":66,"column":38,"nodeType":"305","messageId":"306","endLine":66,"endColumn":40},{"ruleId":"327","severity":1,"message":"328","line":22,"column":25,"nodeType":"320","endLine":22,"endColumn":96},{"ruleId":"303","severity":1,"message":"304","line":15,"column":94,"nodeType":"305","messageId":"306","endLine":15,"endColumn":96},{"ruleId":"295","severity":1,"message":"332","line":1,"column":8,"nodeType":"297","messageId":"298","endLine":1,"endColumn":13},{"ruleId":"307","severity":1,"message":"333","line":9,"column":8,"nodeType":"309","endLine":9,"endColumn":13,"suggestions":"334"},{"ruleId":"295","severity":1,"message":"335","line":2,"column":8,"nodeType":"297","messageId":"298","endLine":2,"endColumn":14},{"ruleId":"295","severity":1,"message":"336","line":4,"column":8,"nodeType":"297","messageId":"298","endLine":4,"endColumn":18},{"ruleId":"295","severity":1,"message":"337","line":7,"column":8,"nodeType":"297","messageId":"298","endLine":7,"endColumn":19},{"ruleId":"295","severity":1,"message":"338","line":9,"column":10,"nodeType":"297","messageId":"298","endLine":9,"endColumn":13},{"ruleId":"295","severity":1,"message":"339","line":11,"column":22,"nodeType":"297","messageId":"298","endLine":11,"endColumn":27},{"ruleId":"295","severity":1,"message":"340","line":19,"column":12,"nodeType":"297","messageId":"298","endLine":19,"endColumn":19},{"ruleId":"295","severity":1,"message":"341","line":21,"column":12,"nodeType":"297","messageId":"298","endLine":21,"endColumn":16},{"ruleId":"295","severity":1,"message":"342","line":23,"column":12,"nodeType":"297","messageId":"298","endLine":23,"endColumn":17},{"ruleId":"295","severity":1,"message":"343","line":24,"column":12,"nodeType":"297","messageId":"298","endLine":24,"endColumn":18},{"ruleId":"295","severity":1,"message":"344","line":4,"column":10,"nodeType":"297","messageId":"298","endLine":4,"endColumn":18},"no-native-reassign",["345"],"no-negated-in-lhs",["346"],"no-unused-vars","'AnyRoute' is defined but never used.","Identifier","unusedVar","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'requestData'. Either include it or remove the dependency array.","ArrayExpression",["347"],"no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["348","349"],"Expected '!==' and instead saw '!='.",["350","351"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement",["352","353"],"'getGeneratedId' is defined but never used.","no-mixed-operators","Unexpected mix of '||' and '&&'.","LogicalExpression","unexpectedMixedOperator","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'lName' is assigned a value but never used.","'urlImg' is assigned a value but never used.","'faDownload' is defined but never used.","'React' is defined but never used.","React Hook useEffect has a missing dependency: 'avatarImg'. Either include it or remove the dependency array. You can also do a functional update 'setAvatarImg(a => ...)' if you only need 'avatarImg' in the 'setAvatarImg' call.",["354"],"'Footer' is defined but never used.","'ClipLoader' is defined but never used.","'critiqueImg' is defined but never used.","'css' is defined but never used.","'faEye' is defined but never used.","'success' is assigned a value but never used.","'type' is assigned a value but never used.","'title' is assigned a value but never used.","'author' is assigned a value but never used.","'Redirect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"355","fix":"356"},{"messageId":"357","fix":"358","desc":"359"},{"messageId":"360","fix":"361","desc":"362"},{"messageId":"357","fix":"363","desc":"359"},{"messageId":"360","fix":"364","desc":"362"},{"messageId":"357","fix":"365","desc":"359"},{"messageId":"360","fix":"366","desc":"362"},{"desc":"367","fix":"368"},"Update the dependencies array to be: [activeTabIndex, requestData, requestType]",{"range":"369","text":"370"},"removeEscape",{"range":"371","text":"372"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"373","text":"374"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"375","text":"372"},{"range":"376","text":"374"},{"range":"377","text":"372"},{"range":"378","text":"374"},"Update the dependencies array to be: [avatarImg, img]",{"range":"379","text":"380"},[6101,6130],"[activeTabIndex, requestData, requestType]",[1323,1324],"",[1323,1323],"\\",[4803,4804],[4803,4803],[5803,5804],[5803,5803],[285,290],"[avatarImg, img]"]