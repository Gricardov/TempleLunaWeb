[{"C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\index.js":"1","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\TLApp.js":"2","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\context\\DrawerContext.js":"3","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\context\\AuthContext.js":"4","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\pages\\admin.js":"5","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\pages\\login.js":"6","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\pages\\solicitud-critica.js":"7","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\pages\\inicio.js":"8","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\pages\\prep_critica.js":"9","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\pages\\solicitud-diseno.js":"10","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\pages\\prep_diseno.js":"11","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\pages\\prev_resultado.js":"12","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\customRouter\\publicRoute.js":"13","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\customRouter\\privateRoute.js":"14","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\drawer\\index.js":"15","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\firebase.js":"16","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\api.js":"17","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\helpers\\userStorage.js":"18","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\modal\\designDetail.js":"19","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\modal\\critiqueDetail.js":"20","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\footer\\footer.js":"21","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\data\\data.js":"22","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\hooks\\useStepObserver.js":"23","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\stories-carrousel\\carrousel.js":"24","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\home-panorama\\panorama.js":"25","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\forms\\step-manager\\step-manager.js":"26","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\navbar\\index.js":"27","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\request-card\\index.js":"28","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\dropdown-image\\index.js":"29","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\drawer\\drawer.js":"30","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\tabs\\index.js":"31","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\tag\\index.js":"32","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\forms\\forms-steps\\index.js":"33","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\loading-screen\\index.js":"34","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\helpers\\functions.js":"35","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\modal\\confirmationModal.js":"36","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\navbar\\navbar.js":"37","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\request-card\\card.js":"38","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\dropdown-image\\dropdown.js":"39","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\tabs\\tabs.js":"40","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\tag\\tag.js":"41","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\forms\\forms-steps\\form-steps.js":"42","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\avatar\\index.js":"43","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\loading-screen\\loading-screen.js":"44","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\story-card\\index.js":"45","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\hooks\\useOutsideListener.js":"46","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\avatar\\avatar.js":"47","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\story-card\\story_card.js":"48","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\customRouter\\anyRoute.js":"49","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\helmet\\index.js":"50","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\helmet\\helmet-metadata.js":"51","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\modal\\punctuation.js":"52","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\speech-bubble\\speech-bubble.js":"53","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\pages\\ins_evento.js":"54","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\helpers\\validators.js":"55","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\pages\\ins_evento_OBRA-PROFESIONAL-CCADENA-2.js":"56","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\pages\\perfil.js":"57","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\service-card\\index.js":"58","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\pages\\perfil_persona.js":"59","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\pages\\perfil_editorial.js":"60","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\pages\\ins_evento_APRENDE-SER-PAGADO-POR-ESCRIBIR-CRISTI-1.js":"61","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\tooltip\\index.js":"62","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\tooltip\\tooltip.js":"63","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\pages\\solicitud-correccion.js":"64","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\modal\\correctionDetail.js":"65","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\pages\\prep_correccion.js":"66","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\pages\\ins_evento_GRAN-TALLER-TECNICAS-NARRACION-LILI-1.js":"67","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\profile\\mini-profile.js":"68","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\result-preview-card\\index.js":"69","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\result-preview-card\\result-preview-card.js":"70","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\service-card\\service-card.js":"71","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\hooks\\useWindowSize.js":"72","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\modal\\detailRequestModal.js":"73","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\modal\\feedbackModal.js":"74"},{"size":371,"mtime":1619721080375,"results":"75","hashOfConfig":"76"},{"size":2362,"mtime":1621059905171,"results":"77","hashOfConfig":"76"},{"size":924,"mtime":1612329952620,"results":"78","hashOfConfig":"76"},{"size":854,"mtime":1619673846710,"results":"79","hashOfConfig":"76"},{"size":10134,"mtime":1621285892359,"results":"80","hashOfConfig":"76"},{"size":3745,"mtime":1620768875897,"results":"81","hashOfConfig":"76"},{"size":21673,"mtime":1621288524168,"results":"82","hashOfConfig":"76"},{"size":4919,"mtime":1619422693758,"results":"83","hashOfConfig":"76"},{"size":10507,"mtime":1620074676840,"results":"84","hashOfConfig":"76"},{"size":24571,"mtime":1621288382720,"results":"85","hashOfConfig":"76"},{"size":9744,"mtime":1619422693766,"results":"86","hashOfConfig":"76"},{"size":14221,"mtime":1621285363551,"results":"87","hashOfConfig":"76"},{"size":689,"mtime":1617057602450,"results":"88","hashOfConfig":"76"},{"size":690,"mtime":1617057602448,"results":"89","hashOfConfig":"76"},{"size":35,"mtime":1611783381168,"results":"90","hashOfConfig":"76"},{"size":659,"mtime":1612134803982,"results":"91","hashOfConfig":"76"},{"size":8974,"mtime":1621286358802,"results":"92","hashOfConfig":"76"},{"size":1121,"mtime":1617404276690,"results":"93","hashOfConfig":"76"},{"size":10037,"mtime":1621140137222,"results":"94","hashOfConfig":"76"},{"size":9181,"mtime":1621140132434,"results":"95","hashOfConfig":"76"},{"size":1689,"mtime":1611974876703,"results":"96","hashOfConfig":"76"},{"size":5582,"mtime":1621195444698,"results":"97","hashOfConfig":"76"},{"size":651,"mtime":1611963889219,"results":"98","hashOfConfig":"76"},{"size":3948,"mtime":1619721080352,"results":"99","hashOfConfig":"76"},{"size":3637,"mtime":1619721080341,"results":"100","hashOfConfig":"76"},{"size":230,"mtime":1611891779839,"results":"101","hashOfConfig":"76"},{"size":35,"mtime":1610169602941,"results":"102","hashOfConfig":"76"},{"size":33,"mtime":1612493180152,"results":"103","hashOfConfig":"76"},{"size":37,"mtime":1611812649805,"results":"104","hashOfConfig":"76"},{"size":2941,"mtime":1620108666270,"results":"105","hashOfConfig":"76"},{"size":32,"mtime":1615182318143,"results":"106","hashOfConfig":"76"},{"size":32,"mtime":1610813286511,"results":"107","hashOfConfig":"76"},{"size":39,"mtime":1611877771633,"results":"108","hashOfConfig":"76"},{"size":43,"mtime":1612489867120,"results":"109","hashOfConfig":"76"},{"size":6186,"mtime":1620779858659,"results":"110","hashOfConfig":"76"},{"size":2558,"mtime":1615182318130,"results":"111","hashOfConfig":"76"},{"size":5828,"mtime":1621059012853,"results":"112","hashOfConfig":"76"},{"size":5754,"mtime":1621203402666,"results":"113","hashOfConfig":"76"},{"size":2823,"mtime":1620763937292,"results":"114","hashOfConfig":"76"},{"size":5798,"mtime":1621057598787,"results":"115","hashOfConfig":"76"},{"size":251,"mtime":1610819468986,"results":"116","hashOfConfig":"76"},{"size":850,"mtime":1619422693722,"results":"117","hashOfConfig":"76"},{"size":35,"mtime":1612494927695,"results":"118","hashOfConfig":"76"},{"size":847,"mtime":1621048134945,"results":"119","hashOfConfig":"76"},{"size":39,"mtime":1610293845546,"results":"120","hashOfConfig":"76"},{"size":913,"mtime":1615182318153,"results":"121","hashOfConfig":"76"},{"size":1412,"mtime":1620770398016,"results":"122","hashOfConfig":"76"},{"size":736,"mtime":1619721080355,"results":"123","hashOfConfig":"76"},{"size":453,"mtime":1615182318114,"results":"124","hashOfConfig":"76"},{"size":44,"mtime":1615182318124,"results":"125","hashOfConfig":"76"},{"size":2063,"mtime":1617057602455,"results":"126","hashOfConfig":"76"},{"size":6949,"mtime":1621191955825,"results":"127","hashOfConfig":"76"},{"size":228,"mtime":1615598488470,"results":"128","hashOfConfig":"76"},{"size":859,"mtime":1620160208696,"results":"129","hashOfConfig":"76"},{"size":3463,"mtime":1619422693741,"results":"130","hashOfConfig":"76"},{"size":21673,"mtime":1621195348507,"results":"131","hashOfConfig":"76"},{"size":3796,"mtime":1621058230516,"results":"132","hashOfConfig":"76"},{"size":41,"mtime":1620782682534,"results":"133","hashOfConfig":"76"},{"size":13923,"mtime":1621207021888,"results":"134","hashOfConfig":"76"},{"size":4342,"mtime":1620780107419,"results":"135","hashOfConfig":"76"},{"size":18521,"mtime":1621195239322,"results":"136","hashOfConfig":"76"},{"size":36,"mtime":1619981680763,"results":"137","hashOfConfig":"76"},{"size":284,"mtime":1619985569636,"results":"138","hashOfConfig":"76"},{"size":21115,"mtime":1621288454453,"results":"139","hashOfConfig":"76"},{"size":9021,"mtime":1621140772976,"results":"140","hashOfConfig":"76"},{"size":8227,"mtime":1620153871228,"results":"141","hashOfConfig":"76"},{"size":18157,"mtime":1621195225189,"results":"142","hashOfConfig":"76"},{"size":3772,"mtime":1620714209333,"results":"143","hashOfConfig":"76"},{"size":48,"mtime":1620782658607,"results":"144","hashOfConfig":"76"},{"size":2065,"mtime":1621053246065,"results":"145","hashOfConfig":"76"},{"size":816,"mtime":1620783928006,"results":"146","hashOfConfig":"76"},{"size":1086,"mtime":1621058824325,"results":"147","hashOfConfig":"76"},{"size":2169,"mtime":1621201422048,"results":"148","hashOfConfig":"76"},{"size":1934,"mtime":1621286138236,"results":"149","hashOfConfig":"76"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},"1arx63t",{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"152"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"152"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"152"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"152"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"152"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"190","messages":"191","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"152"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"152"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"152"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"152"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"152"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"152"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"152"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"152"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"152"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249","usedDeprecatedRules":"152"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"258","usedDeprecatedRules":"152"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"152"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"278","usedDeprecatedRules":"152"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"281","usedDeprecatedRules":"152"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"284","usedDeprecatedRules":"152"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"289","usedDeprecatedRules":"152"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"292","usedDeprecatedRules":"152"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"295","usedDeprecatedRules":"152"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"302","messages":"303","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"304","usedDeprecatedRules":"152"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"307","usedDeprecatedRules":"152"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"310","usedDeprecatedRules":"152"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"313","usedDeprecatedRules":"152"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},"C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\index.js",[],["326","327"],"C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\TLApp.js",[],"C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\context\\DrawerContext.js",[],"C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\context\\AuthContext.js",[],"C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\pages\\admin.js",["328","329","330","331","332","333"],"import React, { useContext, useState, useEffect } from 'react';\r\nimport DropdownImage from '../componentes/dropdown-image';\r\nimport Navbar from '../componentes/navbar';\r\nimport DetailRequestModal from '../componentes/modal/detailRequestModal';\r\nimport FeedbackModal from '../componentes/modal/feedbackModal';\r\nimport RequestCard from '../componentes/request-card';\r\nimport Tabs from '../componentes/tabs';\r\nimport Footer from '../componentes/footer/footer';\r\nimport PuffLoader from \"react-spinners/PuffLoader\";\r\nimport queryString from 'query-string';\r\nimport { AuthContext } from '../context/AuthContext';\r\nimport { css } from \"@emotion/core\";\r\nimport { requestStatuses, editorialServices } from '../data/data';\r\nimport { getStatistics, getRequests, getRequest, takeRequest } from '../api';\r\nimport { setAdminRequestType, getAdminRequestType, setAdminMainTabIndex, getAdminMainTabIndex, getProfileStorage } from '../helpers/userStorage';\r\nimport { getServiceById } from '../helpers/functions';\r\n\r\nconst override = css`\r\n  display: block;\r\n  margin: 5rem auto;\r\n`;\r\n\r\nconst requestTypeList = editorialServices;\r\nconst limit = 3;\r\n\r\nconst Admin = ({ location }) => {\r\n\r\n    const [activeTabIndex, setActiveTabIndex] = useState(0);\r\n    const [requestType, setRequestType] = useState(requestTypeList[0]);\r\n    const [requestList, setRequestList] = useState([]);\r\n    const [isLast, setIsLast] = useState(false);\r\n    const [initialLoading, setInitialLoading] = useState(false);\r\n    const [loadingMore, setLoadingMore] = useState(false);\r\n    const [isOpenDetailModal, setDetailOpenModal] = useState(false);\r\n    const [isOpenFeedbackModal, setOpenFeedbackModal] = useState(false);\r\n    const [registry, setRegistry] = useState(null);\r\n    const [tabList, setTabList] = useState(requestStatuses);\r\n\r\n    const [takingRequest, setTakingRequest] = useState(false);\r\n    const [succesfulRequestTake, setSuccesfulRequestTake] = useState(false);\r\n\r\n    const { logged } = useContext(AuthContext);\r\n\r\n    const { services = [] } = getProfileStorage() || {};\r\n\r\n    const openDetailModal = (request) => {\r\n        setRegistry(request);\r\n        setTakingRequest(false);\r\n        setSuccesfulRequestTake(false);\r\n        setDetailOpenModal(true);\r\n    }\r\n\r\n    const openFeedbackModal = (request) => {\r\n        setRegistry(request);\r\n        setOpenFeedbackModal(true);\r\n    }\r\n\r\n    const updRequestType = (val) => {\r\n        setAdminRequestType(val);\r\n        setRequestType(val);\r\n    }\r\n\r\n    const updActiveTabIndex = (val) => {\r\n        setAdminMainTabIndex(val);\r\n        setActiveTabIndex(val);\r\n    }\r\n\r\n    const getLastElement = (field) => {\r\n        return requestList[requestList.length - 1] ? requestList[requestList.length - 1][field] : undefined;\r\n    }\r\n\r\n    const getUidBasedOnRequestStatus = (reqStatus) => { // Las solicitudes marcadas como disponibles no necesitan filtro de id usuario\r\n        if (reqStatus == 'DISPONIBLE') {\r\n            return undefined;\r\n        } else {\r\n            return logged.uid;\r\n        }\r\n    }\r\n\r\n    const updateStatistics = (timeout = 0) => {\r\n        setTimeout(() => {\r\n            getStatistics([requestType.id, logged.uid + '-' + requestType.id])\r\n                .then(data => setTabList([\r\n                    !data[0].error ? { ...tabList[0], statistics: data[0].statistics.available } : { ...tabList[0], statistics: 0 },\r\n                    !data[1].error ? { ...tabList[1], statistics: data[1].statistics.taken } : { ...tabList[1], statistics: 0 },\r\n                    !data[1].error ? { ...tabList[2], statistics: data[1].statistics.done } : { ...tabList[1], statistics: 0 }\r\n                ]))\r\n        }, timeout);\r\n    }\r\n\r\n    const requestMoreData = () => {\r\n        if (!initialLoading && !loadingMore) {\r\n            setLoadingMore(true);\r\n            const requestStatus = tabList[activeTabIndex].id;\r\n            getRequests(getUidBasedOnRequestStatus(requestStatus), requestType.id, requestStatus, getLastElement('createdAt'), limit, requestStatus == 'TOMADO' || requestStatus == 'HECHO' ? 'desc' : 'asc')\r\n                .then(data => {\r\n                    setLoadingMore(false);\r\n                    setIsLast(data.isLast);\r\n                    setRequestList((state) => ([...state, ...data.list]));\r\n                })\r\n                .catch(error => {\r\n                    setLoadingMore(false);\r\n                    alert('Ha ocurrido un error. Vuelve a intentarlo más tarde (EC.RMD)');\r\n                });\r\n        }\r\n    }\r\n\r\n    const requestData = () => {\r\n        setInitialLoading(true);\r\n        const requestStatus = tabList[activeTabIndex].id;\r\n        getRequests(getUidBasedOnRequestStatus(requestStatus), requestType.id, requestStatus, undefined, limit, requestStatus == 'TOMADO' || requestStatus == 'HECHO' ? 'desc' : 'asc')\r\n            .then(data => {\r\n                updateStatistics();\r\n                setInitialLoading(false);\r\n                setIsLast(data.isLast);\r\n                setRequestList(data.list);\r\n            })\r\n            .catch(error => {\r\n                setInitialLoading(false);\r\n                alert('Ha ocurrido un error. Vuelve a intentarlo más tarde (EC.RD)');\r\n            });\r\n    }\r\n\r\n    const confirmRequest = (requestId) => {\r\n        if (logged && logged.uid) {\r\n            setTakingRequest(true);\r\n            takeRequest(requestId, requestType.id)\r\n                .then(({ error }) => {\r\n                    if (!error) {\r\n                        getRequest(requestId).then(({ data, error }) => {\r\n                            setTakingRequest(false);\r\n                            if (!error) {\r\n                                updateStatistics(5000); // Actualizo las estadísticas\r\n                                setRegistry(data); // Establezco el nuevo registro actualizado\r\n                                setRequestList(requestList.filter(req => req.id !== data.id));// Elimino el registro de la lista actual\r\n                                setSuccesfulRequestTake(true);\r\n                            } else {\r\n                                setSuccesfulRequestTake(false);\r\n                                alert('Hubo un error al actualizar la solicitud. Recargue e intente otra vez');\r\n                            }\r\n                        })\r\n                    } else {\r\n                        alert('Hubo un error al tomar esta solicitud. Intenta otra vez');\r\n                        setTakingRequest(false);\r\n                        setSuccesfulRequestTake(true);\r\n                    }\r\n                })\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        const { viewFeedback } = queryString.parse(location.search);\r\n\r\n        if (viewFeedback) {\r\n            getRequest(viewFeedback).then(({ data, error }) => { // El segundo parámetro es para decidir si se solicitan detalles\r\n                if (!error) {\r\n                    openFeedbackModal(data);\r\n                    window.history.replaceState(null, '', '/admin');\r\n                } else {\r\n                    alert('No se encontró el archivo. Intente más tarde');\r\n                }\r\n            });\r\n        }\r\n\r\n    }, [location]);\r\n\r\n    useEffect(() => {\r\n        requestData();\r\n    }, [activeTabIndex, requestType.id]);\r\n\r\n    useEffect(() => {\r\n        setRequestType(getAdminRequestType(requestTypeList[0]));\r\n        setActiveTabIndex(getAdminMainTabIndex());\r\n        window.scrollTo(0, 0);\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <Navbar />\r\n\r\n            <DetailRequestModal\r\n                data={registry}\r\n                isOpen={isOpenDetailModal}\r\n                close={() => setDetailOpenModal(false)}\r\n                takingRequest={takingRequest}\r\n                succesfulRequestTake={succesfulRequestTake}\r\n                takeRequest={confirmRequest} />\r\n\r\n            <FeedbackModal\r\n                isOpen={isOpenFeedbackModal}\r\n                close={() => setOpenFeedbackModal(false)}\r\n                title={registry?.title}\r\n                message={registry?.feedback?.message}\r\n                authorName={registry?.name.split(' ')[0]} />\r\n\r\n            <main className='main-body below-navbar colored-background'>\r\n                <section className='container-xl section'>\r\n                    <div className='title-admin-container'>\r\n                        <h2 className='m-0'>¿Qué eliges para hoy?</h2>\r\n                        <div className='dropdown-container'>\r\n                            <DropdownImage\r\n                                stretch\r\n                                selectedItem={requestType}\r\n                                list={services.map(service => getServiceById(service))}\r\n                                select={updRequestType} />\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n                <section className='container-xl section'>\r\n                    <Tabs\r\n                        initialLoading={initialLoading}\r\n                        loadingMore={loadingMore}\r\n                        requestMoreData={requestMoreData}\r\n                        hasMore={!isLast}\r\n                        loader={<PuffLoader color={'#8B81EC'} loading={true} css={override} size={100} />}\r\n                        activeIndex={activeTabIndex}\r\n                        select={updActiveTabIndex}\r\n                        tabs={tabList.map(tab => tab.name + ` (${tab.statistics ? tab.statistics : 0})`)}>\r\n                        <div>\r\n                            {\r\n                                requestList.map(request => (\r\n                                    <RequestCard\r\n                                        key={request.id}\r\n                                        showFeedback={openFeedbackModal}\r\n                                        select={openDetailModal}\r\n                                        data={request} />\r\n                                ))\r\n                            }\r\n                        </div>\r\n                    </Tabs>\r\n                </section>\r\n            </main>\r\n            <Footer />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Admin;","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\pages\\login.js",["334"],"import React, { useState, useEffect } from 'react'\r\nimport Navbar from '../componentes/navbar';\r\nimport Footer from '../componentes/footer/footer';\r\nimport ImgColumpio from '../img/swinging.svg';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { login } from '../api';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSignInAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { setProfileStorage } from '../helpers/userStorage';\r\n\r\nconst Login = () => {\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    let history = useHistory();\r\n\r\n    const updEmail = (e) => {\r\n        setEmail(e.target.value);\r\n    }\r\n\r\n    const updPassword = (e) => {\r\n        setPassword(e.target.value);\r\n    }\r\n\r\n    const loginUser = (e) => {\r\n        e.preventDefault();\r\n        if (!checkErrors()) {\r\n            login(email, password)\r\n                .then(({ user, profile, error }) => {\r\n                    if (user) {\r\n                        setProfileStorage(profile);\r\n                        history.push('/admin');\r\n                    } else {\r\n                        alert(error);\r\n                    }\r\n                })\r\n        }\r\n    }\r\n\r\n    const checkErrors = () => {\r\n        if (!(/^(?!\\s*$).{1,50}/.test(email))) {\r\n            alert('Tu correo debe tener de 1 a 50 caracteres');\r\n            return true;\r\n        }\r\n        else if (!(/^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/).test(email)) {\r\n            alert('Introduce un correo válido');\r\n            return true;\r\n        }\r\n\r\n        if (!(/^(?!\\s*$).{1,50}/.test(password))) {\r\n            alert('Tu contraseña debe tener de 1 a 50 caracteres');\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <Navbar />\r\n            <main className='main-body below-navbar colored-background'>\r\n                <section className='container-xl mt-5'>\r\n                    <div className='login-container position-relative'>\r\n                        <img src={ImgColumpio} alt='img-fondo' className='img-fondo-login d-none d-md-block' />\r\n                        <div className='floating-form'>\r\n                            <h2 className='m-0'>Ingresa a Temple Luna</h2>\r\n                            <p className='mb-3'>Si quieres pertenecer a nosotros, escríbenos por el grupo</p>\r\n                            <div className='form-group'>\r\n                                <label htmlFor=\"txtUsuario\">Correo</label>\r\n                                <input minLength=\"1\" maxLength=\"50\" type=\"email\" value={email} onChange={updEmail} id=\"txtUsuario\" placeholder=\"Ingresa tu correo\" />\r\n                            </div>\r\n                            <div className='form-group'>\r\n                                <label htmlFor=\"txtContrasena\">Contraseña</label>\r\n                                <input minLength=\"1\" maxLength=\"50\" type=\"password\" value={password} onChange={updPassword} id=\"txtContrasena\" placeholder=\"****************\" />\r\n                            </div>\r\n                            <button onClick={loginUser} className='button button-green stretch'>\r\n                                <span className='d-inline'>\r\n                                    Entrar\r\n                                    </span>\r\n                                {' '}\r\n                                <FontAwesomeIcon icon={faSignInAlt} size='xl' />\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n            </main>\r\n            <Footer />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\pages\\solicitud-critica.js",["335","336","337","338","339"],"C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\pages\\inicio.js",[],"C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\pages\\prep_critica.js",["340"],"import React, { useState, useEffect } from 'react'\r\nimport Footer from '../componentes/footer/footer';\r\nimport Navbar from '../componentes/navbar';\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport Fade from 'react-reveal/Fade';\r\nimport { css } from \"@emotion/core\";\r\nimport { setRequestDone } from '../api';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowLeft, faPaperPlane, faCheckCircle, faHome, faEye } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst overrideSpinnerInline = css`\r\n  display: inline-block;\r\n  vertical-align: middle;\r\n`;\r\n\r\nconst Preparation = ({ location }) => {\r\n\r\n    const { id, title, about, link, type, points } = location.state.data;\r\n\r\n    const [success, setSuccess] = useState(false);\r\n    const [urlResult, setUrlResult] = useState('');\r\n    const [loading, setLoading] = useState(false); // Determina si se está enviando el form\r\n    const [intention, setIntention] = useState('');\r\n    const [hook, setHook] = useState('');\r\n    const [ortography, setOrtography] = useState('');\r\n    const [improvement, setImprovement] = useState('');\r\n\r\n    const history = useHistory();\r\n\r\n    const intentionRequested = points.includes('INTENCION');\r\n    const hookRequested = points.includes('ENGANCHE');\r\n    const ortographyRequested = points.includes('ORTOGRAFIA');\r\n\r\n\r\n    const updIntention = (e) => {\r\n        setIntention(e.target.value);\r\n    }\r\n\r\n    const updHook = (e) => {\r\n        setHook(e.target.value);\r\n    }\r\n\r\n    const updOrtography = (e) => {\r\n        setOrtography(e.target.value);\r\n    }\r\n\r\n    const updImprovement = (e) => {\r\n        setImprovement(e.target.value);\r\n    }\r\n\r\n    const goBackwards = () => {\r\n        history.push('/admin');\r\n    }\r\n\r\n    const send = async (e) => {\r\n        e.preventDefault();\r\n        if (!checkErrors()) {\r\n            setLoading(true);\r\n            saveChanges();\r\n        }\r\n    }\r\n\r\n    const saveChanges = () => {\r\n        const data = {\r\n            requestId: id,\r\n            title: title.trim(),\r\n            type: type.trim(),\r\n            intention: intention.trim(),\r\n            hook: hook.trim(),\r\n            ortography: ortography.trim(),\r\n            improvement: improvement.trim(),\r\n        };\r\n\r\n        setRequestDone(data).then(result => {\r\n            window.scrollTo(0, 0);\r\n            setLoading(false);\r\n            if (!result.error) {\r\n                setUrlResult(result.url);\r\n                setSuccess(true);\r\n            } else {\r\n                alert(result.error);\r\n                setSuccess(false);\r\n            }\r\n        });\r\n    }\r\n\r\n    const checkErrors = () => {\r\n\r\n        // Name\r\n        if (intentionRequested) {\r\n            if (!(/^(?!\\s*$).{1,5000}/.test(intention))) {\r\n                alert('La intención de la obra debe tener de 1 a 5000 caracteres');\r\n                return true;\r\n            }\r\n        }\r\n\r\n        // Hooks\r\n        if (hookRequested) {\r\n            if (!(/^(?!\\s*$).{1,5000}/.test(hook))) {\r\n                alert('En enganche de la obra debe tener de 1 a 5000 caracteres');\r\n                return true;\r\n            }\r\n        }\r\n\r\n        // Ortography\r\n        if (ortographyRequested) {\r\n            if (!(/^(?!\\s*$).{1,5000}/.test(ortography))) {\r\n                alert('La ortografía de la obra debe tener de 1 a 5000 caracteres');\r\n                return true;\r\n            }\r\n        }\r\n\r\n        // Improvement (optional)\r\n        if (improvement) {\r\n            if (!(/^(?!\\s*$).{1,5000}/.test(improvement))) {\r\n                alert('El consejo para el autor debe tener de 1 a 5000 caracteres');\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n        setSuccess(false);\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <Navbar />\r\n            <main className='main-body below-navbar colored-background'>\r\n                <section className='container-xl section prep-req-container'>\r\n                    <div className='flex-align-center mb-2'>\r\n                        <FontAwesomeIcon onClick={goBackwards} className='mr-1' icon={faArrowLeft} size='lg' />\r\n                        <h4 className='request-prep-title m-0 clamp clamp-2'>Crítica: {title}</h4>\r\n                    </div>\r\n                    {\r\n                        success\r\n                            ?\r\n                            <div className='form-container text-align-center'>\r\n                                <Fade bottom>\r\n                                    <FontAwesomeIcon color={'#3DE58D'} icon={faCheckCircle} style={{ fontSize: '8rem' }} />\r\n                                    <h3 className='mt-1 mb-1'>¡Crítica enviada!</h3>\r\n                                </Fade>\r\n                                <p className='txt-responsive-form m0-auto'>Tu experiencia ha aumentado :)</p>\r\n                                <div className='button-container mt-3'>\r\n                                    <button onClick={() => window.open(urlResult, '_blank')} className='button button-light-purple button-option-request ml-auto'>\r\n                                        <FontAwesomeIcon icon={faEye} size='1x' />\r\n                                        {' '}\r\n                                                Ver resultado\r\n                                        </button>\r\n                                    <button onClick={goBackwards} className='button button-blue button-option-request mr-auto'>\r\n                                        <FontAwesomeIcon icon={faHome} size='1x' />\r\n                                        {' '}\r\n                                                Regresar\r\n                                        </button>\r\n                                </div>\r\n                            </div>\r\n                            :\r\n                            <>\r\n                                <div className=''>\r\n                                    <p>{about}</p>\r\n                                    <h4>Link de la obra</h4>\r\n                                    {\r\n                                        link\r\n                                            ?\r\n                                            <a className='clamp clamp-1' target='_blank' href={link}>{link}</a>\r\n                                            :\r\n                                            <p>No existe link</p>\r\n                                    }\r\n                                    {\r\n                                        intentionRequested\r\n                                        &&\r\n                                        <div className='form-group'>\r\n                                            <h4>¿Se logró transmitir la idea?</h4>\r\n                                            <textarea minLength=\"1\" maxLength=\"5000\" rows=\"4\" value={intention} onChange={updIntention} id=\"txtIntencion\" placeholder=\"Ejemplo: Siento que la idea se transmite correctamente, porque genera en el lector una sensación de...\"></textarea>\r\n                                        </div>\r\n                                    }\r\n                                    {\r\n                                        hookRequested\r\n                                        &&\r\n                                        <div className='form-group'>\r\n                                            <h4>¿Qué tal fue el enganche de la obra?</h4>\r\n                                            <textarea minLength=\"1\" maxLength=\"5000\" rows=\"4\" value={hook} onChange={updHook} id=\"txtEnganche\" placeholder=\"Ejemplo: Considero que tiene un enganche bueno, pero no es suficiente. Debería enganchar mucho desde un inicio...\"></textarea>\r\n                                        </div>\r\n                                    }\r\n                                    {\r\n                                        ortographyRequested\r\n                                        &&\r\n                                        <div className='form-group'>\r\n                                            <h4>¿Qué tal fue la ortografía?</h4>\r\n                                            <textarea minLength=\"1\" maxLength=\"5000\" rows=\"4\" value={ortography} onChange={updOrtography} id=\"txtOrtografia\" placeholder=\"Ejemplo: La ortografía fue excelente. Haces un correcto uso de las comas, los puntos y las tildes...\"></textarea>\r\n                                        </div>\r\n                                    }\r\n                                    <div className='form-group'>\r\n                                        <h4>¿Algún consejo para que el autor pueda mejorar? (Opcional)</h4>\r\n                                        <textarea minLength=\"1\" maxLength=\"5000\" rows=\"4\" value={improvement} onChange={updImprovement} id=\"txtOrtografia\" placeholder=\"Ejemplo: La ortografía fue excelente. Haces un correcto uso de las comas, los puntos y las tildes...\"></textarea>\r\n                                    </div>\r\n                                </div>\r\n                                <div className='form-buttons-container mt-3'>\r\n                                    {\r\n                                        loading\r\n                                            ?\r\n                                            <span className='button button-green justify-self-right'>\r\n                                                Enviando\r\n                                {' '}\r\n                                                <ClipLoader color={'#fff'} loading={true} css={overrideSpinnerInline} size={22} />\r\n                                            </span>\r\n                                            :\r\n                                            <button onClick={send} className='button button-green justify-self-right'>\r\n                                                <FontAwesomeIcon icon={faPaperPlane} size='1x' />\r\n                                                {' '}\r\n                                                <span className='d-none d-md-inline'>\r\n                                                    Enviar\r\n                                                </span>\r\n                                            </button>\r\n                                    }\r\n                                </div>\r\n                            </>\r\n                    }\r\n                </section>\r\n            </main>\r\n            <Footer />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Preparation;","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\pages\\solicitud-diseno.js",["341","342","343","344"],"C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\pages\\prep_diseno.js",["345"],"import React, { useRef, useState, useEffect } from 'react'\r\nimport Footer from '../componentes/footer/footer';\r\nimport Navbar from '../componentes/navbar';\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport Fade from 'react-reveal/Fade';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { css } from \"@emotion/core\";\r\nimport { uploadImage, setRequestDone } from '../api';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowLeft, faPaperPlane, faCheckCircle, faHome, faEye } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst overrideSpinnerInline = css`\r\n  display: inline-block;\r\n  vertical-align: middle;\r\n`;\r\n\r\nconst maxFileSize = 5242880;\r\n\r\nconst Preparation = ({ location }) => {\r\n\r\n    const { title, id, type, link } = location.state.data;\r\n\r\n    const refDesign = useRef(null);\r\n\r\n    const [success, setSuccess] = useState(false);\r\n    const [urlResult, setUrlResult] = useState('');\r\n    const [loading, setLoading] = useState(false); // Determina si se está enviando el form\r\n    const [comment, setComment] = useState('');\r\n    const [design, setDesign] = useState(null);\r\n\r\n    const history = useHistory();\r\n\r\n    const updComment = (e) => {\r\n        setComment(e.target.value);\r\n    }\r\n\r\n    const goBackwards = () => {\r\n        history.push('/admin');\r\n    }\r\n\r\n    const startSelectDesign = (e) => {\r\n        e.preventDefault();\r\n        refDesign.current.click();\r\n    }\r\n\r\n    const selectDesign = (e) => {\r\n        e.preventDefault();\r\n        const file = e.target.files[0];\r\n        if (file) {\r\n            if (file.size <= maxFileSize) {\r\n                setDesign(file);\r\n            } else {\r\n                alert('La imagen debe ser menor a 5MB')\r\n            }\r\n        }\r\n    }\r\n\r\n    const deleteDesign = (e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        setDesign(null);\r\n    }\r\n\r\n    const send = async (e) => {\r\n        e.preventDefault();\r\n        if (!checkErrors()) {\r\n            setLoading(true);\r\n            saveChanges();\r\n        }\r\n    }\r\n\r\n    const saveChanges = () => {\r\n        const data = {\r\n            requestId: id,\r\n            type: type.trim(),\r\n            comment: comment.trim()\r\n        };\r\n\r\n        uploadImage('solicitud-diseno', design)\r\n            .then(url => {\r\n                setRequestDone({ ...data, urlResult: url }).then(result => {\r\n                    window.scrollTo(0, 0);\r\n                    setLoading(false);\r\n                    if (!result.error) {\r\n                        setUrlResult(result.url);\r\n                        setSuccess(true);\r\n                    } else {\r\n                        alert(result.error);\r\n                        setSuccess(false);\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                setLoading(false);\r\n                setSuccess(false);\r\n                alert('Error al subir la imagen. Reintente');\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n    const checkErrors = () => {\r\n\r\n        // Comment\r\n        if (comment) {\r\n            if (!(/^(?!\\s*$).{1,1000}/.test(comment))) {\r\n                alert('Tu comentario debe debe tener de 1 a 1000 caracteres');\r\n                return true;\r\n            }\r\n        }\r\n\r\n        // File\r\n        if (!design) {\r\n            alert('Debes subir tu diseño final');\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n        setSuccess(false);\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <Navbar />\r\n            <main className='main-body below-navbar colored-background'>\r\n                <section className='container-xl section prep-req-container'>\r\n                    <div className='flex-align-center mb-2'>\r\n                        <FontAwesomeIcon onClick={goBackwards} className='mr-1' icon={faArrowLeft} size='lg' />\r\n                        <h4 className='request-prep-title m-0 clamp clamp-2'>Diseño: {title}</h4>\r\n                    </div>\r\n                    {\r\n                        success\r\n                            ?\r\n                            <div className='form-container text-align-center'>\r\n                                <Fade bottom>\r\n                                    <FontAwesomeIcon color={'#3DE58D'} icon={faCheckCircle} style={{ fontSize: '8rem' }} />\r\n                                    <h3 className='mt-1 mb-1'>¡Diseño enviado!</h3>\r\n                                </Fade>\r\n                                <p className='txt-responsive-form m0-auto'>Tu experiencia ha aumentado :)</p>\r\n                                <div className='button-container mt-3'>\r\n                                    <button onClick={() => window.open(urlResult, '_blank')} className='button button-light-purple button-option-request ml-auto'>\r\n                                        <FontAwesomeIcon icon={faEye} size='1x' />\r\n                                        {' '}\r\n                                                Ver resultado\r\n                                        </button>\r\n                                    <button onClick={goBackwards} className='button button-blue button-option-request mr-auto'>\r\n                                        <FontAwesomeIcon icon={faHome} size='1x' />\r\n                                        {' '}\r\n                                                Regresar\r\n                                        </button>\r\n                                </div>\r\n                            </div>\r\n                            :\r\n                            <>\r\n                                <div className=''>\r\n                                    <h4>Link de la obra</h4>\r\n                                    {\r\n                                        link\r\n                                            ?\r\n                                            <a className='clamp clamp-1' target='_blank' href={link}>{link}</a>\r\n                                            :\r\n                                            <p>No existe link</p>\r\n                                    }\r\n                                    <div className='form-group'>\r\n                                        <h4>Diseño terminado</h4>\r\n                                        {\r\n                                            design\r\n                                                ?\r\n                                                <button onClick={startSelectDesign} className={`d-flex justify-content-between align-items-center button button-light-purple button-thin stretch ${design ? 'd-flex' : ''}`}>\r\n                                                    <span className='clamp clamp-1'>\r\n                                                        {design.name}\r\n                                                    </span>\r\n                                                    <span onClick={deleteDesign} className='fa fa-times' style={{ color: 'white' }}></span>\r\n                                                </button>\r\n                                                :\r\n                                                <button onClick={startSelectDesign} className={`button button-light-purple button-thin stretch ${design ? 'd-flex' : ''}`}>\r\n                                                    <span>\r\n                                                        Subir diseño\r\n                                        </span>\r\n                                                </button>\r\n                                        }\r\n                                        <input type=\"file\" onChange={selectDesign} accept=\"image/*\" ref={refDesign} className='d-none' id=\"flDiseno\" />\r\n                                    </div>\r\n                                    <div className='form-group'>\r\n                                        <h4>¿Algún comentario o recomendación? (Opcional)</h4>\r\n                                        <textarea minLength=\"1\" maxLength=\"1000\" rows=\"4\" value={comment} onChange={updComment} placeholder=\"Ejemplo: Considero que tiene un enganche bueno, pero no es suficiente. Debería enganchar mucho desde un inicio...\"></textarea>\r\n                                    </div>\r\n                                </div>\r\n                                <div className='form-buttons-container mt-3'>\r\n                                    {\r\n                                        loading\r\n                                            ?\r\n                                            <span className='button button-green justify-self-right'>\r\n                                                Enviando\r\n                                                {' '}\r\n                                                <ClipLoader color={'#fff'} loading={true} css={overrideSpinnerInline} size={22} />\r\n                                            </span>\r\n                                            :\r\n                                            <button onClick={send} className='button button-green justify-self-right'>\r\n                                                <FontAwesomeIcon icon={faPaperPlane} size='1x' />\r\n                                                {' '}\r\n                                                <span className='d-none d-md-inline'>\r\n                                                    Enviar\r\n                                                </span>\r\n                                            </button>\r\n                                    }\r\n                                </div>\r\n                            </>\r\n                    }\r\n                </section>\r\n            </main>\r\n            <Footer />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Preparation;","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\pages\\prev_resultado.js",["346","347","348","349","350","351","352","353","354","355","356","357","358","359","360"],"import React, { useState, useEffect } from 'react'\r\nimport Navbar from '../componentes/navbar';\r\nimport LoadingScreen from '../componentes/loading-screen';\r\nimport PunctuationModal from '../componentes/modal/punctuation';\r\nimport queryString from 'query-string';\r\nimport HelmetMetaData from \"../componentes/helmet\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport Fade from 'react-reveal/Fade';\r\nimport MiniProfile from '../componentes/profile/mini-profile';\r\nimport SpeechBubble from '../componentes/speech-bubble/speech-bubble';\r\nimport { extractLink } from '../helpers/functions';\r\nimport { getRequest, likeRequestResult, addAnalitics } from '../api';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faBook, faDownload, faHeart } from '@fortawesome/free-solid-svg-icons';\r\nimport { faFacebook } from '@fortawesome/free-brands-svg-icons';\r\nimport { css } from \"@emotion/core\";\r\nimport { Document, Page } from 'react-pdf/dist/esm/entry.webpack';\r\nimport { FacebookShareButton } from \"react-share\";\r\nimport 'react-pdf/dist/esm/Page/AnnotationLayer.css';\r\n\r\nconst overrideSpinnerInline = css`\r\n  display: inline-block;\r\n  vertical-align: middle;\r\n`;\r\n\r\nconst Previsualizacion = ({ location }) => {\r\n\r\n    const [isOpenPunctuationModal, setIsOpenPunctuationModal] = useState(false);\r\n    const [punctuationType, setPunctuationType] = useState('LIKE');\r\n\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [success, setSuccess] = useState(false);\r\n    const [isLoadTimeout, setLoadTimeout] = useState(false);\r\n    const [loadingMsg, setLoadingMsg] = useState('Obteniendo tu archivo...');\r\n    const [link, setLink] = useState('');\r\n    const [type, setType] = useState('');\r\n    const [resultUrl, setResultUrl] = useState('');\r\n    const [id, setId] = useState('');\r\n    const [title, setTitle] = useState(queryString.parse(location.search).t || 'Tu obra');\r\n    const [author, setAuthor] = useState('');\r\n    const [likes, setLikes] = useState(0);\r\n    const [artist, setArtist] = useState({ networks: [], services: [], roles: [] });\r\n    const [addingLove, setAddingLove] = useState(false);\r\n\r\n    // From query parameters\r\n    const [isTemplated, setIsTemplated] = useState(false);\r\n    const [isTest, setIsTest] = useState(false);\r\n    const [origin, setOrigin] = useState('OTHER');\r\n\r\n    const [numPages, setNumPages] = useState(0);\r\n    const [hasScrolledToOffset, setHasScrolledToOffset] = useState(false);\r\n\r\n    const checkScroll = () => {\r\n        const body = document.body;\r\n        const html = document.documentElement;\r\n        const offsetY = window.scrollY; // Scrolled height\r\n        const vpHeight = window.innerHeight; // Viewport height\r\n\r\n        const totalHeight = Math.max(body.scrollHeight, body.offsetHeight,\r\n            html.clientHeight, html.scrollHeight, html.offsetHeight);\r\n\r\n        if ((totalHeight - (offsetY + vpHeight)) <= 600) {\r\n            if (!hasScrolledToOffset) {\r\n                setHasScrolledToOffset(true);\r\n            }\r\n        } else {\r\n            if (hasScrolledToOffset) {\r\n                setHasScrolledToOffset(false);\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        const { id, test, origin, fbclid, templated } = queryString.parse(location.search);\r\n\r\n        if (test) {\r\n            setIsTest(true);\r\n        }\r\n\r\n        if (templated) {\r\n            setOrigin('MAIL');\r\n        }\r\n\r\n        if (origin == 'tl') {\r\n            setOrigin('TL');\r\n        }\r\n\r\n        if (fbclid) {\r\n            setOrigin('FB');\r\n        }\r\n\r\n        if (id) {\r\n            getRequest(id).then(({ data, error }) => { // El segundo parámetro es para decidir si se solicitan detalles\r\n                if (!error) {\r\n                    const { type, resultUrl, title, name, link, likes, artist } = data;\r\n                    setLoadingMsg('Obtenido: ' + title);\r\n                    setId(id);\r\n                    setLink(link);\r\n                    setType(type);\r\n                    setResultUrl(resultUrl);\r\n                    setTitle(title);\r\n                    setAuthor(name);\r\n                    setLikes(likes);\r\n                    setArtist(artist);\r\n                    if (templated) {\r\n                        setIsTemplated(true);\r\n                    }\r\n                    // Una vez obtenidos los datos, inicia la cuenta para el timeout de carga del documento\r\n                } else {\r\n                    alert('No se encontró el archivo. Intente más tarde');\r\n                    setIsLoading(false);\r\n                }\r\n            });\r\n        }\r\n\r\n    }, [location]);\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n    }, []);\r\n\r\n    // Timeout para la carga del documento EN PANTALLA\r\n    useEffect(() => {\r\n        if (id) {\r\n            let timeout = setTimeout(() => {\r\n                if (!success) {\r\n                    setLoadTimeout(true);\r\n                }\r\n            }, 10000);\r\n            return () => clearTimeout(timeout);\r\n        }\r\n    }, [id, success])\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('scroll', checkScroll);\r\n        return () => window.removeEventListener('scroll', checkScroll);\r\n    }, [hasScrolledToOffset]);\r\n\r\n    const onDocumentLoadSuccess = ({ numPages = 0 }) => {\r\n        setIsLoading(false);\r\n        setSuccess(true);\r\n        setNumPages(numPages);\r\n    }\r\n\r\n    const onDocumentError = () => {\r\n        setIsLoading(false);\r\n        setSuccess(false);\r\n    }\r\n\r\n    const like = () => {\r\n        if (!likes) {\r\n            setAddingLove(true);\r\n            likeRequestResult(id, 1).then(({ data, error }) => {\r\n                if (!error) {\r\n                    setAddingLove(false);\r\n                    setLikes(1);\r\n                    setPunctuationType('LIKE');\r\n                    togglePunctuationModal();\r\n                } else {\r\n                    setAddingLove(false);\r\n                    alert('No se pudo agregar el like');\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    const onReadButtonClicked = () => {\r\n        window.open(extractLink(link));\r\n        if (!isTest) {\r\n            const analObject = {\r\n                requestId: id,\r\n                origin,\r\n                readIntention: true\r\n            };\r\n\r\n            addAnalitics(id, analObject).then(() => {\r\n                console.log('Analítica actualizada!');\r\n            });\r\n        } else {\r\n            console.log('Test mode');\r\n        }\r\n    }\r\n\r\n    const onFinishedSharedIntention = () => {\r\n        if (!isTest) {\r\n            const analObject = {\r\n                requestId: id,\r\n                templated: isTemplated,\r\n                origin,\r\n                shareIntention: true\r\n            };\r\n\r\n            addAnalitics(id, analObject).then(() => {\r\n                console.log('Analítica actualizada!');\r\n            });\r\n        } else {\r\n            console.log('Test mode');\r\n        }\r\n        setIsOpenPunctuationModal(false);\r\n    }\r\n\r\n    const togglePunctuationModal = () => {\r\n        setIsOpenPunctuationModal(!isOpenPunctuationModal);\r\n    }\r\n\r\n    let shareQuote;\r\n\r\n    if (isTemplated) {\r\n        shareQuote = `Hola amigos, les quiero compartir ${type == 'CRITICA' ? 'la crítica' : type == 'DISENO' ? 'el diseño' : 'el trabajo'} que me hicieron en Temple Luna. Los invito a pedir uno(a) en su página oficial :)`;\r\n    } else {\r\n        shareQuote = `Hola amigos, les quiero compartir ${type == 'CRITICA' ? 'esta interesante crítica' : type == 'DISENO' ? 'este gran diseño' : 'este gran trabajo'} que encontré en Temple Luna. Los invito a pedir uno(a) en su página oficial :)`\r\n    }\r\n\r\n    const url = process.env.REACT_APP_WEBSITE + window.location.pathname + '?id=' + id;\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                isLoading && !isLoadTimeout && <LoadingScreen text={loadingMsg} />\r\n            }\r\n            <HelmetMetaData url={url} title={`${type == 'DISENO' ? '[Diseño]' : type == 'CRITICA' ? '[Crítica]' : ''} ${title} - Temple Luna`} image={type == 'DISENO' ? resultUrl : 'https://drive.google.com/uc?id=1b7NnnYFWl4cW746wfDGw5LRdZ_uwCv44'} />\r\n            <Navbar position='absolute' />\r\n            <PunctuationModal\r\n                requestId={id}\r\n                url={url}\r\n                shareQuote={shareQuote}\r\n                onFinishedSharedIntention={onFinishedSharedIntention}\r\n                requestType={type}\r\n                punctuationType={punctuationType}\r\n                isOpen={isOpenPunctuationModal}\r\n                close={() => setIsOpenPunctuationModal(false)} />\r\n            <main className='main-body below-navbar overflow-unset'>\r\n                <div className='mini-profile-container'>\r\n                    <div className='container-xl'>\r\n                        {\r\n                            artist\r\n                            &&\r\n                            <MiniProfile\r\n                                id={artist.id}\r\n                                editorial={artist.editorial}\r\n                                networks={artist.networks}\r\n                                title={artist.fName + ' ' + artist.lName}\r\n                                img={artist.imgUrl} />\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <section className='container-pdf-preview position-relative'>\r\n                    {\r\n                        isLoadTimeout\r\n                            ?\r\n                            <div className='container-xl form-group'>\r\n                                <h3>¡Vaya! Tu documento ha demorado en mostrarse</h3>\r\n                                <p className=\"m-0\">Descárgalo directamente desde <b><a target='_blank' href={resultUrl}>aquí</a></b> o con el botón de la barra inferior.</p>\r\n                            </div>\r\n                            :\r\n                            resultUrl && (type == 'CRITICA' || type == 'CORRECCION')\r\n                                ?\r\n                                <Document\r\n                                    file={resultUrl}\r\n                                    onLoadSuccess={onDocumentLoadSuccess}\r\n                                    onLoadError={onDocumentError}\r\n                                    externalLinkTarget={'_blank'}>\r\n                                    {\r\n                                        Array.from(new Array(numPages), (_, index) => (\r\n                                            <Page\r\n                                                key={`page_${index + 1}`}\r\n                                                pageNumber={index + 1}\r\n                                            />\r\n                                        ))\r\n                                    }\r\n                                </Document>\r\n                                :\r\n                                resultUrl && type == 'DISENO'\r\n                                    ?\r\n                                    <div className='container-xl form-group'>\r\n                                        <img onLoad={onDocumentLoadSuccess} onError={onDocumentError} src={resultUrl} />\r\n                                    </div>\r\n                                    :\r\n                                    null\r\n                    }\r\n                </section>\r\n            </main>\r\n            <div className='bottom-prev-navbar position-relative'>\r\n                <div className='speech-container'>\r\n                    <Fade when={hasScrolledToOffset}>\r\n                        <SpeechBubble text={'Comparte aquí el trabajo de este artista'} />\r\n                    </Fade>\r\n                </div>\r\n\r\n                <nav className='container-xl'>\r\n                    <button className='button-purple' onClick={onReadButtonClicked}>\r\n                        <FontAwesomeIcon color={'#fbffba'} icon={faBook} className='icon' />\r\n                        {' '}\r\n                        Ver obra\r\n                    </button>\r\n                    {\r\n                        isTemplated\r\n                            ?\r\n                            addingLove\r\n                                ?\r\n                                <button className='button-purple' onClick={like}>\r\n                                    <ClipLoader color={'#fff'} loading={true} css={overrideSpinnerInline} size={22} />\r\n                                </button>\r\n                                :\r\n                                likes > 0\r\n                                    ?\r\n                                    <button className='button-purple button-liked' onClick={() => { }}>\r\n                                        <FontAwesomeIcon color={'#fbffba'} icon={faHeart} className='icon' />\r\n                                    </button>\r\n                                    :\r\n                                    <button className='button-purple' onClick={like}>\r\n                                        <FontAwesomeIcon color={'#fbffba'} icon={faHeart} className='icon' />\r\n                                    </button>\r\n                            :\r\n                            null\r\n                    }\r\n                    <button className='button-purple position-relative p-0'>\r\n                        <FacebookShareButton\r\n                            onShareWindowClose={onFinishedSharedIntention}\r\n                            url={url.toString().replace(/templated=true/g, \"\")}\r\n                            quote={shareQuote}\r\n                            className='py-08'\r\n                            hashtag='#templeluna'\r\n                            style={{ width: '100%', height: '100%' }}>\r\n                            <FontAwesomeIcon color={'#fbffba'} icon={faFacebook} className='icon' />\r\n                            {' '}\r\n                        Compartir\r\n                    </FacebookShareButton>\r\n                    </button>\r\n                    <button className='button-purple' onClick={() => window.open(resultUrl)}>\r\n                        <FontAwesomeIcon color={'#fbffba'} icon={faDownload} className='icon' />\r\n                    </button>\r\n                </nav>\r\n            </div>\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default Previsualizacion;","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\customRouter\\publicRoute.js",[],"C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\customRouter\\privateRoute.js",[],"C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\drawer\\index.js",[],"C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\firebase.js",[],"C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\api.js",["361","362"],"C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\helpers\\userStorage.js",["363"],"export const getProfileStorage = () => {\r\n    try {\r\n        return JSON.parse(localStorage.getItem('profile'));\r\n    } catch (error) {\r\n        return null;\r\n    }\r\n}\r\n\r\nexport const setProfileStorage = (profile) => {\r\n    return localStorage.setItem('profile', JSON.stringify(profile));\r\n}\r\n\r\n// Esto guarda los tipos de solicitudes elegidos en la pantalla de admin\r\nexport const getAdminRequestType = (defaultType) => {\r\n    try {\r\n        const type = JSON.parse(localStorage.getItem('adminRequestType'));\r\n        if (Object.keys(type).length == 0) {\r\n            return defaultType;\r\n        }\r\n        return type;\r\n    } catch (error) {\r\n        return defaultType;\r\n    }\r\n}\r\n\r\nexport const setAdminRequestType = (reqType) => {\r\n    return localStorage.setItem('adminRequestType', JSON.stringify(reqType));\r\n}\r\n\r\n// Esto guarda la pestana seleccionada en la pantalla de admin\r\nexport const getAdminMainTabIndex = () => {\r\n    return parseInt(localStorage.getItem('adminMainTabIndex')) || 0;\r\n\r\n}\r\n\r\nexport const setAdminMainTabIndex = (index) => {\r\n    return localStorage.setItem('adminMainTabIndex', index);\r\n}","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\modal\\designDetail.js",["364","365","366","367","368","369","370","371","372","373","374","375","376","377","378","379","380","381"],"import React, { useContext, useState, useEffect } from 'react';\r\nimport ConfirmationModal from './confirmationModal';\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport Avatar from '../avatar';\r\nimport Zoom from 'react-reveal/Zoom';\r\nimport { getDateText, getExpDateText, getMessengerTypeName, getDesignType, getFormattedPhone, extractLink } from '../../helpers/functions';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { AuthContext } from '../../context/AuthContext';\r\nimport { css } from \"@emotion/core\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faAngleDown, faEye, faHandPaper, faLayerGroup, faPaintBrush, faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport { getProfileStorage } from '../../helpers/userStorage';\r\nimport { faWhatsapp } from '@fortawesome/free-brands-svg-icons';\r\nimport './modals.css';\r\n\r\nconst overrideSpinnerInline = css`\r\n  display: inline-block;\r\n  margin-left: .6rem;\r\n  vertical-align: middle;\r\n`;\r\n\r\nconst Modal = ({ isOpen, data, takingRequest, openConfirmationModal, close }) => {\r\n\r\n    const history = useHistory();\r\n\r\n    const { logged } = useContext(AuthContext);\r\n    const { icon, name } = getDesignType(data?.designType);\r\n    const isTakenByMe = data?.takenBy == logged.uid;\r\n    const messengerType = data?.messengerType;\r\n    const formattedPhone = getFormattedPhone(data?.phone);\r\n    const formattedLink = extractLink(data?.link);\r\n\r\n    let styles = '';\r\n    if (isOpen) {\r\n        styles = 'open';\r\n    } else {\r\n        styles = 'close';\r\n    }\r\n\r\n    if (isTakenByMe) {\r\n        getExpDateText(data?.takenAt, data?.expDate)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={'overlay overlay-modal ' + styles} onClick={close} />\r\n            <Zoom bottom collapse when={isOpen}>\r\n                <div className={'modal ' + styles}>\r\n                    <div className='modal-container'>\r\n                        <div className='header-container position-relative'>\r\n                            <Avatar clases='modal-avatar img-avatar-container' />\r\n                            <div className='title-container'>\r\n                                <h3 className='clamp clamp-2'>{data?.title}</h3>\r\n                                <p>{\r\n                                    data?.status == 'DISPONIBLE' || isTakenByMe && data?.status == 'HECHO'\r\n                                        ?\r\n                                        getDateText(data?.createdAt.seconds * 1000)\r\n                                        :\r\n                                        isTakenByMe && data?.status == 'TOMADO'\r\n                                            ?\r\n                                            getExpDateText(data?.expDate.seconds * 1000)\r\n                                            :\r\n                                            null\r\n                                }</p>\r\n                            </div>\r\n                            <FontAwesomeIcon icon={faAngleDown} onClick={close} className='close-icon' />\r\n                        </div>\r\n                        <div className='description-container'>\r\n                            <h4>Tipo de diseño</h4>\r\n                            <p>\r\n                                <span className={icon + ' mr-1'}>{data?.icon}</span>\r\n                                {name}\r\n                            </p>\r\n                            {\r\n                                data?.designType == 'CR'\r\n                                &&\r\n                                <>\r\n                                    <h4>Días para el lanzamiento</h4>\r\n                                    <p>{data?.daysLeft}</p>\r\n                                </>\r\n                            }\r\n                            <h4>¿Qué quiero transmitir?</h4>\r\n                            <p>{data?.intention || 'No hay intención'}</p>\r\n                            <h4>Boceto de referencia</h4>\r\n                            {\r\n                                data?.urlImg\r\n                                    ?\r\n                                    <div>\r\n                                        <a target='_blank' href={data?.urlImg}>\r\n                                            <img src={data?.urlImg} alt='img-boceto' className='sample-design-detail' />\r\n                                        </a>\r\n                                    </div>\r\n                                    :\r\n                                    <p>'No hay boceto de referencia</p>\r\n                            }\r\n                            <h4>Link de la obra</h4>\r\n                            {\r\n                                formattedLink\r\n                                    ?\r\n                                    <a target='_blank' className='clamp clamp-1' href={formattedLink}>{formattedLink}</a>\r\n                                    :\r\n                                    <p>No existe link</p>\r\n                            }\r\n                            <h4>Pseudónimo del autor</h4>\r\n                            <p>{data?.author || 'Sin nombre'}</p>\r\n                            {\r\n                                isTakenByMe\r\n                                &&\r\n                                <>\r\n                                    <h4>Datos de contacto</h4>\r\n                                    <p className=\"m-0\"><b>Nombre:</b> {data?.name}</p>\r\n                                    <p className=\"m-0\"><b>Contacto:</b> {data?.phone} ({getMessengerTypeName(messengerType)})</p>\r\n                                    {\r\n                                        messengerType == 'WSP' && formattedPhone\r\n                                        &&\r\n                                        <button onClick={() => window.open('https://web.whatsapp.com/send?phone=' + formattedPhone)} className='button button-whatsapp button-blue button-option-request my-1'>\r\n                                            <FontAwesomeIcon color={'#fff'} icon={faWhatsapp} className='icon' />\r\n                                                Contactar\r\n                                        </button>\r\n                                    }\r\n                                    <p className=\"m-0 mb-2\"><b>Correo:</b> {data?.email}</p>\r\n                                </>\r\n                            }\r\n                        </div>\r\n                        <div className=\"footer-card-container\">\r\n                            <div className='button-container'>\r\n                                {\r\n                                    takingRequest\r\n                                        ?\r\n                                        <button onClick={() => { }} className='button button-blue button-option-request'>\r\n                                            Cargando\r\n                                                {' '}\r\n                                            <ClipLoader color={'#fff'} loading={true} css={overrideSpinnerInline} size={22} />\r\n                                        </button>\r\n                                        :\r\n                                        <>\r\n                                            <>\r\n                                                {\r\n                                                    data?.status == 'DISPONIBLE'\r\n                                                        ?\r\n                                                        <button onClick={() => openConfirmationModal(true)} className='button button-blue button-option-request'>\r\n                                                            <FontAwesomeIcon color={'#fff'} icon={faHandPaper} className='icon' />\r\n                                                            Tomar pedido\r\n                                                        </button>\r\n                                                        :\r\n                                                        data?.status == 'TOMADO' && isTakenByMe\r\n                                                            ?\r\n                                                            <button onClick={() => history.push('prep_diseno', { data })} className='button button-green button-option-request'>\r\n                                                                <FontAwesomeIcon color={'#fff'} icon={faPaintBrush} className='icon' />\r\n                                                            Iniciar diseño\r\n                                                            </button>\r\n                                                            :\r\n                                                            null\r\n                                                }\r\n                                            </>\r\n                                            {\r\n                                                data?.status == 'HECHO' && isTakenByMe\r\n                                                && (\r\n                                                    <button onClick={() => history.push(`prev_resultado?id=${data.id}&origin=tl`)} className='button button-green button-option-request'>\r\n                                                        <FontAwesomeIcon color={'#fff'} icon={faEye} className='icon' />\r\n                                                        Ir a resultado\r\n                                                    </button>\r\n                                                )\r\n                                            }\r\n                                            <button onClick={close} className='button button-red button-option-request'>\r\n                                                <FontAwesomeIcon color={'#fff'} icon={faTimes} className='icon' />\r\n                                                Cerrar\r\n                                            </button>\r\n                                        </>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Zoom>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Modal;","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\modal\\critiqueDetail.js",["382","383","384","385","386","387","388","389","390","391","392","393","394","395","396","397","398"],"import React, { useContext, useState, useEffect } from 'react';\r\nimport ConfirmationModal from './confirmationModal';\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport Avatar from '../avatar';\r\nimport Zoom from 'react-reveal/Zoom';\r\nimport { getDateText, getExpDateText, getMessengerTypeName, getFormattedPhone, getAbrevPointName, extractLink } from '../../helpers/functions';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { AuthContext } from '../../context/AuthContext';\r\nimport { css } from \"@emotion/core\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faAngleDown, faEdit, faEye, faHandPaper, faLayerGroup, faTasks, faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport { getProfileStorage } from '../../helpers/userStorage';\r\nimport { faWhatsapp } from '@fortawesome/free-brands-svg-icons';\r\nimport './modals.css';\r\n\r\nconst overrideSpinnerInline = css`\r\n  display: inline-block;\r\n  margin-left: .6rem;\r\n  vertical-align: middle;\r\n`;\r\n\r\nconst Modal = ({ isOpen, data, takingRequest, openConfirmationModal, close }) => {\r\n\r\n    const history = useHistory();\r\n\r\n    const { logged } = useContext(AuthContext);\r\n    const isTakenByMe = data?.takenBy == logged.uid;\r\n    const messengerType = data?.messengerType;\r\n    const formattedPhone = getFormattedPhone(data?.phone);\r\n    const formattedLink = extractLink(data?.link);\r\n\r\n    let styles = '';\r\n    if (isOpen) {\r\n        styles = 'open';\r\n    } else {\r\n        styles = 'close';\r\n    }\r\n \r\n    return (\r\n        <>\r\n            <div className={'overlay overlay-modal ' + styles} onClick={close} />\r\n            <Zoom bottom collapse when={isOpen}>\r\n                <div className={'modal ' + styles}>\r\n                    <div className='modal-container'>\r\n                        <div className='header-container position-relative'>\r\n                            <Avatar clases='modal-avatar img-avatar-container' />\r\n                            <div className='title-container'>\r\n                                <h3 className='clamp clamp-2'>{data?.title}</h3>\r\n                                <p>{\r\n                                    data?.status == 'DISPONIBLE' || isTakenByMe && data?.status == 'HECHO'\r\n                                        ?\r\n                                        getDateText(data?.createdAt.seconds * 1000)\r\n                                        :\r\n                                        isTakenByMe && data?.status == 'TOMADO'\r\n                                            ?\r\n                                            getExpDateText(data?.expDate.seconds * 1000)\r\n                                            :\r\n                                            null\r\n                                }</p>\r\n                            </div>\r\n                            <FontAwesomeIcon icon={faAngleDown} onClick={close} className='close-icon' />\r\n                        </div>\r\n                        <div className='description-container'>\r\n                            <p>{data?.about || 'No hay descripción'}</p>\r\n                            <h4>Link de la obra</h4>\r\n                            {\r\n                                formattedLink ?\r\n                                    <a target='_blank' className='clamp clamp-1' href={formattedLink}>{formattedLink}</a>\r\n                                    :\r\n                                    <p>No existe link</p>\r\n                            }\r\n                            <h4>¿Qué quiero transmitir?</h4>\r\n                            <p>{data?.intention || 'No hay intención'}</p>\r\n                            <h4>Puntos a criticar</h4>\r\n                            <ul>\r\n                                {\r\n                                    data?.points?.map(point => (\r\n                                        <li key={point}>{getAbrevPointName(point)}</li>\r\n                                    ))\r\n                                }\r\n                            </ul>\r\n                            {\r\n                                (!data?.points || data?.points?.length < 1)\r\n                                &&\r\n                                <p>No se han especificado puntos</p>\r\n                            }\r\n                            {\r\n                                isTakenByMe\r\n                                &&\r\n                                <>\r\n                                    <h4>Datos de contacto</h4>\r\n                                    <p className=\"m-0\"><b>Nombre:</b> {data?.name}</p>\r\n                                    <p className=\"m-0\"><b>Contacto:</b> {data?.phone} ({getMessengerTypeName(messengerType)})</p>\r\n                                    {\r\n                                        messengerType == 'WSP' && formattedPhone\r\n                                        &&\r\n                                        <button onClick={() => window.open('https://web.whatsapp.com/send?phone=' + formattedPhone)} className='button button-whatsapp button-blue button-option-request my-1'>\r\n                                            <FontAwesomeIcon color={'#fff'} icon={faWhatsapp} className='icon' />\r\n                                                Contactar\r\n                                        </button>\r\n                                    }\r\n                                    <p className=\"m-0 mb-2\"><b>Correo:</b> {data?.email}</p>\r\n                                </>\r\n                            }\r\n                        </div>\r\n                        <div className=\"footer-card-container\">\r\n                            <div className='button-container'>\r\n                                {\r\n                                    takingRequest\r\n                                        ?\r\n                                        <button onClick={() => { }} className='button button-blue button-option-request'>\r\n                                            Cargando\r\n                                                {' '}\r\n                                            <ClipLoader color={'#fff'} loading={true} css={overrideSpinnerInline} size={22} />\r\n                                        </button>\r\n                                        :\r\n                                        <>\r\n                                            <>\r\n                                                {\r\n                                                    data?.status == 'DISPONIBLE'\r\n                                                        ?\r\n                                                        <button onClick={() => openConfirmationModal(true)} className='button button-blue button-option-request'>\r\n                                                            <FontAwesomeIcon color={'#fff'} icon={faHandPaper} className='icon' />\r\n                                                            Tomar pedido\r\n                                                        </button>\r\n                                                        :\r\n                                                        data?.status == 'TOMADO' && isTakenByMe\r\n                                                            ?\r\n                                                            <button onClick={() => history.push('prep_critica', { data })} className='button button-green button-option-request'>\r\n                                                                <FontAwesomeIcon color={'#fff'} icon={faTasks} className='icon' />\r\n                                                            Iniciar crítica\r\n                                                            </button>\r\n                                                            :\r\n                                                            null\r\n                                                }\r\n                                            </>\r\n                                            {\r\n                                                data?.status == 'HECHO' && isTakenByMe\r\n                                                && (\r\n                                                    <button onClick={() => history.push(`prev_resultado?id=${data.id}&origin=tl`)} className='button button-green button-option-request'>\r\n                                                        <FontAwesomeIcon color={'#fff'} icon={faEye} className='icon' />\r\n                                                        Ir a resultado\r\n                                                    </button>\r\n                                                )\r\n                                            }\r\n                                            <button onClick={close} className='button button-red button-option-request'>\r\n                                                <FontAwesomeIcon color={'#fff'} icon={faTimes} className='icon' />\r\n                                                Cerrar\r\n                                            </button>\r\n                                        </>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </Zoom>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Modal;","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\footer\\footer.js",[],"C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\data\\data.js",[],"C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\hooks\\useStepObserver.js",[],"C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\stories-carrousel\\carrousel.js",[],"C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\home-panorama\\panorama.js",["399","400","401"],"import React, { useState, useEffect } from 'react'\r\nimport Navbar from '../navbar'\r\nimport Fade from 'react-reveal/Fade';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faAngleRight } from '@fortawesome/free-solid-svg-icons';\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport { carrouselData } from '../../data/data';\r\nimport './panorama.css'\r\n\r\nlet interval;\r\n\r\nexport const Panorama = () => {\r\n    const [index, setIndex] = useState(0);\r\n    const [autoScroll, setAutoScroll] = useState(true);\r\n\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        if (autoScroll) {\r\n            interval = setInterval(() => {\r\n                if (index < carrouselData.length - 1) {\r\n                    setIndex(index + 1);\r\n                } else {\r\n                    setIndex(0);\r\n                }\r\n            }, 5000)\r\n            return () => {\r\n                clearInterval(interval)\r\n            }\r\n        } else {\r\n            return () => {\r\n                clearInterval(interval)\r\n            }\r\n        }\r\n    }, [index]);\r\n\r\n    const showSlide = (selectedIndex) => {\r\n        setAutoScroll(false);\r\n        setIndex(selectedIndex);\r\n    }\r\n\r\n    const goTo = ({ href, scrollTo, pushTo }) => {\r\n        if (href) {\r\n            window.open(href);\r\n        } else if (pushTo) {\r\n            history.push(pushTo);\r\n        }\r\n        else if (scrollTo) {\r\n            const element = document.getElementById(scrollTo);\r\n            element.scrollIntoView();\r\n        }\r\n    }\r\n\r\n    const slide = carrouselData[index];\r\n\r\n    return (\r\n        <div className='panorama'>\r\n            <Navbar startTransparent={true} />\r\n            <TransitionGroup className='panorama-slide-container'>\r\n\r\n                <CSSTransition\r\n                    classNames={`panorama-slide-reverse`}\r\n                    timeout={{ enter: 1000, exit: 1000 }}\r\n                    key={index}>\r\n\r\n                    <div className={`slide ${slide.orientation}`} style={{ background: slide.bg }}>\r\n                        <div className='slide-content'>\r\n                            <div className='container-controls-header'>\r\n                                <Fade left>\r\n                                    <h1>{slide.text}</h1>\r\n                                </Fade>\r\n                                <Fade left>\r\n                                    {\r\n                                        <a target='_blank' rel=\"noreferrer\" onClick={() => goTo(slide)} style={slide.buttonStyles} className='button button-green'>\r\n                                            {slide.buttonText}\r\n                                            {' '}\r\n                                            <FontAwesomeIcon icon={faAngleRight} size='lg' />\r\n                                        </a>\r\n                                    }\r\n\r\n                                </Fade>\r\n                            </div>\r\n                            <div className='img-container' style={slide.style}>\r\n                                <img src={slide.img} className='img-colaboration' alt='img-colaboracion' />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </CSSTransition>\r\n\r\n            </TransitionGroup>\r\n            <div className='dots-panorama'>\r\n                {\r\n                    carrouselData.map((_, i) => <div key={i + 1} onClick={() => showSlide(i)} className={`dot ${i == index ? 'selected' : ''}`} />)\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\forms\\step-manager\\step-manager.js",[],"C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\navbar\\index.js",[],"C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\request-card\\index.js",[],"C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\dropdown-image\\index.js",[],"C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\drawer\\drawer.js",["402","403","404"],"import React, { useEffect, useContext } from 'react';\r\nimport { DrawerContext } from '../../context/DrawerContext';\r\nimport { AuthContext } from '../../context/AuthContext';\r\nimport { getProfileStorage } from '../../helpers/userStorage';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { logout } from '../../api';\r\nimport './drawer.css';\r\n\r\nconst Drawer = () => {\r\n\r\n    const { logged } = useContext(AuthContext);\r\n    const { isOpen, close } = useContext(DrawerContext);\r\n\r\n    let history = useHistory();\r\n\r\n    const logoutUser = (e) => {\r\n        e.preventDefault();\r\n        logout()\r\n            .then(res => {\r\n                if (res) {\r\n                    navigateTo('/login');\r\n                }\r\n            })\r\n    }\r\n\r\n    const navigateTo = (route) => {\r\n        history.push(route);\r\n        close();\r\n    }\r\n\r\n    const { qFollowName } = getProfileStorage() || {};\r\n\r\n    useEffect(() => {\r\n        if (isOpen) {\r\n            document.body.style.overflow = 'hidden';\r\n        } else {\r\n            document.body.style.overflow = 'unset';\r\n        }\r\n    }, [isOpen]);\r\n\r\n    let styles = '';\r\n    if (isOpen) {\r\n        styles = 'open';\r\n    } else {\r\n        styles = 'close';\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={'overlay ' + styles} onClick={close}>\r\n            </div>\r\n            <div className={'drawer ' + styles}>\r\n                {\r\n                    logged\r\n                        ?\r\n                        <>\r\n                            <a onClick={() => navigateTo('/admin')} className='btn-drawer'>\r\n                                Pedidos\r\n                            </a>\r\n                            <a onClick={() => navigateTo('/perfil/' + qFollowName)} className='btn-drawer'>\r\n                                Mi perfil\r\n                            </a>\r\n                            <a onClick={logoutUser} className='btn-drawer'>\r\n                                Salir\r\n                        </a>\r\n                        </>\r\n                        :\r\n                        <>\r\n                            <Link to='/sol_critica' onClick={close} className='btn-drawer'>\r\n                                Pide tu crítica\r\n                            </Link>\r\n                            <Link to='/sol_correccion' onClick={close} className='btn-drawer'>\r\n                                Pide tu corrección\r\n                            </Link>\r\n                            <Link to='/sol_diseno' onClick={close} className='btn-drawer'>\r\n                                Pide tu diseño\r\n                            </Link>\r\n                            <Link to='/login' onClick={close} className='btn-drawer'>\r\n                                Login de creativos\r\n                            </Link>\r\n                        </>\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Drawer;","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\tabs\\index.js",[],"C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\tag\\index.js",[],"C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\forms\\forms-steps\\index.js",[],"C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\loading-screen\\index.js",[],"C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\helpers\\functions.js",["405","406","407","408","409","410","411"],"import moment from 'moment';\r\nimport { designTypes, contactTypes, critiquePoints, contributors, editorialServices, userRoles } from '../data/data';\r\nimport WattpadIcon from '../img/wattpad.svg';\r\nimport FacebookIcon from '../img/facebook.svg';\r\nimport TwitterIcon from '../img/twitter.svg';\r\nimport InstaIcon from '../img/instagram.svg';\r\nimport BuenovelaIcon from '../img/buenovela.png';\r\nimport InkspiredIcon from '../img/inkspired.png';\r\nimport YoutubeIcon from '../img/youtube.svg';\r\nimport LinkIcon from '../img/link.svg';\r\n\r\nimport \"moment/locale/es\";\r\n\r\nexport const getPointNameFromKey = (key) => {\r\n    return '';\r\n}\r\n\r\nexport const getDateText = (dateMs) => {\r\n    let dayPortion = '';\r\n    const momentObj = moment(dateMs);\r\n    if (momentObj.isSame(moment(), 'day')) {\r\n        dayPortion = momentObj.format('[Hoy, a las] hh:mma');\r\n    }\r\n    else if (momentObj.isSame(moment().subtract(1, 'days'), 'day')) {\r\n        dayPortion = momentObj.format('[Ayer, a las] hh:mma');\r\n    }\r\n    else {\r\n        dayPortion = momentObj.format('dddd DD/MM/YY hh:mma');\r\n    }\r\n    return toSentence(dayPortion);\r\n}\r\n\r\nexport const getExpDateText = (expDateMs) => {\r\n    let result = 'Vence en ';\r\n    let totalMinutes = moment(expDateMs).diff(moment(), 'minutes', true);\r\n    if (totalMinutes < 0) {\r\n        result = 'Venció hace ';\r\n        totalMinutes *= -1;\r\n    }\r\n\r\n    const totalDays = totalMinutes / 1440;\r\n    const wholeDays = Math.trunc(totalDays);\r\n    const totalHours = (totalDays % 1) * 24;\r\n    const wholeHours = Math.trunc(totalHours);\r\n    const wholeMinutes = Math.trunc((totalHours % 1) * 60);\r\n\r\n    if (wholeDays >= 1) {\r\n        result += wholeDays + ` dia${wholeDays > 1 ? 's' : ''}`;\r\n    }\r\n\r\n    if (wholeHours >= 1) {\r\n        result += ', ' + wholeHours + ` hora${wholeHours > 1 ? 's' : ''}`;\r\n    }\r\n\r\n    if (wholeMinutes >= 1 && wholeDays < 1) {\r\n        result += ', ' + wholeMinutes + ` minuto${wholeMinutes > 1 ? 's' : ''}`;\r\n    }\r\n    return result;\r\n}\r\n\r\nexport const toSentence = (text, limit) => {\r\n    limit = !limit ? text.length : limit;\r\n    if (text && text.length > 0) {\r\n        return (text.substring(0, 1).toUpperCase() + text.substring(1, limit).toLowerCase()).trim();\r\n    } else {\r\n        return '';\r\n    }\r\n}\r\n\r\nexport const toName = (rawName) => {\r\n    let nameArray = rawName.replace(/'.'/g, '').trim().split(' ');\r\n    nameArray = nameArray.filter(name => name != '').map(name => name && toSentence(name.trim()));\r\n    return nameArray.join(' ');\r\n}\r\n\r\nexport const getMessengerTypeName = (type) => {\r\n    const messengerType = contactTypes.find(c => c.type == type);\r\n    if (messengerType) {\r\n        return messengerType.name;\r\n    }\r\n    return '';\r\n}\r\n\r\nexport const getDesignType = (type) => {\r\n    const obj = designTypes.find(e => e.type == type);\r\n    if (obj) {\r\n        return obj;\r\n    }\r\n    return {};\r\n}\r\n\r\nexport const getAbrevPointName = (id) => {\r\n    const obj = critiquePoints.find(e => e.id == id);\r\n    if (obj) {\r\n        return obj.abrev;\r\n    }\r\n    return '';\r\n}\r\n\r\nexport const getFormattedPhone = (rawPhone) => {\r\n    let result = '';\r\n    if (rawPhone) {\r\n        result = rawPhone.trim().replace(/' '/g, '');\r\n        if (result[0] != '+') {\r\n            result = '+' + result;\r\n        }\r\n        return result;\r\n    }\r\n    return null;\r\n}\r\n\r\nexport const extractLink = (rawLink) => {\r\n    if (rawLink) {\r\n        const matchedArray = rawLink.match(/(?:(?:https?|ftp):\\/\\/)?[\\w/\\-?=%.]+\\.[\\w/\\-&?=%.]+/g);\r\n        if (matchedArray) {\r\n            return matchedArray[0];\r\n        }\r\n    }\r\n    return '';\r\n}\r\n\r\nexport const getRandomContributorName = () => {\r\n    const min = Math.ceil(0);\r\n    const max = Math.floor(contributors.length - 1);\r\n    const number = Math.floor(Math.random() * (max - min + 1)) + min;\r\n    return contributors[number];\r\n}\r\n\r\nexport const hexToRgb = (hex) => {\r\n    hex = hex.substring(1);\r\n    var bigint = parseInt(hex, 16);\r\n    var r = (bigint >> 16) & 255;\r\n    var g = (bigint >> 8) & 255;\r\n    var b = bigint & 255;\r\n\r\n    return r + \",\" + g + \",\" + b;\r\n}\r\n\r\n// Verifica si una cadena contiene alguno de los términos del arreglo\r\nexport const stringContainsAnyOf = (mainString, coincidences) => {\r\n    return coincidences.some(c => mainString.includes(c));\r\n}\r\n\r\n// Obtiene el servicio según id\r\nexport const getServiceById = (id) => {\r\n    return editorialServices.find(service => service.id == id);\r\n}\r\n\r\n// Obtiene el rol de usuario según id\r\nexport const getUserRoleById = (id) => {\r\n    return userRoles.find(role => role.id == id);\r\n}\r\n\r\n// Obtiene el ícono del perfil editorial, según red social\r\nexport const getSnIconByUrl = (url) => {\r\n    if (extractLink(url)) {\r\n        if (stringContainsAnyOf(url, ['my.w.tt', 'wattpad.'])) {\r\n            return {\r\n                className: 'sn-wattpad',\r\n                imgSrc: WattpadIcon\r\n            }\r\n        } else if (stringContainsAnyOf(url, ['fb.', 'facebook.'])) {\r\n            return {\r\n                className: 'sn-facebook',\r\n                imgSrc: FacebookIcon\r\n            }\r\n        } else if (stringContainsAnyOf(url, ['twitter.'])) {\r\n            return {\r\n                className: 'sn-twitter',\r\n                imgSrc: TwitterIcon\r\n            }\r\n        } else if (stringContainsAnyOf(url, ['instagram.'])) {\r\n            return {\r\n                className: 'sn-instagram',\r\n                imgSrc: InstaIcon\r\n            }\r\n        } else if (stringContainsAnyOf(url, ['buenovela.'])) {\r\n            return {\r\n                className: 'sn-buenovela',\r\n                imgSrc: BuenovelaIcon\r\n            }\r\n        } else if (stringContainsAnyOf(url, ['getinkspired.'])) {\r\n            return {\r\n                className: 'sn-inkspired',\r\n                imgSrc: InkspiredIcon\r\n            }\r\n        } else if (stringContainsAnyOf(url, ['youtube.'])) {\r\n            return {\r\n                className: 'sn-youtube',\r\n                imgSrc: YoutubeIcon\r\n            }\r\n        }\r\n        else {\r\n            return {\r\n                className: 'sn-generic-link',\r\n                imgSrc: LinkIcon\r\n            }\r\n        }\r\n    } else {\r\n        return null;\r\n    }\r\n}","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\modal\\confirmationModal.js",[],"C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\navbar\\navbar.js",[],"C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\request-card\\card.js",["412","413","414","415","416","417","418","419","420","421","422","423","424"],"import React, { useState, useContext } from 'react';\r\nimport Avatar from '../avatar';\r\nimport FeedbackModal from '../../componentes/modal/detailRequestModal';\r\nimport { getDateText, getExpDateText } from '../../helpers/functions';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { AuthContext } from '../../context/AuthContext';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faEdit, faPaintBrush, faEye, faBoxOpen, faTasks, faHeart, faCommentDots } from '@fortawesome/free-solid-svg-icons';\r\nimport './card.css'\r\n\r\nconst Card = React.forwardRef(({ data, select, showFeedback }, ref) => {\r\n\r\n    const { logged } = useContext(AuthContext);\r\n\r\n    const history = useHistory();\r\n\r\n    const { likes, feedback, takenBy } = data;\r\n    const isTakenByMe = takenBy == logged.uid;\r\n\r\n    return (\r\n        <>\r\n            <div ref={ref} className='request-card-container'>\r\n                <div className='header-container'>\r\n                    <Avatar clases='request-avatar img-avatar-container' />\r\n                    <div className='title-container'>\r\n                        <h4 className='clamp clamp-1'>{data.title}</h4>\r\n                        <p>\r\n                            {\r\n                                data.status == 'DISPONIBLE' || isTakenByMe && data.status == 'HECHO'\r\n                                    ?\r\n                                    getDateText(data.createdAt.seconds * 1000)\r\n                                    :\r\n                                    isTakenByMe && data.status == 'TOMADO'\r\n                                        ?\r\n                                        getExpDateText(data.expDate.seconds * 1000)\r\n                                        :\r\n                                        null\r\n                            }\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n                <div className='description-container'>\r\n                    <p className='clamp clamp-2'>\r\n                        {data.about || data.intention}\r\n                    </p>\r\n                </div>\r\n                <div className='footer-card-container'>\r\n                    <div className='button-container'>\r\n                        {\r\n                            data.status == 'TOMADO' && isTakenByMe\r\n                            && (\r\n                                data.type == 'CRITICA'\r\n                                    ?\r\n                                    <button onClick={() => history.push('prep_critica', { data })} className='button button-green button-option-request'>\r\n                                        <FontAwesomeIcon color={'#fff'} icon={faEdit} className='icon' />\r\n                                    Iniciar crítica\r\n                                </button>\r\n                                    :\r\n                                    data.type == 'DISENO'\r\n                                        ?\r\n                                        <button onClick={() => history.push('prep_diseno', { data })} className='button button-green button-option-request'>\r\n                                            <FontAwesomeIcon color={'#fff'} icon={faPaintBrush} className='icon' />\r\n                                    Iniciar diseño\r\n                                </button>\r\n                                        :\r\n                                        data.type == 'CORRECCION'\r\n                                            ?\r\n                                            <button onClick={() => history.push('prep_correccion', { data })} className='button button-green button-option-request'>\r\n                                                <FontAwesomeIcon color={'#fff'} icon={faTasks} className='icon' />\r\n                                    Iniciar corrección\r\n                                </button>\r\n                                            :\r\n                                            null\r\n                            )\r\n                        }\r\n                        {\r\n                            data.status == 'HECHO' && isTakenByMe\r\n                            && (\r\n                                <button onClick={() => history.push(`prev_resultado?id=${data.id}&origin=tl`)} className='button button-green button-option-request'>\r\n                                    <FontAwesomeIcon color={'#fff'} icon={faEye} className='icon' />\r\n                                Ir a resultado\r\n                                </button>\r\n                            )\r\n                        }\r\n                        <button onClick={() => select(data)} className='button button-blue button-option-request'>\r\n                            <FontAwesomeIcon color={'#fff'} icon={faBoxOpen} className='icon' />\r\n                        Abrir\r\n                </button>\r\n                    </div>\r\n                </div>\r\n                <div className='action-group action-group-absolute action-group-mobile-first'>\r\n                    {\r\n                        likes\r\n                        &&\r\n                        <button className='action-button action-button-heart'>\r\n                            {likes + ' '}\r\n                            <FontAwesomeIcon icon={faHeart} />\r\n                        </button>\r\n                    }\r\n                    {\r\n                        feedback\r\n                        &&\r\n                        <button className='action-button action-button-comment' onClick={() => showFeedback(data)}>\r\n                            {'1 '}\r\n                            <FontAwesomeIcon icon={faCommentDots} />\r\n                        </button>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n})\r\n\r\nexport default Card;","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\dropdown-image\\dropdown.js",["425"],"import React, { useRef, useState, useEffect } from 'react';\r\nimport { useOutsideListener } from '../../hooks/useOutsideListener';\r\nimport './dropdown.css';\r\n\r\nconst tamanoIcono = 15;\r\nconst color = '#756F86';\r\n\r\nconst Dropdown = ({ list, select, stretch, selectedItem }) => {\r\n\r\n    const [open, setOpen] = useState(false);\r\n    const outsideListenerRef = useRef(null); // Escucha cuando se hace click fuera de\r\n    const { outsideListener$ } = useOutsideListener(outsideListenerRef);\r\n\r\n    useEffect(() => {\r\n        outsideListener$.subscribe(() => {\r\n            setOpen(false);\r\n        })\r\n    }, [outsideListener$]);\r\n\r\n    const toggleDropdown = (e) => {\r\n        e.preventDefault();\r\n        setOpen(!open);\r\n    }\r\n\r\n    const selectItem = (e, item) => {\r\n        e.preventDefault();\r\n        setOpen(false);\r\n        select(item);\r\n    }\r\n\r\n    const tag = (text) => (\r\n        text &&\r\n        <span className='dropdown-list-tag'>\r\n            {text}\r\n        </span>\r\n    )\r\n\r\n    return (\r\n        <div\r\n            ref={outsideListenerRef}\r\n            className='container-select-image'>\r\n            <button className={`select-image position-relative ${stretch ? 'stretch' : ''}`} onClick={toggleDropdown}>\r\n                <span className={selectedItem.icon} style={{ color, marginRight: '1rem', fontSize: tamanoIcono + 'px' }}></span>\r\n                {\r\n                    stretch\r\n                    &&\r\n                    <span className='mr-1 position-relative' style={{ color }}>\r\n                        {selectedItem.name}\r\n                        {tag(selectedItem.tag)}\r\n                    </span>\r\n                }\r\n                <span className='fa fa-caret-down' style={{ color }}></span>\r\n            </button>\r\n            {\r\n                open\r\n                &&\r\n                <div className={`selectable-list ${stretch ? 'stretch' : ''}`}>\r\n                    {\r\n                        list.map((item, index) => item.displayInDropdown != false && (\r\n                            <div key={index} onClick={(e) => selectItem(e, item)} className='selectable-list-item'>\r\n                                <span className={item.icon} style={{ color, fontSize: tamanoIcono + 'px' }}></span>\r\n                                {\r\n                                    stretch\r\n                                    &&\r\n                                    <span className='ml-1 position-relative' style={{ color }}>\r\n                                        {item.name}\r\n                                        {tag(item.tag)}\r\n                                    </span>\r\n                                }\r\n                            </div>\r\n                        ))\r\n                    }\r\n                </div>\r\n\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dropdown;","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\tabs\\tabs.js",["426","427","428","429"],"import React, { useRef, useState, useEffect } from 'react';\r\nimport ImgVacio from \"../../img/reading-sitting.svg\";\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\nimport { useOutsideListener } from '../../hooks/useOutsideListener';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faAngleDown } from '@fortawesome/free-solid-svg-icons';\r\nimport './tabs.css';\r\n\r\nconst Tabs = ({ tabs, requestMoreData, hasMore, loader, activeIndex, select, initialLoading, theme, children }) => {\r\n\r\n    // Tema\r\n    const style = {\r\n        background: (theme && theme.main) || '',\r\n        color: (theme && theme.contrast) || ''\r\n    };\r\n\r\n    const arrowTogglerRef = useRef(null);\r\n    const [minVisibleTabs, setMinVisibleTabs] = useState(2);\r\n    const [openOptions, setOpenOptions] = useState(false);\r\n    const [width, setWidth] = useState(0);\r\n\r\n    const outsideListenerRef = useRef(null); // Escucha cuando se hace click fuera de\r\n    const { outsideListener$ } = useOutsideListener(outsideListenerRef);\r\n\r\n    const childrenArray = React.Children.toArray(children);\r\n\r\n    const switchTab = (e, index) => {\r\n        e && e.preventDefault();\r\n        setOpenOptions(false);\r\n        select(index);\r\n    }\r\n\r\n    const toggleOptionsContainer = () => {\r\n        setOpenOptions(!openOptions);\r\n    }\r\n\r\n    const updWith = () => {\r\n        setWidth(window.innerWidth);\r\n    }\r\n\r\n    useEffect(() => {\r\n        outsideListener$.subscribe(event => {\r\n            if (arrowTogglerRef.current && !arrowTogglerRef.current.contains(event.target)) {\r\n                setOpenOptions(false);\r\n            }\r\n        })\r\n    }, [outsideListener$, arrowTogglerRef]);\r\n\r\n    useEffect(() => {\r\n        if (width === 0) {\r\n            setWidth(window.innerWidth);\r\n        }\r\n\r\n        // Reinicio la pestaña seleccionada\r\n        switchTab(null, 0);\r\n\r\n        // Establezco el nuevo número visible\r\n        if (width > 991) {\r\n            setMinVisibleTabs(tabs.slice(0, 4).length);\r\n        } else if (width > 300) {\r\n            setMinVisibleTabs(tabs.slice(0, 3).length);\r\n        } else {\r\n            setMinVisibleTabs(tabs.slice(0, 2).length);\r\n        }\r\n\r\n        window.addEventListener('resize', updWith);\r\n        return () => window.removeEventListener('resize', updWith);\r\n    }, [minVisibleTabs, width]);\r\n\r\n    let optionsClasses = 'container-submenu';\r\n    if (openOptions) {\r\n        optionsClasses += ' open';\r\n    } else {\r\n        optionsClasses += ' close';\r\n    }\r\n\r\n    let anchoPestana;\r\n    let desplazamiento;\r\n\r\n    // Recalculo los tamaños\r\n    if (activeIndex < minVisibleTabs) {\r\n        anchoPestana = (100 / minVisibleTabs) + '%';\r\n        desplazamiento = (100 / minVisibleTabs) * activeIndex + '%';\r\n    } else {\r\n        anchoPestana = arrowTogglerRef.current.offsetWidth;\r\n        desplazamiento = (100 / minVisibleTabs) * (minVisibleTabs) + '%';\r\n    }\r\n\r\n    const childrenNum = childrenArray[0].props.children.length;\r\n\r\n    return (\r\n        <div className='main-tabs-container'>\r\n            <div className='tabs-container' style={{ background: style.background }}>\r\n                <div className=\"material-tabs\">\r\n                    {\r\n                        tabs.slice(0, minVisibleTabs).map((pestana, index) => <a key={index} onClick={(e) => switchTab(e, index)} className={index == activeIndex && 'active'} style={style}>{pestana}</a>)\r\n                    }\r\n                    <span className=\"tab-bar\" style={{ width: anchoPestana, left: desplazamiento, background: style.color }}></span>\r\n                    <span className=\"guide-line\" style={{ background: style.background && 'transparent' }} />\r\n                </div>\r\n                {\r\n                    (tabs.length > minVisibleTabs) &&\r\n                    <>\r\n                        <span ref={arrowTogglerRef} onClick={toggleOptionsContainer} className='btn-switch' style={{ color: style.color }}>\r\n                            <FontAwesomeIcon icon={faAngleDown} size='1x' />\r\n                        </span>\r\n                        <div ref={outsideListenerRef} className={optionsClasses}>\r\n                            <ul>\r\n                                {\r\n                                    tabs.slice(minVisibleTabs, tabs.length).map((e, i) => (\r\n                                        <li key={i} className={minVisibleTabs + i == activeIndex && 'active'} onClick={(e) => switchTab(e, minVisibleTabs + i)}>\r\n                                            {e}\r\n                                        </li>\r\n                                    ))\r\n                                }\r\n                            </ul>\r\n                        </div>\r\n                    </>\r\n                }\r\n            </div>\r\n            {\r\n\r\n                initialLoading\r\n                    ?\r\n                    loader\r\n                    :\r\n                    childrenNum > 0\r\n                        ?\r\n                        <InfiniteScroll\r\n                            className=\"tab-content\"\r\n                            scrollThreshold={0.7}\r\n                            dataLength={childrenNum}\r\n                            next={requestMoreData}\r\n                            hasMore={hasMore}\r\n                            loader={loader}>\r\n                            {\r\n                                childrenArray\r\n                            }\r\n                        </InfiniteScroll>\r\n                        :\r\n                        <div>\r\n                            <img src={ImgVacio} className=\"img-vacio\" alt=\"img-vacio\" />\r\n                            <h2 className=\"text-align-center m-0 text-empty\">Oops! aún nada por aquí</h2>\r\n                        </div>\r\n            }\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Tabs;\r\n","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\tag\\tag.js",[],"C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\forms\\forms-steps\\form-steps.js",["430"],"import React from 'react'\r\nimport './form-steps.css'\r\n\r\nconst Steps = ({ activeIndex, navigateTo, steps }) => {\r\n\r\n    const chunksPercentage = 100 / (steps.length + 1);\r\n    const totalWidth = chunksPercentage * (steps.length - 1);\r\n\r\n    return (\r\n        <div className='form-steps'>\r\n            <div className='line' style={{ left: chunksPercentage + '%', width: totalWidth + '%' }}></div>\r\n            {\r\n                steps.map((step, index) => (\r\n                    <div key={index + 1} className='step-container'>\r\n                        <div onClick={() => navigateTo(index)} className={`form-step ${index == activeIndex ? 'active' : ''}`}>{index + 1}</div>\r\n                        <div className='step-text'>{step}</div>\r\n                    </div>\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Steps;","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\avatar\\index.js",[],"C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\loading-screen\\loading-screen.js",[],"C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\story-card\\index.js",[],"C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\hooks\\useOutsideListener.js",["431"],"import React, { useRef, useEffect } from \"react\";\r\nimport { Subject } from 'rxjs';\r\n\r\n/**\r\n * Hook that alerts clicks outside of the passed ref\r\n */\r\nexport const useOutsideListener = (ref) => {\r\n\r\n    const outsideListener = useRef(new Subject());\r\n\r\n    useEffect(() => {\r\n        /**\r\n       * Alert if clicked on outside of element\r\n       */\r\n        function handleClickOutside(event) {\r\n            if (ref.current && !ref.current.contains(event.target)) {\r\n                outsideListener.current.next(event);\r\n            }\r\n        }\r\n\r\n        // Bind the event listener\r\n        document.addEventListener(\"mousedown\", handleClickOutside);\r\n        return () => {\r\n            // Unbind the event listener on clean up\r\n            document.removeEventListener(\"mousedown\", handleClickOutside);\r\n        };\r\n    }, [ref]);\r\n\r\n    return {\r\n        outsideListener$: outsideListener.current\r\n    }\r\n\r\n}\r\n","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\avatar\\avatar.js",[],"C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\story-card\\story_card.js",[],"C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\customRouter\\anyRoute.js",["432"],"import React, { useContext } from 'react';\r\nimport LoadingScreen from '../loading-screen';\r\nimport { AuthContext } from '../../context/AuthContext';\r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\nexport const AnyRoute = ({ Component, ...rest }) => {\r\n\r\n    const { loading } = useContext(AuthContext);\r\n\r\n    if (loading) {\r\n        return <LoadingScreen />\r\n    }\r\n\r\n    return <Route {...rest} render={props => <Component {...props} />} />\r\n}","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\helmet\\index.js",[],"C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\helmet\\helmet-metadata.js",[],"C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\modal\\punctuation.js",[],"C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\speech-bubble\\speech-bubble.js",[],"C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\pages\\ins_evento.js",[],"C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\helpers\\validators.js",["433"],"import { extractLink } from './functions';\r\n\r\nexport const isNameInvalid = (name, notRequired) => {\r\n    if (!name && !notRequired) {\r\n        return 'El nombre está vacío';\r\n    }\r\n    else if (!name && notRequired) {\r\n        return null;\r\n    }\r\n    else if (!(/^(?!\\s*$).{1,50}/.test(name))) {\r\n        return 'Tu nombre debe tener de 1 a 50 caracteres';\r\n    }\r\n    else if (!(/^[a-zA-Z\\sáéíóúñÑ]*$/.test(name))) {\r\n        return 'Tu nombre no puede tener caracteres especiales';\r\n    }\r\n}\r\n\r\nexport const isAgeInvalid = (age, notRequired) => {\r\n    if (!age && !notRequired) {\r\n        return 'La edad está vacía';\r\n    }\r\n    else if (!age && notRequired) {\r\n        return null;\r\n    }\r\n    else if (age < 10 || age > 99) {\r\n        return 'Introduce una edad válida';\r\n    }\r\n}\r\n\r\nexport const isPhoneInvalid = (phone, notRequired) => {\r\n    if (!phone && !notRequired) {\r\n        return 'El teléfono está vacío';\r\n    }\r\n    else if (!phone && notRequired) {\r\n        return null;\r\n    }\r\n    else if (!(/(^\\s*$)|(^[+]?[0-9 ]{7,20}$)/).test(phone)) {\r\n        return 'Introduce un teléfono válido';\r\n    }\r\n}\r\n\r\nexport const isEmailInvalid = (email, notRequired) => {\r\n    if (!email && !notRequired) {\r\n        return 'El correo está vacío';\r\n    }\r\n    else if (!email && notRequired) {\r\n        return null;\r\n    }\r\n    else if (!(/^(?!\\s*$).{6,100}/.test(email))) {\r\n        return 'Tu correo debe tener de 6 a 100 caracteres';\r\n    }\r\n    else if (!(/^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/).test(email)) {\r\n        return 'Introduce un correo válido';\r\n    }\r\n}\r\n\r\nexport const isLinkInvalid = (link, notRequired) => {\r\n    if (!link && !notRequired) {\r\n        return 'El link está vacío';\r\n    }\r\n    else if (!link && notRequired) {\r\n        return null;\r\n    }\r\n    else if (!(/^(?!\\s*$).{1,500}/.test(link))) {\r\n        return 'Tu link debe tener de 1 a 500 caracteres';\r\n    } else if (!extractLink(link.trim())) {\r\n        return 'Parece que ese link no es válido. Revísalo bien';\r\n    }\r\n}\r\n\r\nexport const isTitleInvalid = (title, notRequired) => {\r\n    if (!title && !notRequired) {\r\n        return 'El título está vacío';\r\n    }\r\n    else if (!title && notRequired) {\r\n        return null;\r\n    }\r\n    else if (!(/^(?!\\s*$).{1,100}/.test(title))) {\r\n        return 'Tu título debe tener de 1 a 100 caracteres';\r\n    }\r\n}\r\n\r\nexport const isAuthorInvalid = (author, notRequired) => {\r\n    if (!author && !notRequired) {\r\n        return 'El autor está vacío';\r\n    }\r\n    else if (!author && notRequired) {\r\n        return null;\r\n    }\r\n    else if (!(/^(?!\\s*$).{1,100}/.test(author))) {\r\n        return 'Tu pseudónimo debe tener de 1 a 100 caracteres';\r\n    }\r\n}\r\n\r\nexport const isIntentionInvalid = (intention, notRequired) => {\r\n    if (!intention && !notRequired) {\r\n        return 'La intención está vacía';\r\n    }\r\n    else if (!intention && notRequired) {\r\n        return null;\r\n    }\r\n    else if (!(/^(?!\\s*$).{1,1000}/.test(intention))) {\r\n        return 'Lo que quieres transmitir debe tener de 1 a 1000 caracteres';\r\n    }\r\n}\r\n\r\nexport const isAboutInvalid = (about, notRequired) => {\r\n    if (!about && !notRequired) {\r\n        return 'El resumen de tu historía está vacío';\r\n    }\r\n    else if (!about && notRequired) {\r\n        return null;\r\n    }\r\n    else if (!(/^(?!\\s*$).{1,1000}/.test(about))) {\r\n        return 'El resumen de tu historia debe contener de 1 a 1000 caracteres';\r\n    }\r\n}","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\pages\\ins_evento_OBRA-PROFESIONAL-CCADENA-2.js",["434","435","436","437","438","439","440","441"],"import React, { useRef, useState, useEffect } from 'react'\r\nimport Footer from '../componentes/footer/footer';\r\nimport Navbar from '../componentes/navbar';\r\nimport DropdownImage from '../componentes/dropdown-image';\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport Steps from '../componentes/forms/forms-steps';\r\nimport StepManager from '../componentes/forms/step-manager/step-manager';\r\nimport Fade from 'react-reveal/Fade';\r\nimport ImgAutor from '../img/ccadena.jpg';\r\nimport HelmetMetaData from \"../componentes/helmet\";\r\nimport { toName } from '../helpers/functions';\r\nimport { isNameInvalid, isAgeInvalid, isPhoneInvalid, isEmailInvalid } from '../helpers/validators';\r\nimport { uploadImage, saveEvent } from '../api';\r\nimport { useStepObserver } from '../hooks/useStepObserver';\r\nimport { css } from \"@emotion/core\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faAngleLeft, faAngleRight, faCheck, faCheckCircle, faDotCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { contactTypes } from '../data/data';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst steps = ['Inicio', 'Contacto', 'Listo'];\r\nconst chkPoints = [{ id: 'SI', name: 'Sí', abrev: 'Sí' }];\r\nconst maxFileSize = 5242880;\r\n\r\nconst overrideSpinnerInline = css`\r\n  display: inline-block;\r\n  vertical-align: middle;\r\n`;\r\n\r\nconst mainTitle = 'Gran curso de guión, texto y novela';\r\nconst hostName = 'Carlos Cadena';\r\n\r\nconst Inscripcion = () => {\r\n\r\n    const [activeIndex, setActiveIndex] = useState(0);\r\n    const [loading, setLoading] = useState(false); // Determina si se está enviando el form\r\n    const [success, setSuccess] = useState(true); // Determina si se envío el form sin errores\r\n    const { canGoBackwards, isLast } = useStepObserver(activeIndex, steps.length);\r\n\r\n    const [name, setName] = useState('');\r\n    const [age, setAge] = useState('');\r\n    const [phone, setPhone] = useState('');\r\n    const [messengerType, setMessengerType] = useState(contactTypes[0]);\r\n    const [email, setEmail] = useState('');\r\n    const [points, setPoints] = useState([]);\r\n    const [imgScn, setImgScn] = useState(null);\r\n\r\n    const history = useHistory();\r\n    const refScn = useRef(null);\r\n\r\n    const updName = (e) => {\r\n        setName(e.target.value);\r\n    }\r\n\r\n    const updAge = (e) => {\r\n        setAge(e.target.value);\r\n    }\r\n\r\n    const updPhone = (e) => {\r\n        setPhone(e.target.value);\r\n    }\r\n\r\n    const updMessengerType = (val) => {\r\n        setMessengerType(val);\r\n    }\r\n\r\n    const updEmail = (e) => {\r\n        setEmail(e.target.value);\r\n    }\r\n\r\n    const selectPoint = (id) => {\r\n        if (includesPoint(id)) {\r\n            setPoints(points.filter(p => p != id));\r\n        } else {\r\n            setPoints([...points, id]);\r\n        }\r\n    }\r\n\r\n    const startSelectScn = (e) => {\r\n        e.preventDefault();\r\n        refScn.current.click();\r\n    }\r\n\r\n    const selectScn = (e) => {\r\n        e.preventDefault();\r\n        const file = e.target.files[0];\r\n        if (file) {\r\n            if (file.size <= maxFileSize) {\r\n                setImgScn(file);\r\n            } else {\r\n                alert('La imagen debe ser menor a 5MB');\r\n            }\r\n        }\r\n    }\r\n\r\n    const deleteScn = (e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        setImgScn(null);\r\n    }\r\n\r\n    const previous = (e) => {\r\n        e.preventDefault();\r\n        navigateTo(activeIndex - 1);\r\n    }\r\n\r\n    const next = (e) => {\r\n        e.preventDefault();\r\n        navigateTo(activeIndex + 1);\r\n    }\r\n\r\n    const send = async (e) => {\r\n        e.preventDefault();\r\n        if (!checkErrors()) {\r\n            setLoading(true);\r\n            if (imgScn) {\r\n                uploadImage('inscripcion', imgScn)\r\n                    .then(url => {\r\n                        saveChanges(url);\r\n                    })\r\n                    .catch(error => {\r\n                        setLoading(false);\r\n                        setSuccess(false);\r\n                        alert('Error al subir la imagen. Reintente');\r\n                        console.log(error);\r\n                    });\r\n            }\r\n        }\r\n    }\r\n\r\n    const saveChanges = (urlImgInv) => {\r\n\r\n        const idEvento = history.location.pathname.toString().replace(/\\//g, '').replace(/ins_evento/g, '');\r\n\r\n        const data = {\r\n            eventId: idEvento,\r\n            eventName: mainTitle,\r\n            name: toName(name.trim()),\r\n            age: parseInt(age),\r\n            urlImgInv: urlImgInv.trim(),\r\n            phone: phone.trim(),\r\n            email: email.trim()\r\n        };\r\n\r\n        saveEvent(data).then(() => {\r\n            window.scrollTo(0, 0);\r\n            setLoading(false);\r\n            setSuccess(true);\r\n        });\r\n    }\r\n\r\n    const checkErrors = () => {\r\n        let error = (isNameInvalid(name) || isAgeInvalid(age) || isPhoneInvalid(phone) || isEmailInvalid(email));\r\n\r\n        // Custom errors\r\n        if (!includesPoint('SI')) {\r\n            error = 'Debes confirmar tu asistencia y cumplimiento';\r\n        }\r\n\r\n        if (!imgScn) {\r\n            error = 'Debes subir la imagen de la transacción';\r\n        }\r\n\r\n        if (error) {\r\n            alert(error);\r\n            return true;\r\n        };\r\n\r\n        return false;\r\n    }\r\n\r\n    const includesPoint = (pointId) => {\r\n        return points.find(p => p == pointId);\r\n    }\r\n\r\n    const navigateTo = (index) => {\r\n        setActiveIndex(index);\r\n    }\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n        setSuccess(false);\r\n    }, [activeIndex]);\r\n\r\n    return (\r\n        <div>\r\n            <HelmetMetaData title={mainTitle + \" - Temple Luna\"} description=\"Aprende a destacar tus obras como nunca antes\" />\r\n            <Navbar />\r\n            <main className='main-body below-navbar colored-background'>\r\n                <section className='container-xl section position-relative z-3'>\r\n                    <h2 className='mb-0'>{mainTitle}</h2>\r\n                    <p className='txt-responsive-form w-60 w-md-75'>con {hostName}</p>\r\n                </section>\r\n                <section className='container-xl mt-3 position-relative'>\r\n                    <div style={{ backgroundImage: `url(${ImgAutor})` }} alt='img-fondo' className='img-fondo-formulario' />\r\n                    <div className='floating-form'>\r\n                        {\r\n                            success\r\n                                ?\r\n                                <div className='form-container text-align-center'>\r\n                                    <Fade bottom>\r\n                                        <FontAwesomeIcon color={'#3DE58D'} icon={faCheckCircle} style={{ fontSize: '8rem' }} />\r\n                                        <h3 className='mt-1 mb-1'>Listo</h3>\r\n                                    </Fade>\r\n                                    <p className='txt-responsive-form m0-auto'>Te contactaremos para unirte al grupo del curso</p>\r\n                                </div>\r\n                                :\r\n                                <>\r\n                                    <Steps\r\n                                        activeIndex={activeIndex}\r\n                                        navigateTo={navigateTo}\r\n                                        steps={steps} />\r\n                                    <div className='form-container'>\r\n                                        <form>\r\n                                            <StepManager currentIndex={activeIndex}>\r\n                                                <div className='step-1'>\r\n\r\n                                                    <div className='form-group mb-0'>\r\n                                                        <h2>Empecemos por una realidad:</h2>\r\n                                                        <p>Tú <b>jamás revelarías</b> tus íntimos secretos ni tus contraseñas, ¿Cierto? <b>Porque no quieres que alguien los vea.</b><br /><br />\r\n                                                            <b>Sin embargo</b>, ¿Te has dado cuenta de que cuando tienes un momento de <b>inspiración</b>, escribes algo, lo pintas o lo manifiestas en algún tipo de <b>arte</b>?<br /><br />\r\n                                                            <b>Ahí está la diferencia.</b> Todo arte lleva implícito el deseo de ser visto por los otros. Si no fuera así, <b>lo esconderías</b>.<br /><br />\r\n                                                            <b>¿Por qué negarlo? ¡Tú también quieres ser leído(a)!</b> Pero ¿Quién decide sí una obra triunfa? <b>Exacto. Es el público</b>.<br /><br />\r\n                                                            <b>Por esa razón, creamos este curso</b>, aquí dejarás las excusas y crearás obras de calidad que les gusten a los demás, sin dejar tu esencia.\r\n                                                            Puedes ver la enseñanza del profesor <b><a target=\"_blank\" href=\"https://www.youtube.com/channel/UCrHV9JlQKBNWLUs5wm8dYCA\">en nuestro canal</a>.</b>\r\n                                                        </p>\r\n                                                    </div>\r\n\r\n                                                    <div className='form-group'>\r\n                                                        <ul>\r\n                                                            <li><b>Número de sesiones:</b> 6</li>\r\n                                                            <li><b>Instructor:</b> Carlos Cadena </li>\r\n                                                            <li><b>Plataforma:</b> Google Meets</li>\r\n                                                            <li><b>Horarios:</b> Mayo: 23 y 30; Junio: 6, 13, 20 y 27. De 11am a 1pm (Hora Lima - Colombia)</li>\r\n                                                            <li><b>Temario:</b> <b><a target=\"_blank\" href=\"https://drive.google.com/file/d/1KjkDV_54swrMFseRpm7xkQtmowAx9Kr2/view?usp=sharing\">Ver aquí</a></b></li>\r\n                                                            <li><b>Inversión:</b> 30 dólares</li>\r\n                                                            <li><b>Método:</b> Paypal</li>\r\n                                                            <li><b>¿Hay facilidades?:</b> 15 dólares antes de iniciar y el resto, después de la sesión del 6</li>\r\n                                                            <li><b>Condición:</b> 10 inscritos como mínimo</li>\r\n                                                            <li><b>Obras llevadas al teatro:</b> <b><a target=\"_blank\" href=\"https://www.facebook.com/LosDemoniosDetrasDeLaPared/\">Ver aquí</a></b>.</li>\r\n                                                            <li><b>Obra \"Eróstrato\":</b> <b><a target=\"_blank\" href=\"https://www.wattpad.com/1040308420-artilugios-del-placer-antolog%C3%ADa-de-candentes\">Leer aquí</a></b></li>\r\n                                                            <li><b>Obra \"La reina de Unicel\":</b> <b><a target=\"_blank\" href=\"https://drive.google.com/file/d/1ocv-43xvgYUXhF2OL9Z5bsZhaStTnigT/view?usp=sharing\">Leer aquí</a></b></li>\r\n                                                        </ul>\r\n                                                    </div>\r\n\r\n                                                    <div className='form-group'>\r\n                                                        <p>Presiona siguiente para continuar.</p>\r\n                                                    </div>\r\n\r\n                                                </div>\r\n                                                <div className='step-2'>\r\n\r\n                                                    <div className='form-group'>\r\n                                                        <label htmlFor=\"txtNombres\">¿Cómo te llamas?</label>\r\n                                                        <input minLength=\"1\" maxLength=\"50\" type=\"text\" value={name} onChange={updName} id=\"txtNombres\" placeholder=\"Ingresa tus nombres\" />\r\n                                                    </div>\r\n                                                    <div className='form-group'>\r\n                                                        <label htmlFor=\"txtEdad\">¿Qué edad tienes?</label>\r\n                                                        <input type=\"number\" min={10} max={99} value={age} onChange={updAge} id=\"txtEdad\" placeholder=\"Ingresa tu edad\" />\r\n                                                    </div>\r\n                                                    <div className='form-group'>\r\n                                                        <label htmlFor=\"txtNumero\">¿Con qué número entrarás? (con código de país)</label>\r\n                                                        <div className='cbo-text'>\r\n                                                            <DropdownImage\r\n                                                                selectedItem={messengerType}\r\n                                                                list={[contactTypes[0]]}\r\n                                                                select={updMessengerType} />\r\n                                                            <input type=\"text\" value={phone} onChange={updPhone} id=\"txtNumero\" placeholder=\"Ej: +51 999 999 999\" />\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='form-group'>\r\n                                                        <label htmlFor=\"txtCorreo\">Bríndanos tu correo de contacto</label>\r\n                                                        <input minLength=\"6\" maxLength=\"100\" type=\"email\" value={email} onChange={updEmail} id=\"txtCorreo\" placeholder=\"Ingresa tu correo\" />\r\n                                                    </div>\r\n\r\n\r\n                                                </div>\r\n                                                <div className='step-3'>\r\n\r\n                                                    <div className='form-group'>\r\n                                                        <label htmlFor=\"flScn\">Realiza el pago <b><a target=\"_blank\" href=\"https://paypal.me/gricardov\">aquí</a></b> y sube la captura</label>\r\n                                                        {\r\n                                                            imgScn\r\n                                                                ?\r\n                                                                <button onClick={startSelectScn} className={`d-flex justify-content-between align-items-center button button-light-purple button-thin stretch ${imgScn ? 'd-flex' : ''}`}>\r\n                                                                    <span className='clamp clamp-1'>\r\n                                                                        {imgScn.name}\r\n                                                                    </span>\r\n                                                                    <span onClick={deleteScn} className='fa fa-times' style={{ color: 'white' }}></span>\r\n                                                                </button>\r\n                                                                :\r\n                                                                <button onClick={startSelectScn} className={`button button-light-purple button-thin stretch ${imgScn ? 'd-flex' : ''}`}>\r\n                                                                    <span>\r\n                                                                        Subir captura\r\n                                                                    </span>\r\n                                                                </button>\r\n                                                        }\r\n                                                        <input type=\"file\" onChange={selectScn} accept=\"image/*\" ref={refScn} className='d-none' id=\"flScn\" />\r\n                                                    </div>\r\n\r\n                                                    <div className='form-group'>\r\n                                                        <label htmlFor=\"txtLink\">He leído los horarios, plataformas, requisitos y confirmo mi asistencia.</label>\r\n                                                        {\r\n                                                            chkPoints.map(point => {\r\n                                                                const included = includesPoint(point.id);\r\n                                                                return (\r\n                                                                    <div key={point.id} onClick={() => selectPoint(point.id)} className={`chkTag ${included ? 'active' : ''}`}>\r\n                                                                        {\r\n                                                                            included\r\n                                                                                ?\r\n                                                                                <FontAwesomeIcon color={'white'} icon={faCheck} style={{ fontSize: '1.6rem' }} />\r\n                                                                                :\r\n                                                                                <FontAwesomeIcon color={'#adadad'} icon={faDotCircle} style={{ fontSize: '1.6rem' }} />\r\n                                                                        }\r\n                                                                        {' '}\r\n                                                                        {point.name}\r\n                                                                    </div>\r\n                                                                )\r\n                                                            })\r\n                                                        }\r\n                                                    </div>\r\n\r\n                                                </div>\r\n                                            </StepManager>\r\n                                            <div className='form-buttons-container'>\r\n                                                {\r\n                                                    canGoBackwards && !loading\r\n                                                    &&\r\n                                                    <button onClick={previous} className='button button-green'>\r\n                                                        <FontAwesomeIcon icon={faAngleLeft} size='xl' />\r\n                                                        {' '}\r\n                                                        <span className='d-none d-md-inline'>\r\n                                                            Anterior\r\n                                                    </span>\r\n                                                    </button>\r\n                                                }\r\n                                                {\r\n                                                    loading\r\n                                                        ?\r\n                                                        <span className='button button-green justify-self-right'>\r\n                                                            Enviando\r\n                                                            {' '}\r\n                                                            <ClipLoader color={'#fff'} loading={true} css={overrideSpinnerInline} size={22} />\r\n                                                        </span>\r\n                                                        :\r\n                                                        isLast\r\n                                                            ?\r\n                                                            <button onClick={send} className='button button-green justify-self-right'>\r\n                                                                <span className='d-none d-md-inline'>\r\n                                                                    Enviar\r\n                                                    </span>\r\n                                                                {' '}\r\n                                                                <FontAwesomeIcon icon={faCheck} size='xl' />\r\n                                                            </button>\r\n                                                            :\r\n                                                            <button onClick={next} className='button button-green justify-self-right'>\r\n                                                                <span className='d-none d-md-inline'>\r\n                                                                    Siguiente\r\n                                                    </span>\r\n                                                                {' '}\r\n                                                                <FontAwesomeIcon icon={faAngleRight} size='xl' />\r\n                                                            </button>\r\n                                                }\r\n                                            </div>\r\n                                        </form>\r\n                                    </div>\r\n                                </>\r\n                        }\r\n                    </div>\r\n                </section>\r\n            </main>\r\n            <Footer />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Inscripcion;","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\pages\\perfil.js",["442","443","444"],"import React, { useState, useEffect } from 'react';\r\nimport PerfilPersona from './perfil_persona';\r\nimport PerfilEditorial from './perfil_editorial';\r\nimport LoadingScreen from '../componentes/loading-screen';\r\nimport { getProfileByQueryFollowName, getProfile } from '../api';\r\n\r\nconst profileData = {\r\n    /*\r\n    type: 'PERSON',\r\n    fName: 'Shany',\r\n    lName:'Dubi',\r\n    networks: [\r\n        'https://firebase.google.com/docs/firestore/security/rules-fields',\r\n        'https://firebase.google.com/docs/firestore/security/rules-fields',\r\n        'https://firebase.google.com/docs/firestore/security/rules-fields'\r\n    ],\r\n    roles: ['COLAB'],\r\n    services: ['CRI', 'DIS'],\r\n    likes: 20,\r\n    views: 30,\r\n    statistics: [{ type: 'CRI', cound: 10 }, { type: 'DIS', count: 2 }],\r\n    editorial: {\r\n        name: 'Editorial Pedro Castillo',\r\n        id: 'sdf',\r\n        mainColor: 'sdf',\r\n        contrastColor: 'asd'\r\n    }\r\n    */\r\n\r\n    type: 'EDITORIAL',\r\n    name: 'Editorial Pedro Castillo',\r\n    followName: 'EditorialPedroCastillo',\r\n    networks: [\r\n        'https://wattpad.com',\r\n        'youtube.com',\r\n        'temple.com'\r\n    ],\r\n    roles: ['COLAB'],\r\n    services: [{ id: 'CRI' }, { id: 'DIS' }],\r\n    members: [],\r\n    about: {\r\n        whoWeAre: 'Te voy a quitar todo, todo, todito. ¿Tienes? Dirás tenemos. Bienvenido a mi gobierno, junto al COVID-21 vamos a ser tu peor pesadilla',\r\n        objective: '',\r\n        joinable: false,\r\n        contact: {\r\n            messengerType: '',\r\n            number: ''\r\n        },\r\n        createdAt: ''\r\n    },\r\n    /*likes: 20,\r\n    views: 30,\r\n    statistics: [{ type: 'CRI', count: 10 }, { type: 'DIS', count: 2 }],*/\r\n    theme: {\r\n        main: '#333333',\r\n        contrast: '#FFF'\r\n    }\r\n}\r\n\r\nconst Perfil = ({ match }) => {\r\n\r\n    const [profileData, setProfileData] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n    \r\n    useEffect(() => {\r\n        const qFollowNameOrId = match.params.id;\r\n        return getProfile(qFollowNameOrId) // Busco perfil por id\r\n            .then(({ profile, error, errCode }) => {\r\n                if (!error) {\r\n                    // Lo encontró por id, así que actualizo la url\r\n                    window.history.replaceState(null, '', profile.qFollowName);\r\n                    setLoading(false);\r\n                    setProfileData(profile);\r\n                } else if (errCode == 'NOT FOUND') {\r\n                    return getProfileByQueryFollowName(qFollowNameOrId.toLowerCase()) // Si no, lo busco por nombre de seguidor\r\n                        .then(({ profile, error }) => {\r\n                            if (!error) {\r\n                                // Lo reemplazo pr el id en minúsculas\r\n                                window.history.replaceState(null, '', qFollowNameOrId.toLowerCase());\r\n                                setLoading(false);\r\n                                setProfileData(profile);\r\n                            }\r\n                            else {\r\n                                setLoading(false);\r\n                                alert('No se encontró un perfil con ese identificador');\r\n                            }\r\n                        })\r\n                }\r\n            })\r\n    }, []);\r\n\r\n    if (loading) {\r\n        return <LoadingScreen text={'Obteniendo perfil'} />\r\n    } else if (profileData) {\r\n        switch (profileData.type) {\r\n            case 'PERSON':\r\n                return <PerfilPersona {...profileData} />\r\n            case 'EDITORIAL':\r\n                return <PerfilEditorial {...profileData} />\r\n            default:\r\n                return <PerfilPersona {...profileData} />\r\n        }\r\n    } else {\r\n        return <div>No hay información del perfil</div>\r\n    }\r\n}\r\n\r\nexport default Perfil;","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\service-card\\index.js",[],"C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\pages\\perfil_persona.js",["445","446","447","448","449","450","451"],"import React, { useState, useEffect, useContext } from 'react'\r\nimport Navbar from '../componentes/navbar';\r\nimport Footer from '../componentes/footer/footer';\r\nimport SampleEditorialIcon from '../img/sample-editorial-icon.svg';\r\nimport Tabs from '../componentes/tabs';\r\nimport HelmetMetaData from \"../componentes/helmet\";\r\nimport PuffLoader from \"react-spinners/PuffLoader\";\r\nimport ResultPreviewCard from '../componentes/result-preview-card';\r\nimport Tooltip from '../componentes/tooltip';\r\nimport Avatar from '../componentes/avatar';\r\nimport { useWindowSize } from '../hooks/useWindowSize';\r\nimport { css } from \"@emotion/core\";\r\nimport { getServiceById, getUserRoleById, getSnIconByUrl } from '../helpers/functions';\r\nimport { AuthContext } from '../context/AuthContext';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faEye, faHeart } from '@fortawesome/free-solid-svg-icons';\r\nimport { getStatistics, getRequests } from '../api';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst override = css`\r\n  display: block;\r\n  margin: 5rem auto;\r\n`;\r\n\r\nconst limit = 3;\r\n\r\nconst Perfil = ({ id, fName, lName, likes, views, networks, imgUrl, theme, roles, services, editorial }) => {\r\n\r\n    const { logged } = useContext(AuthContext);\r\n    const history = useHistory();\r\n\r\n    // Tema\r\n    const style = {\r\n        background: (theme && theme.main) || '',\r\n        color: (theme && theme.contrast) || ''\r\n    };\r\n\r\n    const [activeTabIndex, setActiveTabIndex] = useState(0);\r\n    const [initialLoading, setInitialLoading] = useState(false);\r\n    const [loadingMore, setLoadingMore] = useState(false);\r\n    const [isLast, setIsLast] = useState(false);\r\n    const [requestList, setRequestList] = useState([]);\r\n    const [visibleColumns, setVisibleColumns] = useState(0); // Esto estblaece cuantos datos solicitar * 2 para que se vea en la pantasa\r\n    const [tabList, setTabList] = useState(services.map(service => getServiceById(service)));\r\n    const { width } = useWindowSize();\r\n\r\n    const [roleTooltipOpen, setRoleTooltipOpen] = useState(false);\r\n    const [servTooltipOpen, setServiceTooltipOpen] = useState(false);\r\n\r\n    const navigateTo = (route) => {\r\n        history.push(route);\r\n    }\r\n\r\n    const updActiveTabIndex = (val) => {\r\n        setActiveTabIndex(val);\r\n    }\r\n\r\n    const updateStatistics = () => {\r\n        getStatistics(tabList.map(tab => id + '-' + tab.id))\r\n            .then(data => setTabList(tabList.map((e, i) => !data[i].error ? { ...tabList[i], statistics: data[i].statistics.done } : tabList[i])));\r\n    }\r\n\r\n    const getLastElement = (field) => {\r\n        return requestList[requestList.length - 1] ? requestList[requestList.length - 1][field] : undefined;\r\n    }\r\n\r\n    const requestData = () => {\r\n        setInitialLoading(true);\r\n        const requestType = tabList[activeTabIndex].id;\r\n        getRequests(id, requestType, 'HECHO', undefined, visibleColumns * 2, 'desc')\r\n            .then(data => {\r\n                setInitialLoading(false);\r\n                setIsLast(data.isLast);\r\n                setRequestList(data.list);\r\n            })\r\n            .catch(error => {\r\n                setInitialLoading(false);\r\n                alert('Ha ocurrido un error. Vuelve a intentarlo más tarde (EC.RD)');\r\n            });\r\n    }\r\n\r\n    const requestMoreData = () => {\r\n        if (!initialLoading && !loadingMore) {\r\n            setLoadingMore(true);\r\n            const requestType = tabList[activeTabIndex].id;\r\n            getRequests(id, requestType, 'HECHO', getLastElement('createdAt'), visibleColumns, 'desc')\r\n                .then(data => {\r\n                    setLoadingMore(false);\r\n                    setIsLast(data.isLast);\r\n                    setRequestList((state) => ([...state, ...data.list]));\r\n                })\r\n                .catch(error => {\r\n                    setLoadingMore(false);\r\n                    alert('Ha ocurrido un error. Vuelve a intentarlo más tarde (EC.RMD)');\r\n                });\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        if (width < 610) {\r\n            setVisibleColumns(1);\r\n        } else if (width < 910) {\r\n            setVisibleColumns(2);\r\n        } else if (width < 1500) {\r\n            setVisibleColumns(3);\r\n        } else {\r\n            setVisibleColumns(4);\r\n        }\r\n\r\n    }, [width]);\r\n\r\n    useEffect(() => {\r\n        requestData();\r\n    }, [activeTabIndex, visibleColumns]);\r\n\r\n    useEffect(() => {\r\n        updateStatistics();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <HelmetMetaData title={`${logged ? fName + ' ' + lName + ' - Temple Luna' : '¡' + fName + ' ' + lName + ' ya está en Temple Luna!'}`} image={imgUrl} />\r\n            <Navbar />\r\n            <main className='main-body below-navbar'>\r\n                <section className='profile-header-container' style={{ background: 'white' }}>\r\n                    <div className='profile-container'>\r\n                        <div>\r\n                            <div className='profile-img'>\r\n                                <div className='sn-container'>\r\n                                    {\r\n                                        networks.slice(0, 2).map(network => {\r\n                                            const iconData = getSnIconByUrl(network);\r\n\r\n                                            if (iconData) {\r\n                                                return (\r\n                                                    <a target='_blank' href={network} className={`sn-icon ${iconData.className}`}>\r\n                                                        <img src={iconData.imgSrc} alt='img-icon' />\r\n                                                    </a>\r\n                                                )\r\n                                            }\r\n                                        })\r\n                                    }\r\n                                </div>\r\n                                {/*\r\n                                    editorial\r\n                                        ?\r\n                                        <div className='editorial-tag clamp clamp-1'>\r\n                                            <img src={SampleEditorialIcon} alt='img-editorial' />\r\n                                            <span className='clamp clamp-1'>\r\n                                                {editorial.name}\r\n                                            </span>\r\n                                        </div>\r\n                                        :\r\n                                        <div className='editorial-tag clamp clamp-1'>\r\n                                            <span className='clamp clamp-1'>\r\n                                                Independiente\r\n                                        </span>\r\n                                        </div>\r\n                                */}\r\n                                <div className='editorial-tag clamp clamp-1'>\r\n                                    <span className='clamp clamp-1'>\r\n                                        Independiente\r\n                                    </span>\r\n                                </div>\r\n                                <Avatar img={imgUrl} clases='profile-img img-avatar-container border-shadow' />\r\n                            </div>\r\n                        </div>\r\n                        <div className='profile-data'>\r\n                            <h2 className='clamp clamp-2 no-break'>{fName + ' ' + lName}</h2>\r\n                            <div className='statistics'>\r\n                                <div className='statistic'>\r\n                                    {(views ? views >= 1000 ? (views / 1000).toFixed(1) + 'k' : views : 0) + ' '}\r\n                                    <FontAwesomeIcon icon={faEye} className='icon' />\r\n                                </div>\r\n                                <div className='statistic'>\r\n                                    {(likes ? likes >= 1000 ? (likes / 1000).toFixed(1) + 'k' : likes : 0) + ' '}\r\n                                    <FontAwesomeIcon icon={faHeart} className='icon' />\r\n                                </div>\r\n                            </div>\r\n                            <div className='description'>\r\n                                {\r\n                                    <p>{getUserRoleById(roles[0])?.name}\r\n                                        {\r\n                                            roles.length > 1\r\n                                            &&\r\n                                            <>\r\n                                                {' y '}\r\n                                                <b onMouseEnter={() => setRoleTooltipOpen(true)} onMouseLeave={() => setRoleTooltipOpen(false)} className='position-relative cursor-pointer'>\r\n                                                    {roles.length - 1} más\r\n                                                    <Tooltip isOpen={roleTooltipOpen}>\r\n                                                        {\r\n                                                            roles.slice(1, roles.length).map(role => <p>{getUserRoleById(role)?.name}</p>)\r\n                                                        }\r\n                                                    </Tooltip>\r\n                                                </b>\r\n                                            </>\r\n                                        }\r\n                                    </p>\r\n                                }\r\n                                {\r\n                                    // Solo se deben mostrar 2 en pantalla y el resto en tooltip                                    \r\n                                    <p>Servicio de {services.slice(0, 2).map(service => getServiceById(service)?.name).join(services.length > 2 ? ', ' : ' y ').toLowerCase()}\r\n                                        {\r\n                                            services.length > 2\r\n                                            &&\r\n                                            <>\r\n                                                {' y '}\r\n                                                <b onMouseEnter={() => setServiceTooltipOpen(true)} onMouseLeave={() => setServiceTooltipOpen(false)} className='position-relative cursor-pointer'>\r\n                                                    {services.length - 2} más\r\n                                                    <Tooltip isOpen={servTooltipOpen}>\r\n                                                        {\r\n                                                            services.slice(2, services.length).map(service => <p>{getServiceById(service).name}</p>)\r\n                                                        }\r\n                                                    </Tooltip>\r\n                                                </b>\r\n                                            </>\r\n                                        }\r\n                                    </p>\r\n\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                        <div className='profile-editorial'>\r\n                            {/*\r\n                                editorial\r\n                                    ?\r\n                                    <div className='editorial-tag clamp clamp-1'>\r\n                                        <img src={SampleEditorialIcon} alt='img-editorial' />\r\n                                        <span className='clamp clamp-1'>\r\n                                            {editorial.name}\r\n                                        </span>\r\n                                    </div>\r\n                                    :\r\n                                    <div className='editorial-tag clamp clamp-1'>\r\n                                        <img src={SampleEditorialIcon} alt='img-editorial' />\r\n                                        <span className='clamp clamp-1'>\r\n                                            Independiente\r\n                                        </span>\r\n                                    </div>\r\n                            */}\r\n                            <div className='editorial-tag clamp clamp-1'>\r\n                                <img src={SampleEditorialIcon} alt='img-editorial' />\r\n                                <span className='clamp clamp-1'>\r\n                                    Independiente\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n                <Tabs\r\n                    initialLoading={initialLoading}\r\n                    loadingMore={loadingMore}\r\n                    requestMoreData={requestMoreData}\r\n                    hasMore={!isLast}\r\n                    loader={<PuffLoader color={'#8B81EC'} loading={true} css={override} size={100} />}\r\n                    activeIndex={activeTabIndex}\r\n                    select={updActiveTabIndex}\r\n                    tabs={tabList.map(tab => tab.name + ` (${tab.statistics ? tab.statistics : 0})`)}>\r\n                    <div className='container-xl services-profile-container'>\r\n                        {\r\n                            requestList.map(request => (\r\n                                <ResultPreviewCard\r\n                                    {...request}\r\n                                    isOwner={logged ? logged.uid == request.takenBy : false}\r\n                                    onClick={(id) => navigateTo(`/prev_resultado?id=${id}`)}\r\n                                />\r\n                            ))\r\n                        }\r\n                    </div>\r\n                </Tabs>\r\n            </main>\r\n            <Footer />\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default Perfil;","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\pages\\perfil_editorial.js",["452","453","454","455","456"],"import React, { useState, useEffect, useContext } from 'react'\r\nimport Navbar from '../componentes/navbar';\r\nimport Footer from '../componentes/footer/footer';\r\nimport ImgPerfil from '../img/pedrito.png';\r\nimport Tabs from '../componentes/tabs';\r\nimport HelmetMetaData from \"../componentes/helmet\";\r\nimport PuffLoader from \"react-spinners/PuffLoader\";\r\nimport ServiceCard from '../componentes/service-card';\r\nimport { css } from \"@emotion/core\";\r\nimport { getSnIconByUrl } from '../helpers/functions';\r\nimport { editorialTabs } from '../data/data';\r\nimport { AuthContext } from '../context/AuthContext';\r\n\r\nconst override = css`\r\n  display: block;\r\n  margin: 5rem auto;\r\n`;\r\n\r\nconst Perfil = ({ id, name, likes, views, networks, followName, about, services, theme }) => {\r\n\r\n    // Tema\r\n    const style = {\r\n        background: (theme && theme.main) || '',\r\n        color: (theme && theme.contrast) || ''\r\n    };\r\n\r\n    const { logged } = useContext(AuthContext);\r\n\r\n    const [activeTabIndex, setActiveTabIndex] = useState(0);\r\n    const [initialLoading, setInitialLoading] = useState(false);\r\n    const [requestList, setRequestList] = useState([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]);\r\n\r\n    const updActiveTabIndex = (val) => {\r\n        setActiveTabIndex(val);\r\n    }\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <HelmetMetaData title={`${logged ? name + ' - Temple Luna' : '¡' + name + ' está en Temple Luna!'}`} />\r\n            <Navbar defaultColor={style.background} />\r\n            <main className='main-body below-navbar'>\r\n                <section className='profile-header-container' style={style}>\r\n                    <div className='profile-container'>\r\n                        <div>\r\n                            <div className='profile-img'>\r\n                                <img src={ImgPerfil} alt='img-perfil' />\r\n                            </div>\r\n                        </div>\r\n                        <div className='profile-data'>\r\n                            <h2 className='clamp clamp-2 no-break'>{name}</h2>\r\n                            <div className='follow-name clamp clamp-1'>\r\n                                @{followName}\r\n                            </div>\r\n                            <div className='description d-none d-md-block'>\r\n                                <p className='clamp clamp-3 no-break'>{about.whoWeAre}</p>\r\n                            </div>\r\n                        </div>\r\n                        <div className='sn-container'>\r\n                            {\r\n                                networks.slice(0, 3).map(network => {\r\n                                    const iconData = getSnIconByUrl(network);\r\n\r\n                                    if (iconData) {\r\n                                        return (\r\n                                            <a target='_blank' href={network} className={`sn-icon ${iconData.className}`}>\r\n                                                <img src={iconData.imgSrc} alt='img-icon' />\r\n                                            </a>\r\n                                        )\r\n                                    }\r\n                                })\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n                <Tabs\r\n                    theme={theme}\r\n                    initialLoading={initialLoading}\r\n                    loadingMore={false}\r\n                    requestMoreData={() => { }}\r\n                    hasMore={false}\r\n                    loader={<PuffLoader color={'#8B81EC'} loading={true} css={override} size={100} />}\r\n                    activeIndex={activeTabIndex}\r\n                    select={updActiveTabIndex}\r\n                    tabs={editorialTabs.map(e => e.name)}>\r\n                        <div className='container-xl services-profile-container'>\r\n                            {\r\n                                services.map(service => (\r\n                                    <ServiceCard id={service.id} img={service.img} color={service.color} />\r\n                                ))\r\n                            }\r\n                        </div>\r\n                </Tabs>\r\n            </main>\r\n            <Footer />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Perfil;","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\pages\\ins_evento_APRENDE-SER-PAGADO-POR-ESCRIBIR-CRISTI-1.js",["457","458","459","460"],"import React, { useState, useEffect } from 'react'\r\nimport Footer from '../componentes/footer/footer';\r\nimport Navbar from '../componentes/navbar';\r\nimport DropdownImage from '../componentes/dropdown-image';\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport Steps from '../componentes/forms/forms-steps';\r\nimport StepManager from '../componentes/forms/step-manager/step-manager';\r\nimport Fade from 'react-reveal/Fade';\r\nimport ImgAutor from '../img/cristi.jpg';\r\nimport HelmetMetaData from \"../componentes/helmet\";\r\nimport { toName } from '../helpers/functions';\r\nimport { isNameInvalid, isAgeInvalid, isPhoneInvalid, isEmailInvalid } from '../helpers/validators';\r\nimport { saveEvent } from '../api';\r\nimport { useStepObserver } from '../hooks/useStepObserver';\r\nimport { css } from \"@emotion/core\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faAngleDown, faAngleLeft, faAngleRight, faCheck, faCheckCircle, faDotCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { contactTypes } from '../data/data';\r\nimport { faWhatsapp } from '@fortawesome/free-brands-svg-icons';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst steps = ['Inicio', 'Contacto', 'Listo'];\r\nconst chkPoints = [{ id: 'SI', name: 'Sí', abrev: 'Sí' }];\r\n\r\nconst overrideSpinnerInline = css`\r\n  display: inline-block;\r\n  vertical-align: middle;\r\n`;\r\n\r\nconst mainTitle = 'Aprende a ser pagado por escribir';\r\nconst hostName = 'Cristina de Martinez';\r\n\r\nconst Inscripcion = () => {\r\n\r\n    const [activeIndex, setActiveIndex] = useState(0);\r\n    const [loading, setLoading] = useState(false); // Determina si se está enviando el form\r\n    const [success, setSuccess] = useState(true); // Determina si se envío el form sin errores\r\n    const { canGoBackwards, isLast } = useStepObserver(activeIndex, steps.length);\r\n\r\n    const [name, setName] = useState('');\r\n    const [age, setAge] = useState('');\r\n    const [phone, setPhone] = useState('');\r\n    const [messengerType, setMessengerType] = useState(contactTypes[0]);\r\n    const [email, setEmail] = useState('');\r\n    const [points, setPoints] = useState([]);\r\n\r\n    const history = useHistory();\r\n\r\n    const updName = (e) => {\r\n        setName(e.target.value);\r\n    }\r\n\r\n    const updAge = (e) => {\r\n        setAge(e.target.value);\r\n    }\r\n\r\n    const updPhone = (e) => {\r\n        setPhone(e.target.value);\r\n    }\r\n\r\n    const updMessengerType = (val) => {\r\n        setMessengerType(val);\r\n    }\r\n\r\n    const updEmail = (e) => {\r\n        setEmail(e.target.value);\r\n    }\r\n\r\n    const selectPoint = (id) => {\r\n        if (includesPoint(id)) {\r\n            setPoints(points.filter(p => p != id));\r\n        } else {\r\n            setPoints([...points, id]);\r\n        }\r\n    }\r\n\r\n    const previous = (e) => {\r\n        e.preventDefault();\r\n        navigateTo(activeIndex - 1);\r\n    }\r\n\r\n    const next = (e) => {\r\n        e.preventDefault();\r\n        navigateTo(activeIndex + 1);\r\n    }\r\n\r\n    const send = async (e) => {\r\n        e.preventDefault();\r\n        if (!checkErrors()) {\r\n            setLoading(true);\r\n            saveChanges();\r\n        }\r\n    }\r\n\r\n    const saveChanges = () => {\r\n\r\n        const idEvento = history.location.pathname.toString().replace(/\\//g, '').replace(/ins_evento/g, '');\r\n\r\n        const data = {\r\n            eventId: idEvento,\r\n            eventName: mainTitle,\r\n            name: toName(name.trim()),\r\n            age: parseInt(age),\r\n            phone: phone.trim(),\r\n            email: email.trim()\r\n        };\r\n\r\n        saveEvent(data).then(() => {\r\n            window.scrollTo(0, 0);\r\n            setLoading(false);\r\n            setSuccess(true);\r\n        });\r\n    }\r\n\r\n    const checkErrors = () => {\r\n\r\n        let error = (isNameInvalid(name) || isAgeInvalid(age) || isPhoneInvalid(phone) || isEmailInvalid(email));\r\n\r\n        // Custom errors\r\n        if (!includesPoint('SI')) {\r\n            error = 'Debes confirmar tu asistencia y cumplimiento';\r\n        }\r\n\r\n        if (error) {\r\n            alert(error);\r\n            return true;\r\n        };\r\n\r\n        return false;\r\n    }\r\n\r\n    const includesPoint = (pointId) => {\r\n        return points.find(p => p == pointId);\r\n    }\r\n\r\n    const navigateTo = (index) => {\r\n        setActiveIndex(index);\r\n    }\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n        setSuccess(false);\r\n    }, [activeIndex]);\r\n\r\n    return (\r\n        <div>\r\n            <HelmetMetaData title={mainTitle + \" - Temple Luna\"} description=\"¿La plataforma de turno no valora lo que escribes? Puedes tener una joya oculta entre manos por la que muchos pagarían.\" />\r\n            <Navbar />\r\n            <main className='main-body below-navbar colored-background'>\r\n                <section className='container-xl section position-relative z-3'>\r\n                    <h2 className='mb-0'>{mainTitle}</h2>\r\n                    <p className='txt-responsive-form w-60 w-md-75'>Con {hostName}</p>\r\n                </section>\r\n                <section className='container-xl mt-3 position-relative'>\r\n                    <img src={ImgAutor} alt='img-fondo' className='img-fondo-formulario' />\r\n                    <div className='floating-form'>\r\n                        {\r\n                            success\r\n                                ?\r\n                                <div className='form-container text-align-center'>\r\n                                    <Fade bottom>\r\n                                        <FontAwesomeIcon color={'#3DE58D'} icon={faCheckCircle} style={{ fontSize: '8rem' }} />\r\n                                        <h3 className='mt-1 mb-1'>Listo</h3>\r\n                                    </Fade>\r\n                                    <p className='txt-responsive-form m0-auto'>¡No olvides unirte al grupo! Presiona el botón de abajo</p>\r\n                                    <FontAwesomeIcon icon={faAngleDown} size='2x' />\r\n\r\n                                    <div className='form-buttons-container mt-3'>\r\n                                        <a href=\"https://chat.whatsapp.com/J7T9yHij1ewFNLV41qlZoB\" className='button button-green m0-auto'>\r\n                                            <FontAwesomeIcon icon={faWhatsapp} size='1x' />\r\n                                            {' '}\r\n                                            <span>\r\n                                                Unirme\r\n                                            </span>\r\n                                        </a>\r\n                                    </div>\r\n                                </div>\r\n                                :\r\n                                <>\r\n                                    <Steps\r\n                                        activeIndex={activeIndex}\r\n                                        navigateTo={navigateTo}\r\n                                        steps={steps} />\r\n                                    <div className='form-container'>\r\n                                        <form>\r\n                                            <StepManager currentIndex={activeIndex}>\r\n                                                <div className='step-1'>\r\n\r\n                                                    <div className='form-group mb-0'>\r\n                                                        <h2>¡Bienvenido(a) al taller!</h2>\r\n                                                        <p>¿La <b>plataforma de turno</b> no valora lo que escribes?<br /><br />\r\n                                                            <b>A muchos nos sucede</b> cuando empezamos a escribir: La plataforma promociona <b>las historias de siempre</b> y todos terminan leyendo <b> fanfics de Donald Trump </b>\r\n                                                        o los <b>Jonas Brothers versión pandemia</b>.<br /><br />\r\n                                                        Pero todos sabemos que hay <b>joyas ocultas</b>. Las plataformas <b>serias</b> también lo saben. <b>Por eso,</b> buscan constantemente a esos artistas y <b>les pagan por escribir</b>.\r\n                                                        Aquí tienes <b>dos ejemplos</b> de obras publicadas por miembros de nuestra <b>comunidad:</b> <b><a target='_blank' href='https://www.buenovela.com/book_info/31000016987/Romntica/La-Obsesin-de-Jack-Black'>La obsesión de Black Jack</a></b>\r\n                                                            {' y '}<b><a target='_blank' href='https://www.buenovela.com/book_info/31000018353/Ciencia-Ficcin/El-Juego-(El-Juego-1)'>El juego</a></b>.<br /><br />\r\n\r\n                                                            <b>Tú puedes tener una joya oculta entre manos</b>. ¡Inscríbete al taller y aprende a postular!<br /><br />\r\n\r\n                                                            Al final de tu inscripción, te aparecerá un botón para ingresar al <b>grupo de Whatsapp</b>. Inscríbete <b>solamente</b> si vas a asistir.<br /><br />\r\n\r\n                                                            <b>*Si te inscribes e incumples, ya no serás tenido en cuenta en otras dinámicas de Temple Luna.</b><br /><br />\r\n                                                        </p>\r\n                                                    </div>\r\n\r\n                                                    <div className='form-group'>\r\n                                                        <ul>\r\n                                                            <li><b>Número de sesiones:</b> 1</li>\r\n                                                            <li><b>Autora:</b> Cristina de Martinez</li>\r\n                                                            <li><b>Plataforma:</b> Google Meets</li>\r\n                                                            <li><b>Horario:</b> Lunes, 17 de mayo a las 5pm (Hora Lima - Colombia)</li>\r\n                                                        </ul>\r\n                                                    </div>\r\n\r\n                                                    <div className='form-group'>\r\n                                                        <p>Presiona siguiente para continuar.</p>\r\n                                                    </div>\r\n\r\n                                                </div>\r\n                                                <div className='step-2'>\r\n\r\n                                                    <div className='form-group'>\r\n                                                        <label htmlFor=\"txtNombres\">¿Cómo te llamas?</label>\r\n                                                        <input minLength=\"1\" maxLength=\"50\" type=\"text\" value={name} onChange={updName} id=\"txtNombres\" placeholder=\"Ingresa tus nombres\" />\r\n                                                    </div>\r\n                                                    <div className='form-group'>\r\n                                                        <label htmlFor=\"txtEdad\">¿Qué edad tienes?</label>\r\n                                                        <input type=\"number\" min={10} max={99} value={age} onChange={updAge} id=\"txtEdad\" placeholder=\"Ingresa tu edad\" />\r\n                                                    </div>\r\n                                                    <div className='form-group'>\r\n                                                        <label htmlFor=\"txtNumero\">¿Con qué número entrarás? (con código de país)</label>\r\n                                                        <div className='cbo-text'>\r\n                                                            <DropdownImage\r\n                                                                selectedItem={messengerType}\r\n                                                                list={[contactTypes[0]]}\r\n                                                                select={updMessengerType} />\r\n                                                            <input type=\"text\" value={phone} onChange={updPhone} id=\"txtNumero\" placeholder=\"Ej: +51 999 999 999\" />\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='form-group'>\r\n                                                        <label htmlFor=\"txtCorreo\">Bríndanos tu correo de contacto</label>\r\n                                                        <input minLength=\"6\" maxLength=\"100\" type=\"email\" value={email} onChange={updEmail} id=\"txtCorreo\" placeholder=\"Ingresa tu correo\" />\r\n                                                    </div>\r\n\r\n                                                </div>\r\n                                                <div className='step-3'>\r\n\r\n                                                    <div className='form-group'>\r\n\r\n                                                        <div className='form-group'>\r\n                                                            <label htmlFor=\"txtLink\">He leído los horarios y confirmo mi asistencia</label>\r\n                                                            {\r\n                                                                chkPoints.map(point => {\r\n                                                                    const included = includesPoint(point.id);\r\n                                                                    return (\r\n                                                                        <div key={point.id} onClick={() => selectPoint(point.id)} className={`chkTag ${included ? 'active' : ''}`}>\r\n                                                                            {\r\n                                                                                included\r\n                                                                                    ?\r\n                                                                                    <FontAwesomeIcon color={'white'} icon={faCheck} style={{ fontSize: '1.6rem' }} />\r\n                                                                                    :\r\n                                                                                    <FontAwesomeIcon color={'#adadad'} icon={faDotCircle} style={{ fontSize: '1.6rem' }} />\r\n                                                                            }\r\n                                                                            {' '}\r\n                                                                            {point.name}\r\n                                                                        </div>\r\n                                                                    )\r\n                                                                })\r\n                                                            }\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </StepManager>\r\n                                            <div className='form-buttons-container'>\r\n                                                {\r\n                                                    canGoBackwards && !loading\r\n                                                    &&\r\n                                                    <button onClick={previous} className='button button-green'>\r\n                                                        <FontAwesomeIcon icon={faAngleLeft} size='xl' />\r\n                                                        {' '}\r\n                                                        <span className='d-none d-md-inline'>\r\n                                                            Anterior\r\n                                                    </span>\r\n                                                    </button>\r\n                                                }\r\n                                                {\r\n                                                    loading\r\n                                                        ?\r\n                                                        <span className='button button-green justify-self-right'>\r\n                                                            Enviando\r\n                                                            {' '}\r\n                                                            <ClipLoader color={'#fff'} loading={true} css={overrideSpinnerInline} size={22} />\r\n                                                        </span>\r\n                                                        :\r\n                                                        isLast\r\n                                                            ?\r\n                                                            <button onClick={send} className='button button-green justify-self-right'>\r\n                                                                <span className='d-none d-md-inline'>\r\n                                                                    Enviar\r\n                                                    </span>\r\n                                                                {' '}\r\n                                                                <FontAwesomeIcon icon={faCheck} size='xl' />\r\n                                                            </button>\r\n                                                            :\r\n                                                            <button onClick={next} className='button button-green justify-self-right'>\r\n                                                                <span className='d-none d-md-inline'>\r\n                                                                    Siguiente\r\n                                                    </span>\r\n                                                                {' '}\r\n                                                                <FontAwesomeIcon icon={faAngleRight} size='xl' />\r\n                                                            </button>\r\n                                                }\r\n                                            </div>\r\n                                        </form>\r\n                                    </div>\r\n                                </>\r\n                        }\r\n                    </div>\r\n\r\n                </section>\r\n            </main>\r\n            <Footer />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Inscripcion;","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\tooltip\\index.js",[],"C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\tooltip\\tooltip.js",[],"C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\pages\\solicitud-correccion.js",["461","462","463","464","465"],"C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\modal\\correctionDetail.js",["466","467","468","469","470","471","472","473","474","475","476","477","478","479","480"],"import React, { useContext, useState, useEffect } from 'react';\r\nimport ConfirmationModal from './confirmationModal';\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport Avatar from '../avatar';\r\nimport Zoom from 'react-reveal/Zoom';\r\nimport { getDateText, getExpDateText, getMessengerTypeName, getFormattedPhone, getAbrevPointName, extractLink } from '../../helpers/functions';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { AuthContext } from '../../context/AuthContext';\r\nimport { css } from \"@emotion/core\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faAngleDown, faEdit, faEye, faHandPaper, faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport { getProfileStorage } from '../../helpers/userStorage';\r\nimport { faWhatsapp } from '@fortawesome/free-brands-svg-icons';\r\nimport './modals.css';\r\n\r\nconst overrideSpinnerInline = css`\r\n  display: inline-block;\r\n  margin-left: .6rem;\r\n  vertical-align: middle;\r\n`;\r\n\r\nconst Modal = ({ isOpen, data, takingRequest, openConfirmationModal, close }) => {\r\n\r\n    const history = useHistory();\r\n\r\n    const { logged } = useContext(AuthContext);\r\n    const isTakenByMe = data?.takenBy == logged.uid;\r\n    const messengerType = data?.messengerType;\r\n    const formattedPhone = getFormattedPhone(data?.phone);\r\n    const formattedLink = extractLink(data?.link);\r\n\r\n    let styles = '';\r\n    if (isOpen) {\r\n        styles = 'open';\r\n    } else {\r\n        styles = 'close';\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={'overlay overlay-modal ' + styles} onClick={close} />\r\n            <Zoom bottom collapse when={isOpen}>\r\n                <div className={'modal ' + styles}>\r\n                    <div className='modal-container'>\r\n                        <div className='header-container position-relative'>\r\n                            <Avatar clases='modal-avatar img-avatar-container' />\r\n                            <div className='title-container'>\r\n                                <h3 className='clamp clamp-2'>{data?.title}</h3>\r\n                                <p>{\r\n                                    data?.status == 'DISPONIBLE' || isTakenByMe && data?.status == 'HECHO'\r\n                                        ?\r\n                                        getDateText(data?.createdAt.seconds * 1000)\r\n                                        :\r\n                                        isTakenByMe && data?.status == 'TOMADO'\r\n                                            ?\r\n                                            getExpDateText(data?.expDate.seconds * 1000)\r\n                                            :\r\n                                            null\r\n                                }</p>\r\n                            </div>\r\n                            <FontAwesomeIcon icon={faAngleDown} onClick={close} className='close-icon' />\r\n                        </div>\r\n                        <div className='description-container'>\r\n                            <p>{data?.about || 'No hay descripción'}</p>\r\n                            <h4>Link de la obra</h4>\r\n                            {\r\n                                formattedLink ?\r\n                                    <a target='_blank' className='clamp clamp-1' href={formattedLink}>{formattedLink}</a>\r\n                                    :\r\n                                    <p>No existe link</p>\r\n                            }\r\n                            <h4>Puntos requeridos</h4>\r\n                            <ul>\r\n                                {\r\n                                    data?.points?.map(point => (\r\n                                        <li key={point}>{getAbrevPointName(point)}</li>\r\n                                    ))\r\n                                }\r\n                            </ul>\r\n                            {\r\n                                (!data?.points || data?.points?.length < 1)\r\n                                &&\r\n                                <p>No se han especificado puntos</p>\r\n                            }\r\n                            {\r\n                                isTakenByMe\r\n                                &&\r\n                                <>\r\n                                    <h4>Datos de contacto</h4>\r\n                                    <p className=\"m-0\"><b>Nombre:</b> {data?.name}</p>\r\n                                    <p className=\"m-0\"><b>Contacto:</b> {data?.phone} ({getMessengerTypeName(messengerType)})</p>\r\n                                    {\r\n                                        messengerType == 'WSP' && formattedPhone\r\n                                        &&\r\n                                        <button onClick={() => window.open('https://web.whatsapp.com/send?phone=' + formattedPhone)} className='button button-whatsapp button-blue button-option-request my-1'>\r\n                                            <FontAwesomeIcon color={'#fff'} icon={faWhatsapp} className='icon' />\r\n                                                Contactar\r\n                                        </button>\r\n                                    }\r\n                                    <p className=\"m-0 mb-2\"><b>Correo:</b> {data?.email}</p>\r\n                                </>\r\n                            }\r\n                        </div>\r\n                        <div className=\"footer-card-container\">\r\n                            <div className='button-container'>\r\n                                {\r\n                                    takingRequest\r\n                                        ?\r\n                                        <button onClick={() => { }} className='button button-blue button-option-request'>\r\n                                            Cargando\r\n                                                {' '}\r\n                                            <ClipLoader color={'#fff'} loading={true} css={overrideSpinnerInline} size={22} />\r\n                                        </button>\r\n                                        :\r\n                                        <>\r\n                                            <>\r\n                                                {\r\n                                                    data?.status == 'DISPONIBLE'\r\n                                                        ?\r\n                                                        <button onClick={() => openConfirmationModal(true)} className='button button-blue button-option-request'>\r\n                                                            <FontAwesomeIcon color={'#fff'} icon={faHandPaper} className='icon' />\r\n                                                            Tomar pedido\r\n                                                        </button>\r\n                                                        :\r\n                                                        data?.status == 'TOMADO' && isTakenByMe\r\n                                                            ?\r\n                                                            <button onClick={() => history.push('prep_correccion', { data })} className='button button-green button-option-request'>\r\n                                                                <FontAwesomeIcon color={'#fff'} icon={faEdit} className='icon' />\r\n                                                            Iniciar corrección\r\n                                                            </button>\r\n                                                            :\r\n                                                            null\r\n                                                }\r\n                                            </>\r\n                                            {\r\n                                                data?.status == 'HECHO' && isTakenByMe\r\n                                                && (\r\n                                                    <button onClick={() => history.push(`prev_resultado?id=${data.id}&origin=tl`)} className='button button-green button-option-request'>\r\n                                                        <FontAwesomeIcon color={'#fff'} icon={faEye} className='icon' />\r\n                                                        Ir a resultado\r\n                                                    </button>\r\n                                                )\r\n                                            }\r\n                                            <button onClick={close} className='button button-red button-option-request'>\r\n                                                <FontAwesomeIcon color={'#fff'} icon={faTimes} className='icon' />\r\n                                                Cerrar\r\n                                            </button>\r\n                                        </>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </Zoom>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Modal;","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\pages\\prep_correccion.js",["481"],"import React, { useState, useEffect } from 'react'\r\nimport Footer from '../componentes/footer/footer';\r\nimport Navbar from '../componentes/navbar';\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport Fade from 'react-reveal/Fade';\r\nimport { css } from \"@emotion/core\";\r\nimport { setRequestDone } from '../api';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowLeft, faPaperPlane, faCheckCircle, faHome, faEye } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst overrideSpinnerInline = css`\r\n  display: inline-block;\r\n  vertical-align: middle;\r\n`;\r\n\r\nconst Preparation = ({ location }) => {\r\n\r\n    const { id, title, about, link, type, points } = location.state.data;\r\n\r\n    const [success, setSuccess] = useState(false);\r\n    const [urlResult, setUrlResult] = useState('');\r\n    const [loading, setLoading] = useState(false); // Determina si se está enviando el form\r\n    const [ortography, setOrtography] = useState('');\r\n    const [improvement, setImprovement] = useState('');\r\n\r\n    const history = useHistory();\r\n\r\n    const ortographyRequested = points.includes('ORTOGRAFIA');\r\n\r\n    const updOrtography = (e) => {\r\n        setOrtography(e.target.value);\r\n    }\r\n\r\n    const updImprovement = (e) => {\r\n        setImprovement(e.target.value);\r\n    }\r\n\r\n    const goBackwards = () => {\r\n        history.push('/admin');\r\n    }\r\n\r\n    const send = async (e) => {\r\n        e.preventDefault();\r\n        if (!checkErrors()) {\r\n            setLoading(true);\r\n            saveChanges();\r\n        }\r\n    }\r\n\r\n    const saveChanges = () => {\r\n        const data = {\r\n            requestId: id,\r\n            title: title.trim(),\r\n            type: type.trim(),\r\n            correctedText: ortography,\r\n            improvement: improvement.trim(),\r\n        };\r\n\r\n        setRequestDone(data).then(result => {\r\n            window.scrollTo(0, 0);\r\n            setLoading(false);\r\n            if (!result.error) {\r\n                setUrlResult(result.url);\r\n                setSuccess(true);\r\n            } else {\r\n                alert(result.error);\r\n                setSuccess(false);\r\n            }\r\n        });\r\n    }\r\n\r\n    const checkErrors = () => {\r\n\r\n        // Ortography\r\n        if (ortographyRequested) {\r\n            if (!(/^(?!\\s*$).{1,2000000}/.test(ortography))) {\r\n                alert('La corrección de la obra debe tener de 1 a 2000000 caracteres');\r\n                return true;\r\n            }\r\n        }\r\n\r\n        // Improvement (optional)\r\n        if (improvement) {\r\n            if (!(/^(?!\\s*$).{1,5000}/.test(improvement))) {\r\n                alert('El consejo para el autor debe tener de 1 a 5000 caracteres');\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n        setSuccess(false);\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <Navbar />\r\n            <main className='main-body below-navbar colored-background'>\r\n                <section className='container-xl section prep-req-container'>\r\n                    <div className='flex-align-center mb-2'>\r\n                        <FontAwesomeIcon onClick={goBackwards} className='mr-1' icon={faArrowLeft} size='lg' />\r\n                        <h4 className='request-prep-title m-0 clamp clamp-2'>Corrección: {title}</h4>\r\n                    </div>\r\n                    {\r\n                        success\r\n                            ?\r\n                            <div className='form-container text-align-center'>\r\n                                <Fade bottom>\r\n                                    <FontAwesomeIcon color={'#3DE58D'} icon={faCheckCircle} style={{ fontSize: '8rem' }} />\r\n                                    <h3 className='mt-1 mb-1'>Corrección enviada!</h3>\r\n                                </Fade>\r\n                                <p className='txt-responsive-form m0-auto'>Tu experiencia ha aumentado :)</p>\r\n                                <div className='button-container mt-3'>\r\n                                    <button onClick={() => window.open(urlResult, '_blank')} className='button button-light-purple button-option-request ml-auto'>\r\n                                        <FontAwesomeIcon icon={faEye} size='1x' />\r\n                                        {' '}\r\n                                                Ver resultado\r\n                                        </button>\r\n                                    <button onClick={goBackwards} className='button button-blue button-option-request mr-auto'>\r\n                                        <FontAwesomeIcon icon={faHome} size='1x' />\r\n                                        {' '}\r\n                                                Regresar\r\n                                        </button>\r\n                                </div>\r\n                            </div>\r\n                            :\r\n                            <>\r\n                                <div className=''>\r\n                                    <p>{about}</p>\r\n                                    <h4>Link de la obra</h4>\r\n                                    {\r\n                                        link\r\n                                            ?\r\n                                            <a className='clamp clamp-1' target='_blank' href={link}>{link}</a>\r\n                                            :\r\n                                            <p>No existe link</p>\r\n                                    }\r\n                                    {\r\n                                        ortographyRequested\r\n                                        &&\r\n                                        <div className='form-group'>\r\n                                            <h4>Texto con ortografía corregida</h4>\r\n                                            <textarea minLength=\"1\" maxLength=\"2000000\" rows=\"20\" value={ortography} onChange={updOrtography} id=\"txtOrtografia\" placeholder=\"Ejemplo: La ortografía fue excelente. Haces un correcto uso de las comas, los puntos y las tildes...\"></textarea>\r\n                                        </div>\r\n                                    }\r\n                                    <div className='form-group'>\r\n                                        <h4>¿Algún consejo para que el autor pueda mejorar? (Opcional)</h4>\r\n                                        <textarea minLength=\"1\" maxLength=\"5000\" rows=\"4\" value={improvement} onChange={updImprovement} id=\"txtOrtografia\" placeholder=\"Ejemplo: La ortografía fue excelente. Haces un correcto uso de las comas, los puntos y las tildes...\"></textarea>\r\n                                    </div>\r\n                                </div>\r\n                                <div className='form-buttons-container mt-3'>\r\n                                    {\r\n                                        loading\r\n                                            ?\r\n                                            <span className='button button-green justify-self-right'>\r\n                                                Enviando\r\n                                {' '}\r\n                                                <ClipLoader color={'#fff'} loading={true} css={overrideSpinnerInline} size={22} />\r\n                                            </span>\r\n                                            :\r\n                                            <button onClick={send} className='button button-green justify-self-right'>\r\n                                                <FontAwesomeIcon icon={faPaperPlane} size='1x' />\r\n                                                {' '}\r\n                                                <span className='d-none d-md-inline'>\r\n                                                    Enviar\r\n                                                </span>\r\n                                            </button>\r\n                                    }\r\n                                </div>\r\n                            </>\r\n                    }\r\n                </section>\r\n            </main>\r\n            <Footer />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Preparation;","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\pages\\ins_evento_GRAN-TALLER-TECNICAS-NARRACION-LILI-1.js",["482","483"],"import React, { useState, useEffect } from 'react'\r\nimport Footer from '../componentes/footer/footer';\r\nimport Navbar from '../componentes/navbar';\r\nimport DropdownImage from '../componentes/dropdown-image';\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport Steps from '../componentes/forms/forms-steps';\r\nimport StepManager from '../componentes/forms/step-manager/step-manager';\r\nimport Fade from 'react-reveal/Fade';\r\nimport ImgAutor from '../img/lili.jpg';\r\nimport HelmetMetaData from \"../componentes/helmet\";\r\nimport { toName } from '../helpers/functions';\r\nimport { isNameInvalid, isAgeInvalid, isPhoneInvalid, isEmailInvalid } from '../helpers/validators';\r\nimport { saveEvent } from '../api';\r\nimport { useStepObserver } from '../hooks/useStepObserver';\r\nimport { css } from \"@emotion/core\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faAngleDown, faAngleLeft, faAngleRight, faCheck, faCheckCircle, faDotCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { contactTypes } from '../data/data';\r\nimport { faWhatsapp } from '@fortawesome/free-brands-svg-icons';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst steps = ['Inicio', 'Contacto', 'Listo'];\r\nconst chkPoints = [{ id: 'SI', name: 'Sí', abrev: 'Sí' }];\r\n\r\nconst overrideSpinnerInline = css`\r\n  display: inline-block;\r\n  vertical-align: middle;\r\n`;\r\n\r\nconst mainTitle = 'Gran taller de técnicas de narración';\r\nconst hostName = 'Liliana Martinez';\r\n\r\nconst Inscripcion = () => {\r\n\r\n    const [activeIndex, setActiveIndex] = useState(0);\r\n    const [loading, setLoading] = useState(false); // Determina si se está enviando el form\r\n    const [success, setSuccess] = useState(true); // Determina si se envío el form sin errores\r\n    const { canGoBackwards, isLast } = useStepObserver(activeIndex, steps.length);\r\n\r\n    const [name, setName] = useState('');\r\n    const [age, setAge] = useState('');\r\n    const [phone, setPhone] = useState('');\r\n    const [messengerType, setMessengerType] = useState(contactTypes[0]);\r\n    const [email, setEmail] = useState('');\r\n    const [points, setPoints] = useState([]);\r\n\r\n    const history = useHistory();\r\n\r\n    const updName = (e) => {\r\n        setName(e.target.value);\r\n    }\r\n\r\n    const updAge = (e) => {\r\n        setAge(e.target.value);\r\n    }\r\n\r\n    const updPhone = (e) => {\r\n        setPhone(e.target.value);\r\n    }\r\n\r\n    const updMessengerType = (val) => {\r\n        setMessengerType(val);\r\n    }\r\n\r\n    const updEmail = (e) => {\r\n        setEmail(e.target.value);\r\n    }\r\n\r\n    const selectPoint = (id) => {\r\n        if (includesPoint(id)) {\r\n            setPoints(points.filter(p => p != id));\r\n        } else {\r\n            setPoints([...points, id]);\r\n        }\r\n    }\r\n\r\n    const previous = (e) => {\r\n        e.preventDefault();\r\n        navigateTo(activeIndex - 1);\r\n    }\r\n\r\n    const next = (e) => {\r\n        e.preventDefault();\r\n        navigateTo(activeIndex + 1);\r\n    }\r\n\r\n    const send = async (e) => {\r\n        e.preventDefault();\r\n        if (!checkErrors()) {\r\n            setLoading(true);\r\n            saveChanges();\r\n        }\r\n    }\r\n\r\n    const saveChanges = () => {\r\n\r\n        const idEvento = history.location.pathname.toString().replace(/\\//g, '').replace(/ins_evento/g, '');\r\n\r\n        const data = {\r\n            eventId: idEvento,\r\n            eventName: mainTitle,\r\n            name: toName(name.trim()),\r\n            age: parseInt(age),\r\n            phone: phone.trim(),\r\n            email: email.trim()\r\n        };\r\n\r\n        saveEvent(data).then(() => {\r\n            window.scrollTo(0, 0);\r\n            setLoading(false);\r\n            setSuccess(true);\r\n        });\r\n    }\r\n\r\n    const checkErrors = () => {\r\n\r\n        let error = (isNameInvalid(name) || isAgeInvalid(age) || isPhoneInvalid(phone) || isEmailInvalid(email));\r\n\r\n        // Custom errors\r\n        if (!includesPoint('SI')) {\r\n            error = 'Debes confirmar tu asistencia y cumplimiento';\r\n        }\r\n\r\n        if (error) {\r\n            alert(error);\r\n            return true;\r\n        };\r\n\r\n        return false;\r\n    }\r\n\r\n    const includesPoint = (pointId) => {\r\n        return points.find(p => p == pointId);\r\n    }\r\n\r\n    const navigateTo = (index) => {\r\n        setActiveIndex(index);\r\n    }\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n        setSuccess(false);\r\n    }, [activeIndex]);\r\n\r\n    return (\r\n        <div>\r\n            <HelmetMetaData title={mainTitle + \" - Temple Luna\"} description=\"¿La plataforma de turno no valora lo que escribes? Puedes tener una joya oculta entre manos por la que muchos pagarían.\" />\r\n            <Navbar />\r\n            <main className='main-body below-navbar colored-background'>\r\n                <section className='container-xl section position-relative z-3'>\r\n                    <h2 className='mb-0'>{mainTitle}</h2>\r\n                    <p className='txt-responsive-form w-60 w-md-75'>Con {hostName}</p>\r\n                </section>\r\n                <section className='container-xl mt-3 position-relative'>\r\n                    <div style={{ backgroundImage: `url(${ImgAutor})`, backgroundSize: '80% 90%' }} alt='img-fondo' className='img-fondo-formulario' />\r\n                    <div className='floating-form'>\r\n                        {\r\n                            success\r\n                                ?\r\n                                <div className='form-container text-align-center'>\r\n                                    <Fade bottom>\r\n                                        <FontAwesomeIcon color={'#3DE58D'} icon={faCheckCircle} style={{ fontSize: '8rem' }} />\r\n                                        <h3 className='mt-1 mb-1'>Listo</h3>\r\n                                    </Fade>\r\n                                    <p className='txt-responsive-form m0-auto'>¡No olvides unirte al grupo! Presiona el botón de abajo</p>\r\n                                    <FontAwesomeIcon icon={faAngleDown} size='2x' />\r\n\r\n                                    <div className='form-buttons-container mt-3'>\r\n                                        <a href=\"https://chat.whatsapp.com/E1xRukxw3GzEZHZHczhiN4\" className='button button-green m0-auto'>\r\n                                            <FontAwesomeIcon icon={faWhatsapp} size='1x' />\r\n                                            {' '}\r\n                                            <span>\r\n                                                Unirme\r\n                                            </span>\r\n                                        </a>\r\n                                    </div>\r\n                                </div>\r\n                                :\r\n                                <>\r\n                                    <Steps\r\n                                        activeIndex={activeIndex}\r\n                                        navigateTo={navigateTo}\r\n                                        steps={steps} />\r\n                                    <div className='form-container'>\r\n                                        <form>\r\n                                            <StepManager currentIndex={activeIndex}>\r\n                                                <div className='step-1'>\r\n\r\n                                                    <div className='form-group mb-0'>\r\n                                                        <h2>¡Bienvenido(a) al taller!</h2>\r\n                                                        <p>¿Amas <b>narrar historias</b> o quieres hacer videos con <b> calidad de voz</b> impresionante? Este taller es para ti.<br /><br />\r\n\r\n                                                            <b>Modular</b> la voz, <b>articularla</b> y dominar la <b>timidez</b> son algunas de las <b>habilidades</b> que se requieren\r\n                                                            para <b>sobresalir</b> en este mundo.\r\n                                                            Aquí te las enseñaremos.<br /><br />\r\n\r\n                                                            <b>Temario</b><br />\r\n                                                            <b>1.</b> Importancia de la voz<br />\r\n                                                            <b>2.</b> Hablar en público<br />\r\n                                                            <b>3.</b> Fonación y articulación<br />\r\n                                                            <b>4.</b> La articulación de los finos<br />\r\n                                                            <b>5.</b> Trabalenguas<br /><br />\r\n\r\n                                                            <b>Número de sesiones:</b> 1<br />\r\n                                                            <b>Costo:</b> Gratuito<br />\r\n                                                            <b>Autora:</b> Liliana Martinez<br />\r\n                                                            <b>Plataforma:</b> Google Meets<br />\r\n                                                            <b>Horario:</b> Viernes, 7 de mayo, de 5pm a 7pm (Hora Lima - Colombia)<br /><br />\r\n\r\n                                                            Al final de tu inscripción, te aparecerá un botón para ingresar al <b>grupo de Whatsapp</b>. Inscríbete <b>solamente</b> si vas a asistir.<br /><br />\r\n\r\n                                                            <b>*Si te inscribes e incumples, ya no serás tenido en cuenta en otras dinámicas de Temple Luna.</b><br /><br />\r\n                                                        </p>\r\n                                                    </div>\r\n\r\n                                                    <div className='form-group'>\r\n                                                        <p>Presiona siguiente para continuar.</p>\r\n                                                    </div>\r\n\r\n                                                </div>\r\n                                                <div className='step-2'>\r\n\r\n                                                    <div className='form-group'>\r\n                                                        <label htmlFor=\"txtNombres\">¿Cómo te llamas?</label>\r\n                                                        <input minLength=\"1\" maxLength=\"50\" type=\"text\" value={name} onChange={updName} id=\"txtNombres\" placeholder=\"Ingresa tus nombres\" />\r\n                                                    </div>\r\n                                                    <div className='form-group'>\r\n                                                        <label htmlFor=\"txtEdad\">¿Qué edad tienes?</label>\r\n                                                        <input type=\"number\" min={10} max={99} value={age} onChange={updAge} id=\"txtEdad\" placeholder=\"Ingresa tu edad\" />\r\n                                                    </div>\r\n                                                    <div className='form-group'>\r\n                                                        <label htmlFor=\"txtNumero\">¿Con qué número entrarás? (con código de país)</label>\r\n                                                        <div className='cbo-text'>\r\n                                                            <DropdownImage\r\n                                                                selectedItem={messengerType}\r\n                                                                list={[contactTypes[0]]}\r\n                                                                select={updMessengerType} />\r\n                                                            <input type=\"text\" value={phone} onChange={updPhone} id=\"txtNumero\" placeholder=\"Ej: +51 999 999 999\" />\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='form-group'>\r\n                                                        <label htmlFor=\"txtCorreo\">Bríndanos tu correo de contacto</label>\r\n                                                        <input minLength=\"6\" maxLength=\"100\" type=\"email\" value={email} onChange={updEmail} id=\"txtCorreo\" placeholder=\"Ingresa tu correo\" />\r\n                                                    </div>\r\n\r\n                                                </div>\r\n                                                <div className='step-3'>\r\n\r\n                                                    <div className='form-group'>\r\n\r\n                                                        <div className='form-group'>\r\n                                                            <label htmlFor=\"txtLink\">He leído los horarios y confirmo mi asistencia</label>\r\n                                                            {\r\n                                                                chkPoints.map(point => {\r\n                                                                    const included = includesPoint(point.id);\r\n                                                                    return (\r\n                                                                        <div key={point.id} onClick={() => selectPoint(point.id)} className={`chkTag ${included ? 'active' : ''}`}>\r\n                                                                            {\r\n                                                                                included\r\n                                                                                    ?\r\n                                                                                    <FontAwesomeIcon color={'white'} icon={faCheck} style={{ fontSize: '1.6rem' }} />\r\n                                                                                    :\r\n                                                                                    <FontAwesomeIcon color={'#adadad'} icon={faDotCircle} style={{ fontSize: '1.6rem' }} />\r\n                                                                            }\r\n                                                                            {' '}\r\n                                                                            {point.name}\r\n                                                                        </div>\r\n                                                                    )\r\n                                                                })\r\n                                                            }\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </StepManager>\r\n                                            <div className='form-buttons-container'>\r\n                                                {\r\n                                                    canGoBackwards && !loading\r\n                                                    &&\r\n                                                    <button onClick={previous} className='button button-green'>\r\n                                                        <FontAwesomeIcon icon={faAngleLeft} size='xl' />\r\n                                                        {' '}\r\n                                                        <span className='d-none d-md-inline'>\r\n                                                            Anterior\r\n                                                    </span>\r\n                                                    </button>\r\n                                                }\r\n                                                {\r\n                                                    loading\r\n                                                        ?\r\n                                                        <span className='button button-green justify-self-right'>\r\n                                                            Enviando\r\n                                                            {' '}\r\n                                                            <ClipLoader color={'#fff'} loading={true} css={overrideSpinnerInline} size={22} />\r\n                                                        </span>\r\n                                                        :\r\n                                                        isLast\r\n                                                            ?\r\n                                                            <button onClick={send} className='button button-green justify-self-right'>\r\n                                                                <span className='d-none d-md-inline'>\r\n                                                                    Enviar\r\n                                                    </span>\r\n                                                                {' '}\r\n                                                                <FontAwesomeIcon icon={faCheck} size='xl' />\r\n                                                            </button>\r\n                                                            :\r\n                                                            <button onClick={next} className='button button-green justify-self-right'>\r\n                                                                <span className='d-none d-md-inline'>\r\n                                                                    Siguiente\r\n                                                    </span>\r\n                                                                {' '}\r\n                                                                <FontAwesomeIcon icon={faAngleRight} size='xl' />\r\n                                                            </button>\r\n                                                }\r\n                                            </div>\r\n                                        </form>\r\n                                    </div>\r\n                                </>\r\n                        }\r\n                    </div>\r\n\r\n                </section>\r\n            </main>\r\n            <Footer />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Inscripcion;","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\profile\\mini-profile.js",["484","485","486","487"],"import React from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { getSnIconByUrl } from '../../helpers/functions';\r\nimport Avatar from '../avatar';\r\nimport './mini-profile.css';\r\n\r\nexport const MiniProfile = ({ id, img, title, networks = [], editorial }) => {\r\n\r\n    const history = useHistory();\r\n\r\n    const navigateTo = (route) => {\r\n        history.push(route);\r\n    }\r\n\r\n    return (\r\n        <div className='mini-profile'>\r\n\r\n            <div className='mini-profile__always-visible'>\r\n                <div className='mini-profile__img-container'>\r\n                    <Avatar img={img} onClick={() => navigateTo(`/perfil/${id}`)} />\r\n                </div>\r\n                <div className='mini-profile__data-container'>\r\n                    <div className='mini-profile__pre-header'>\r\n                        <span className='mini-profile__pre-title'>Realizado por</span>\r\n                    </div>\r\n                    <div className='mini-profile__header'>\r\n                        <Link to={`/perfil/${id}`} className='mini-profile__title clamp clamp-1'>{title}</Link>\r\n                        {\r\n                            editorial\r\n                                ?\r\n                                <Link to={`/perfil/${editorial.id}`} style={{ color: editorial.contrastColor, background: editorial.mainColor }} className='mini-profile__tag clamp clamp-1'>{editorial.name}</Link>\r\n                                :\r\n                                <span className='mini-profile__tag'>Independiente</span>\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <div className='mini-profile__rs-container'>\r\n                    <div className='mini-profile__rs-title'>Sígueme en:</div>\r\n                    <div className='mini-profile__rs'>\r\n                        {\r\n                            networks.slice(0, 3).map(network => {\r\n                                const iconData = getSnIconByUrl(network);\r\n\r\n                                if (iconData) {\r\n                                    return (\r\n                                        <a target='_blank' href={network} className={`mini-profile__sn-icon`}>\r\n                                            <img src={iconData.imgSrc} alt='img-icon' />\r\n                                        </a>\r\n                                    )\r\n                                }\r\n                            })\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className='mini-profile__only-mobile'>\r\n                <div className='mini-profile__only-mobile__rs-title'>Sígueme en: </div>\r\n                {\r\n                    networks.slice(0, 3).map(network => {\r\n                        const iconData = getSnIconByUrl(network);\r\n\r\n                        if (iconData) {\r\n                            return (\r\n                                <a target='_blank' href={network} className={`mini-profile__only-mobile__sn-icon`}>\r\n                                    <img src={iconData.imgSrc} alt='img-icon' />\r\n                                </a>\r\n                            )\r\n                        }\r\n                    })\r\n                }\r\n                {\r\n                    editorial\r\n                        ?\r\n                        <Link to={`/perfil/${editorial.id}`} style={{ color: editorial.contrastColor, background: editorial.mainColor }} className='mini-profile__only-mobile__tag clamp clamp-1'>{editorial.name}</Link>\r\n                        :\r\n                        <span className='mini-profile__only-mobile__tag'>Independiente</span>\r\n                }\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MiniProfile;\r\n","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\result-preview-card\\index.js",[],"C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\result-preview-card\\result-preview-card.js",[],"C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\service-card\\service-card.js",[],"C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\hooks\\useWindowSize.js",[],"C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\modal\\detailRequestModal.js",[],"C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\modal\\feedbackModal.js",[],{"ruleId":"488","replacedBy":"489"},{"ruleId":"490","replacedBy":"491"},{"ruleId":"492","severity":1,"message":"493","line":73,"column":23,"nodeType":"494","messageId":"495","endLine":73,"endColumn":25},{"ruleId":"492","severity":1,"message":"493","line":95,"column":149,"nodeType":"494","messageId":"495","endLine":95,"endColumn":151},{"ruleId":"492","severity":1,"message":"493","line":95,"column":178,"nodeType":"494","messageId":"495","endLine":95,"endColumn":180},{"ruleId":"492","severity":1,"message":"493","line":111,"column":127,"nodeType":"494","messageId":"495","endLine":111,"endColumn":129},{"ruleId":"492","severity":1,"message":"493","line":111,"column":156,"nodeType":"494","messageId":"495","endLine":111,"endColumn":158},{"ruleId":"496","severity":1,"message":"497","line":170,"column":8,"nodeType":"498","endLine":170,"endColumn":40,"suggestions":"499"},{"ruleId":"500","severity":1,"message":"501","line":45,"column":26,"nodeType":"502","messageId":"503","endLine":45,"endColumn":27,"suggestions":"504"},{"ruleId":"492","severity":1,"message":"505","line":85,"column":20,"nodeType":"494","messageId":"495","endLine":85,"endColumn":22},{"ruleId":"492","severity":1,"message":"505","line":86,"column":48,"nodeType":"494","messageId":"495","endLine":86,"endColumn":50},{"ruleId":"492","severity":1,"message":"493","line":155,"column":35,"nodeType":"494","messageId":"495","endLine":155,"endColumn":37},{"ruleId":"506","severity":1,"message":"507","line":219,"column":65,"nodeType":"508","endLine":219,"endColumn":179},{"ruleId":"506","severity":1,"message":"507","line":236,"column":83,"nodeType":"508","endLine":236,"endColumn":153},{"ruleId":"506","severity":1,"message":"507","line":169,"column":45,"nodeType":"508","endLine":169,"endColumn":102},{"ruleId":"492","severity":1,"message":"493","line":187,"column":29,"nodeType":"494","messageId":"495","endLine":187,"endColumn":31},{"ruleId":"506","severity":1,"message":"507","line":263,"column":65,"nodeType":"508","endLine":263,"endColumn":247},{"ruleId":"506","severity":1,"message":"507","line":281,"column":83,"nodeType":"508","endLine":281,"endColumn":153},{"ruleId":"492","severity":1,"message":"493","line":322,"column":73,"nodeType":"494","messageId":"495","endLine":322,"endColumn":75},{"ruleId":"506","severity":1,"message":"507","line":163,"column":45,"nodeType":"508","endLine":163,"endColumn":102},{"ruleId":"509","severity":1,"message":"510","line":40,"column":12,"nodeType":"511","messageId":"512","endLine":40,"endColumn":18},{"ruleId":"492","severity":1,"message":"493","line":86,"column":20,"nodeType":"494","messageId":"495","endLine":86,"endColumn":22},{"ruleId":"496","severity":1,"message":"513","line":139,"column":8,"nodeType":"498","endLine":139,"endColumn":29,"suggestions":"514"},{"ruleId":"492","severity":1,"message":"493","line":211,"column":64,"nodeType":"494","messageId":"495","endLine":211,"endColumn":66},{"ruleId":"492","severity":1,"message":"493","line":211,"column":99,"nodeType":"494","messageId":"495","endLine":211,"endColumn":101},{"ruleId":"492","severity":1,"message":"493","line":213,"column":64,"nodeType":"494","messageId":"495","endLine":213,"endColumn":66},{"ruleId":"492","severity":1,"message":"493","line":213,"column":113,"nodeType":"494","messageId":"495","endLine":213,"endColumn":115},{"ruleId":"492","severity":1,"message":"493","line":223,"column":54,"nodeType":"494","messageId":"495","endLine":223,"endColumn":56},{"ruleId":"492","severity":1,"message":"493","line":223,"column":86,"nodeType":"494","messageId":"495","endLine":223,"endColumn":88},{"ruleId":"492","severity":1,"message":"493","line":223,"column":156,"nodeType":"494","messageId":"495","endLine":223,"endColumn":158},{"ruleId":"506","severity":1,"message":"507","line":255,"column":85,"nodeType":"508","endLine":255,"endColumn":121},{"ruleId":"492","severity":1,"message":"493","line":258,"column":48,"nodeType":"494","messageId":"495","endLine":258,"endColumn":50},{"ruleId":"492","severity":1,"message":"493","line":258,"column":69,"nodeType":"494","messageId":"495","endLine":258,"endColumn":71},{"ruleId":"492","severity":1,"message":"493","line":275,"column":51,"nodeType":"494","messageId":"495","endLine":275,"endColumn":53},{"ruleId":"515","severity":1,"message":"516","line":278,"column":41,"nodeType":"508","endLine":278,"endColumn":121},{"ruleId":"517","severity":1,"message":"518","line":211,"column":13,"nodeType":"519","messageId":"520","endLine":218,"endColumn":14},{"ruleId":"492","severity":1,"message":"493","line":244,"column":27,"nodeType":"494","messageId":"495","endLine":244,"endColumn":29},{"ruleId":"492","severity":1,"message":"493","line":17,"column":38,"nodeType":"494","messageId":"495","endLine":17,"endColumn":40},{"ruleId":"509","severity":1,"message":"521","line":1,"column":29,"nodeType":"511","messageId":"512","endLine":1,"endColumn":37},{"ruleId":"509","severity":1,"message":"522","line":1,"column":39,"nodeType":"511","messageId":"512","endLine":1,"endColumn":48},{"ruleId":"509","severity":1,"message":"523","line":2,"column":8,"nodeType":"511","messageId":"512","endLine":2,"endColumn":25},{"ruleId":"509","severity":1,"message":"524","line":11,"column":43,"nodeType":"511","messageId":"512","endLine":11,"endColumn":55},{"ruleId":"509","severity":1,"message":"525","line":12,"column":10,"nodeType":"511","messageId":"512","endLine":12,"endColumn":27},{"ruleId":"492","severity":1,"message":"493","line":28,"column":39,"nodeType":"494","messageId":"495","endLine":28,"endColumn":41},{"ruleId":"492","severity":1,"message":"493","line":55,"column":50,"nodeType":"494","messageId":"495","endLine":55,"endColumn":52},{"ruleId":"526","severity":1,"message":"527","line":55,"column":66,"nodeType":"528","messageId":"529","endLine":55,"endColumn":68},{"ruleId":"526","severity":1,"message":"527","line":55,"column":81,"nodeType":"528","messageId":"529","endLine":55,"endColumn":83},{"ruleId":"492","severity":1,"message":"493","line":55,"column":97,"nodeType":"494","messageId":"495","endLine":55,"endColumn":99},{"ruleId":"492","severity":1,"message":"493","line":59,"column":69,"nodeType":"494","messageId":"495","endLine":59,"endColumn":71},{"ruleId":"492","severity":1,"message":"493","line":75,"column":50,"nodeType":"494","messageId":"495","endLine":75,"endColumn":52},{"ruleId":"506","severity":1,"message":"507","line":89,"column":41,"nodeType":"508","endLine":89,"endColumn":80},{"ruleId":"506","severity":1,"message":"507","line":100,"column":37,"nodeType":"508","endLine":100,"endColumn":103},{"ruleId":"492","severity":1,"message":"493","line":114,"column":55,"nodeType":"494","messageId":"495","endLine":114,"endColumn":57},{"ruleId":"492","severity":1,"message":"493","line":139,"column":66,"nodeType":"494","messageId":"495","endLine":139,"endColumn":68},{"ruleId":"492","severity":1,"message":"493","line":146,"column":70,"nodeType":"494","messageId":"495","endLine":146,"endColumn":72},{"ruleId":"492","severity":1,"message":"493","line":157,"column":62,"nodeType":"494","messageId":"495","endLine":157,"endColumn":64},{"ruleId":"509","severity":1,"message":"521","line":1,"column":29,"nodeType":"511","messageId":"512","endLine":1,"endColumn":37},{"ruleId":"509","severity":1,"message":"522","line":1,"column":39,"nodeType":"511","messageId":"512","endLine":1,"endColumn":48},{"ruleId":"509","severity":1,"message":"523","line":2,"column":8,"nodeType":"511","messageId":"512","endLine":2,"endColumn":25},{"ruleId":"509","severity":1,"message":"530","line":11,"column":23,"nodeType":"511","messageId":"512","endLine":11,"endColumn":29},{"ruleId":"509","severity":1,"message":"524","line":11,"column":51,"nodeType":"511","messageId":"512","endLine":11,"endColumn":63},{"ruleId":"509","severity":1,"message":"525","line":12,"column":10,"nodeType":"511","messageId":"512","endLine":12,"endColumn":27},{"ruleId":"492","severity":1,"message":"493","line":27,"column":39,"nodeType":"494","messageId":"495","endLine":27,"endColumn":41},{"ruleId":"492","severity":1,"message":"493","line":50,"column":50,"nodeType":"494","messageId":"495","endLine":50,"endColumn":52},{"ruleId":"526","severity":1,"message":"527","line":50,"column":66,"nodeType":"528","messageId":"529","endLine":50,"endColumn":68},{"ruleId":"526","severity":1,"message":"527","line":50,"column":81,"nodeType":"528","messageId":"529","endLine":50,"endColumn":83},{"ruleId":"492","severity":1,"message":"493","line":50,"column":97,"nodeType":"494","messageId":"495","endLine":50,"endColumn":99},{"ruleId":"492","severity":1,"message":"493","line":54,"column":69,"nodeType":"494","messageId":"495","endLine":54,"endColumn":71},{"ruleId":"506","severity":1,"message":"507","line":68,"column":37,"nodeType":"508","endLine":68,"endColumn":103},{"ruleId":"492","severity":1,"message":"493","line":95,"column":55,"nodeType":"494","messageId":"495","endLine":95,"endColumn":57},{"ruleId":"492","severity":1,"message":"493","line":120,"column":66,"nodeType":"494","messageId":"495","endLine":120,"endColumn":68},{"ruleId":"492","severity":1,"message":"493","line":127,"column":70,"nodeType":"494","messageId":"495","endLine":127,"endColumn":72},{"ruleId":"492","severity":1,"message":"493","line":138,"column":62,"nodeType":"494","messageId":"495","endLine":138,"endColumn":64},{"ruleId":"496","severity":1,"message":"531","line":36,"column":8,"nodeType":"498","endLine":36,"endColumn":15,"suggestions":"532"},{"ruleId":"533","severity":1,"message":"534","line":75,"column":41,"nodeType":"508","endLine":75,"endColumn":164},{"ruleId":"492","severity":1,"message":"493","line":94,"column":115,"nodeType":"494","messageId":"495","endLine":94,"endColumn":117},{"ruleId":"533","severity":1,"message":"534","line":58,"column":29,"nodeType":"508","endLine":58,"endColumn":92},{"ruleId":"533","severity":1,"message":"534","line":61,"column":29,"nodeType":"508","endLine":61,"endColumn":108},{"ruleId":"533","severity":1,"message":"534","line":64,"column":29,"nodeType":"508","endLine":64,"endColumn":76},{"ruleId":"492","severity":1,"message":"505","line":72,"column":47,"nodeType":"494","messageId":"495","endLine":72,"endColumn":49},{"ruleId":"492","severity":1,"message":"493","line":77,"column":57,"nodeType":"494","messageId":"495","endLine":77,"endColumn":59},{"ruleId":"492","severity":1,"message":"493","line":85,"column":46,"nodeType":"494","messageId":"495","endLine":85,"endColumn":48},{"ruleId":"492","severity":1,"message":"493","line":93,"column":47,"nodeType":"494","messageId":"495","endLine":93,"endColumn":49},{"ruleId":"492","severity":1,"message":"505","line":104,"column":23,"nodeType":"494","messageId":"495","endLine":104,"endColumn":25},{"ruleId":"492","severity":1,"message":"493","line":146,"column":57,"nodeType":"494","messageId":"495","endLine":146,"endColumn":59},{"ruleId":"492","severity":1,"message":"493","line":151,"column":43,"nodeType":"494","messageId":"495","endLine":151,"endColumn":45},{"ruleId":"509","severity":1,"message":"521","line":1,"column":17,"nodeType":"511","messageId":"512","endLine":1,"endColumn":25},{"ruleId":"509","severity":1,"message":"535","line":3,"column":8,"nodeType":"511","messageId":"512","endLine":3,"endColumn":21},{"ruleId":"492","severity":1,"message":"493","line":18,"column":33,"nodeType":"494","messageId":"495","endLine":18,"endColumn":35},{"ruleId":"492","severity":1,"message":"493","line":29,"column":45,"nodeType":"494","messageId":"495","endLine":29,"endColumn":47},{"ruleId":"526","severity":1,"message":"527","line":29,"column":61,"nodeType":"528","messageId":"529","endLine":29,"endColumn":63},{"ruleId":"526","severity":1,"message":"527","line":29,"column":76,"nodeType":"528","messageId":"529","endLine":29,"endColumn":78},{"ruleId":"492","severity":1,"message":"493","line":29,"column":91,"nodeType":"494","messageId":"495","endLine":29,"endColumn":93},{"ruleId":"492","severity":1,"message":"493","line":33,"column":64,"nodeType":"494","messageId":"495","endLine":33,"endColumn":66},{"ruleId":"492","severity":1,"message":"493","line":50,"column":41,"nodeType":"494","messageId":"495","endLine":50,"endColumn":43},{"ruleId":"492","severity":1,"message":"493","line":52,"column":43,"nodeType":"494","messageId":"495","endLine":52,"endColumn":45},{"ruleId":"492","severity":1,"message":"493","line":59,"column":47,"nodeType":"494","messageId":"495","endLine":59,"endColumn":49},{"ruleId":"492","severity":1,"message":"493","line":66,"column":51,"nodeType":"494","messageId":"495","endLine":66,"endColumn":53},{"ruleId":"492","severity":1,"message":"493","line":77,"column":41,"nodeType":"494","messageId":"495","endLine":77,"endColumn":43},{"ruleId":"492","severity":1,"message":"505","line":59,"column":74,"nodeType":"494","messageId":"495","endLine":59,"endColumn":76},{"ruleId":"496","severity":1,"message":"536","line":68,"column":8,"nodeType":"498","endLine":68,"endColumn":31,"suggestions":"537"},{"ruleId":"533","severity":1,"message":"534","line":96,"column":79,"nodeType":"508","endLine":96,"endColumn":190},{"ruleId":"492","severity":1,"message":"493","line":96,"column":148,"nodeType":"494","messageId":"495","endLine":96,"endColumn":150},{"ruleId":"492","severity":1,"message":"493","line":111,"column":83,"nodeType":"494","messageId":"495","endLine":111,"endColumn":85},{"ruleId":"492","severity":1,"message":"493","line":15,"column":94,"nodeType":"494","messageId":"495","endLine":15,"endColumn":96},{"ruleId":"509","severity":1,"message":"538","line":1,"column":8,"nodeType":"511","messageId":"512","endLine":1,"endColumn":13},{"ruleId":"509","severity":1,"message":"539","line":4,"column":10,"nodeType":"511","messageId":"512","endLine":4,"endColumn":18},{"ruleId":"500","severity":1,"message":"501","line":52,"column":22,"nodeType":"502","messageId":"503","endLine":52,"endColumn":23,"suggestions":"540"},{"ruleId":"492","severity":1,"message":"505","line":73,"column":44,"nodeType":"494","messageId":"495","endLine":73,"endColumn":46},{"ruleId":"492","severity":1,"message":"493","line":173,"column":35,"nodeType":"494","messageId":"495","endLine":173,"endColumn":37},{"ruleId":"506","severity":1,"message":"507","line":225,"column":101,"nodeType":"508","endLine":225,"endColumn":184},{"ruleId":"506","severity":1,"message":"507","line":235,"column":84,"nodeType":"508","endLine":235,"endColumn":193},{"ruleId":"506","severity":1,"message":"507","line":240,"column":101,"nodeType":"508","endLine":240,"endColumn":180},{"ruleId":"506","severity":1,"message":"507","line":241,"column":93,"nodeType":"508","endLine":241,"endColumn":204},{"ruleId":"506","severity":1,"message":"507","line":242,"column":102,"nodeType":"508","endLine":242,"endColumn":211},{"ruleId":"506","severity":1,"message":"507","line":281,"column":99,"nodeType":"508","endLine":281,"endColumn":153},{"ruleId":"509","severity":1,"message":"541","line":7,"column":7,"nodeType":"511","messageId":"512","endLine":7,"endColumn":18},{"ruleId":"492","severity":1,"message":"493","line":74,"column":36,"nodeType":"494","messageId":"495","endLine":74,"endColumn":38},{"ruleId":"496","severity":1,"message":"542","line":90,"column":8,"nodeType":"498","endLine":90,"endColumn":10,"suggestions":"543"},{"ruleId":"509","severity":1,"message":"544","line":25,"column":7,"nodeType":"511","messageId":"512","endLine":25,"endColumn":12},{"ruleId":"509","severity":1,"message":"545","line":33,"column":11,"nodeType":"511","messageId":"512","endLine":33,"endColumn":16},{"ruleId":"496","severity":1,"message":"497","line":115,"column":8,"nodeType":"498","endLine":115,"endColumn":40,"suggestions":"546"},{"ruleId":"496","severity":1,"message":"547","line":119,"column":8,"nodeType":"498","endLine":119,"endColumn":10,"suggestions":"548"},{"ruleId":"549","severity":1,"message":"550","line":136,"column":74,"nodeType":"551","messageId":"552","endLine":136,"endColumn":76},{"ruleId":"506","severity":1,"message":"507","line":141,"column":53,"nodeType":"508","endLine":141,"endColumn":131},{"ruleId":"492","severity":1,"message":"493","line":269,"column":66,"nodeType":"494","messageId":"495","endLine":269,"endColumn":68},{"ruleId":"509","severity":1,"message":"553","line":30,"column":28,"nodeType":"511","messageId":"512","endLine":30,"endColumn":45},{"ruleId":"509","severity":1,"message":"554","line":31,"column":12,"nodeType":"511","messageId":"512","endLine":31,"endColumn":23},{"ruleId":"509","severity":1,"message":"555","line":31,"column":25,"nodeType":"511","messageId":"512","endLine":31,"endColumn":39},{"ruleId":"549","severity":1,"message":"550","line":64,"column":66,"nodeType":"551","messageId":"552","endLine":64,"endColumn":68},{"ruleId":"506","severity":1,"message":"507","line":69,"column":45,"nodeType":"508","endLine":69,"endColumn":123},{"ruleId":"492","severity":1,"message":"505","line":71,"column":44,"nodeType":"494","messageId":"495","endLine":71,"endColumn":46},{"ruleId":"492","severity":1,"message":"493","line":133,"column":35,"nodeType":"494","messageId":"495","endLine":133,"endColumn":37},{"ruleId":"506","severity":1,"message":"507","line":195,"column":154,"nodeType":"508","endLine":195,"endColumn":262},{"ruleId":"506","severity":1,"message":"507","line":196,"column":71,"nodeType":"508","endLine":196,"endColumn":182},{"ruleId":"492","severity":1,"message":"505","line":80,"column":20,"nodeType":"494","messageId":"495","endLine":80,"endColumn":22},{"ruleId":"492","severity":1,"message":"505","line":81,"column":48,"nodeType":"494","messageId":"495","endLine":81,"endColumn":50},{"ruleId":"492","severity":1,"message":"493","line":149,"column":35,"nodeType":"494","messageId":"495","endLine":149,"endColumn":37},{"ruleId":"506","severity":1,"message":"507","line":213,"column":65,"nodeType":"508","endLine":213,"endColumn":179},{"ruleId":"506","severity":1,"message":"507","line":231,"column":83,"nodeType":"508","endLine":231,"endColumn":153},{"ruleId":"509","severity":1,"message":"521","line":1,"column":29,"nodeType":"511","messageId":"512","endLine":1,"endColumn":37},{"ruleId":"509","severity":1,"message":"522","line":1,"column":39,"nodeType":"511","messageId":"512","endLine":1,"endColumn":48},{"ruleId":"509","severity":1,"message":"523","line":2,"column":8,"nodeType":"511","messageId":"512","endLine":2,"endColumn":25},{"ruleId":"509","severity":1,"message":"525","line":12,"column":10,"nodeType":"511","messageId":"512","endLine":12,"endColumn":27},{"ruleId":"492","severity":1,"message":"493","line":27,"column":39,"nodeType":"494","messageId":"495","endLine":27,"endColumn":41},{"ruleId":"492","severity":1,"message":"493","line":50,"column":50,"nodeType":"494","messageId":"495","endLine":50,"endColumn":52},{"ruleId":"526","severity":1,"message":"527","line":50,"column":66,"nodeType":"528","messageId":"529","endLine":50,"endColumn":68},{"ruleId":"526","severity":1,"message":"527","line":50,"column":81,"nodeType":"528","messageId":"529","endLine":50,"endColumn":83},{"ruleId":"492","severity":1,"message":"493","line":50,"column":97,"nodeType":"494","messageId":"495","endLine":50,"endColumn":99},{"ruleId":"492","severity":1,"message":"493","line":54,"column":69,"nodeType":"494","messageId":"495","endLine":54,"endColumn":71},{"ruleId":"506","severity":1,"message":"507","line":68,"column":37,"nodeType":"508","endLine":68,"endColumn":103},{"ruleId":"492","severity":1,"message":"493","line":93,"column":55,"nodeType":"494","messageId":"495","endLine":93,"endColumn":57},{"ruleId":"492","severity":1,"message":"493","line":118,"column":66,"nodeType":"494","messageId":"495","endLine":118,"endColumn":68},{"ruleId":"492","severity":1,"message":"493","line":125,"column":70,"nodeType":"494","messageId":"495","endLine":125,"endColumn":72},{"ruleId":"492","severity":1,"message":"493","line":136,"column":62,"nodeType":"494","messageId":"495","endLine":136,"endColumn":64},{"ruleId":"506","severity":1,"message":"507","line":138,"column":45,"nodeType":"508","endLine":138,"endColumn":102},{"ruleId":"492","severity":1,"message":"505","line":71,"column":44,"nodeType":"494","messageId":"495","endLine":71,"endColumn":46},{"ruleId":"492","severity":1,"message":"493","line":133,"column":35,"nodeType":"494","messageId":"495","endLine":133,"endColumn":37},{"ruleId":"549","severity":1,"message":"550","line":41,"column":62,"nodeType":"551","messageId":"552","endLine":41,"endColumn":64},{"ruleId":"506","severity":1,"message":"507","line":46,"column":41,"nodeType":"508","endLine":46,"endColumn":111},{"ruleId":"549","severity":1,"message":"550","line":60,"column":54,"nodeType":"551","messageId":"552","endLine":60,"endColumn":56},{"ruleId":"506","severity":1,"message":"507","line":65,"column":33,"nodeType":"508","endLine":65,"endColumn":116},"no-native-reassign",["556"],"no-negated-in-lhs",["557"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'requestData'. Either include it or remove the dependency array.","ArrayExpression",["558"],"no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["559","560"],"Expected '!==' and instead saw '!='.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","no-unused-vars","'author' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'checkScroll'. Either include it or remove the dependency array.",["561"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'useState' is defined but never used.","'useEffect' is defined but never used.","'ConfirmationModal' is defined but never used.","'faLayerGroup' is defined but never used.","'getProfileStorage' is defined but never used.","no-mixed-operators","Unexpected mix of '||' and '&&'.","LogicalExpression","unexpectedMixedOperator","'faEdit' is defined but never used.","React Hook useEffect has a missing dependency: 'autoScroll'. Either include it or remove the dependency array.",["562"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'FeedbackModal' is defined but never used.","React Hook useEffect has missing dependencies: 'switchTab' and 'tabs'. Either include them or remove the dependency array. If 'setMinVisibleTabs' needs the current value of 'tabs', you can also switch to useReducer instead of useState and read 'tabs' in the reducer.",["563"],"'React' is defined but never used.","'Redirect' is defined but never used.",["564","565"],"'profileData' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'match.params.id'. Either include it or remove the dependency array.",["566"],"'limit' is assigned a value but never used.","'style' is assigned a value but never used.",["567"],"React Hook useEffect has a missing dependency: 'updateStatistics'. Either include it or remove the dependency array.",["568"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'setInitialLoading' is assigned a value but never used.","'requestList' is assigned a value but never used.","'setRequestList' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"569","fix":"570"},{"messageId":"571","fix":"572","desc":"573"},{"messageId":"574","fix":"575","desc":"576"},{"desc":"577","fix":"578"},{"desc":"579","fix":"580"},{"desc":"581","fix":"582"},{"messageId":"571","fix":"583","desc":"573"},{"messageId":"574","fix":"584","desc":"576"},{"desc":"585","fix":"586"},{"desc":"587","fix":"588"},{"desc":"589","fix":"590"},"Update the dependencies array to be: [activeTabIndex, requestData, requestType.id]",{"range":"591","text":"592"},"removeEscape",{"range":"593","text":"594"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"595","text":"596"},"Replace the `\\` with `\\\\` to include the actual backslash character.","Update the dependencies array to be: [checkScroll, hasScrolledToOffset]",{"range":"597","text":"598"},"Update the dependencies array to be: [autoScroll, index]",{"range":"599","text":"600"},"Update the dependencies array to be: [minVisibleTabs, switchTab, tabs, width]",{"range":"601","text":"602"},{"range":"603","text":"594"},{"range":"604","text":"596"},"Update the dependencies array to be: [match.params.id]",{"range":"605","text":"606"},"Update the dependencies array to be: [activeTabIndex, requestData, visibleColumns]",{"range":"607","text":"608"},"Update the dependencies array to be: [updateStatistics]",{"range":"609","text":"610"},[7214,7246],"[activeTabIndex, requestData, requestType.id]",[1446,1447],"",[1446,1446],"\\",[5200,5221],"[checkScroll, hasScrolledToOffset]",[1144,1151],"[autoScroll, index]",[2314,2337],"[minVisibleTabs, switchTab, tabs, width]",[1472,1473],[1472,1472],[3256,3258],"[match.params.id]",[4391,4423],"[activeTabIndex, requestData, visibleColumns]",[4488,4490],"[updateStatistics]"]