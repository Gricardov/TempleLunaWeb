[{"C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\index.js":"1","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\TLApp.js":"2","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\context\\DrawerContext.js":"3","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\context\\AuthContext.js":"4","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\pages\\admin.js":"5","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\pages\\login.js":"6","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\pages\\solicitud-critica.js":"7","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\pages\\inicio.js":"8","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\pages\\prep_critica.js":"9","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\pages\\solicitud-diseno.js":"10","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\pages\\prep_diseno.js":"11","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\pages\\prev_resultado.js":"12","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\customRouter\\publicRoute.js":"13","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\customRouter\\privateRoute.js":"14","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\drawer\\index.js":"15","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\firebase.js":"16","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\api.js":"17","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\helpers\\userStorage.js":"18","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\modal\\designDetail.js":"19","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\modal\\critiqueDetail.js":"20","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\footer\\footer.js":"21","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\data\\data.js":"22","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\hooks\\useStepObserver.js":"23","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\stories-carrousel\\carrousel.js":"24","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\home-panorama\\panorama.js":"25","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\forms\\step-manager\\step-manager.js":"26","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\navbar\\index.js":"27","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\request-card\\index.js":"28","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\dropdown-image\\index.js":"29","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\drawer\\drawer.js":"30","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\tabs\\index.js":"31","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\tag\\index.js":"32","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\forms\\forms-steps\\index.js":"33","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\loading-screen\\index.js":"34","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\helpers\\functions.js":"35","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\modal\\confirmationModal.js":"36","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\navbar\\navbar.js":"37","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\request-card\\card.js":"38","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\dropdown-image\\dropdown.js":"39","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\tabs\\tabs.js":"40","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\tag\\tag.js":"41","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\forms\\forms-steps\\form-steps.js":"42","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\avatar\\index.js":"43","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\loading-screen\\loading-screen.js":"44","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\story-card\\index.js":"45","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\hooks\\useOutsideListener.js":"46","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\avatar\\avatar.js":"47","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\story-card\\story_card.js":"48","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\customRouter\\anyRoute.js":"49","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\helmet\\index.js":"50","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\helmet\\helmet-metadata.js":"51","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\modal\\punctuation.js":"52","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\speech-bubble\\speech-bubble.js":"53"},{"size":358,"mtime":1612154583817,"results":"54","hashOfConfig":"55"},{"size":1657,"mtime":1615182321431,"results":"56","hashOfConfig":"55"},{"size":924,"mtime":1612329952620,"results":"57","hashOfConfig":"55"},{"size":854,"mtime":1615182318146,"results":"58","hashOfConfig":"55"},{"size":9161,"mtime":1617255810918,"results":"59","hashOfConfig":"55"},{"size":3622,"mtime":1617164884793,"results":"60","hashOfConfig":"55"},{"size":19421,"mtime":1617258450714,"results":"61","hashOfConfig":"55"},{"size":4900,"mtime":1617057602480,"results":"62","hashOfConfig":"55"},{"size":10481,"mtime":1615182318168,"results":"63","hashOfConfig":"55"},{"size":22041,"mtime":1617258458646,"results":"64","hashOfConfig":"55"},{"size":9734,"mtime":1615182318169,"results":"65","hashOfConfig":"55"},{"size":12129,"mtime":1617257223156,"results":"66","hashOfConfig":"55"},{"size":689,"mtime":1617057602450,"results":"67","hashOfConfig":"55"},{"size":690,"mtime":1617057602448,"results":"68","hashOfConfig":"55"},{"size":35,"mtime":1611783381168,"results":"69","hashOfConfig":"55"},{"size":659,"mtime":1612134803982,"results":"70","hashOfConfig":"55"},{"size":7728,"mtime":1617170103904,"results":"71","hashOfConfig":"55"},{"size":1121,"mtime":1617255701729,"results":"72","hashOfConfig":"55"},{"size":11309,"mtime":1617057602458,"results":"73","hashOfConfig":"55"},{"size":10439,"mtime":1617057602456,"results":"74","hashOfConfig":"55"},{"size":1689,"mtime":1611974876703,"results":"75","hashOfConfig":"55"},{"size":1258,"mtime":1617057602465,"results":"76","hashOfConfig":"55"},{"size":651,"mtime":1611963889219,"results":"77","hashOfConfig":"55"},{"size":3936,"mtime":1612489526320,"results":"78","hashOfConfig":"55"},{"size":1358,"mtime":1617078063906,"results":"79","hashOfConfig":"55"},{"size":230,"mtime":1611891779839,"results":"80","hashOfConfig":"55"},{"size":35,"mtime":1610169602941,"results":"81","hashOfConfig":"55"},{"size":33,"mtime":1612493180152,"results":"82","hashOfConfig":"55"},{"size":37,"mtime":1611812649805,"results":"83","hashOfConfig":"55"},{"size":2145,"mtime":1615182318120,"results":"84","hashOfConfig":"55"},{"size":32,"mtime":1615182318143,"results":"85","hashOfConfig":"55"},{"size":32,"mtime":1610813286511,"results":"86","hashOfConfig":"55"},{"size":39,"mtime":1611877771633,"results":"87","hashOfConfig":"55"},{"size":43,"mtime":1612489867120,"results":"88","hashOfConfig":"55"},{"size":3391,"mtime":1617258089959,"results":"89","hashOfConfig":"55"},{"size":2558,"mtime":1615182318130,"results":"90","hashOfConfig":"55"},{"size":5249,"mtime":1617057602462,"results":"91","hashOfConfig":"55"},{"size":4254,"mtime":1617057602464,"results":"92","hashOfConfig":"55"},{"size":2835,"mtime":1617057602453,"results":"93","hashOfConfig":"55"},{"size":1992,"mtime":1615182318145,"results":"94","hashOfConfig":"55"},{"size":251,"mtime":1610819468986,"results":"95","hashOfConfig":"55"},{"size":834,"mtime":1611881968391,"results":"96","hashOfConfig":"55"},{"size":35,"mtime":1612494927695,"results":"97","hashOfConfig":"55"},{"size":834,"mtime":1615182318127,"results":"98","hashOfConfig":"55"},{"size":39,"mtime":1610293845546,"results":"99","hashOfConfig":"55"},{"size":913,"mtime":1615182318153,"results":"100","hashOfConfig":"55"},{"size":565,"mtime":1617057602447,"results":"101","hashOfConfig":"55"},{"size":746,"mtime":1610429606771,"results":"102","hashOfConfig":"55"},{"size":453,"mtime":1615086499952,"results":"103","hashOfConfig":"55"},{"size":44,"mtime":1615182318124,"results":"104","hashOfConfig":"55"},{"size":2063,"mtime":1617057602455,"results":"105","hashOfConfig":"55"},{"size":7075,"mtime":1615598488464,"results":"106","hashOfConfig":"55"},{"size":228,"mtime":1615598488470,"results":"107","hashOfConfig":"55"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},"1arx63t",{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"110"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"110"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"147","messages":"148","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"110"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"110"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"110"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"110"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"110"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"110"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"110"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"110"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"110"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"110"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"110"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},"C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\index.js",[],["228","229"],"C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\TLApp.js",[],"C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\context\\DrawerContext.js",[],"C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\context\\AuthContext.js",[],"C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\pages\\admin.js",["230","231","232"],"C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\pages\\login.js",["233"],"C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\pages\\solicitud-critica.js",["234","235","236","237"],"C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\pages\\inicio.js",[],"C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\pages\\prep_critica.js",["238"],"import React, { useState, useEffect } from 'react'\r\nimport Footer from '../componentes/footer/footer';\r\nimport Navbar from '../componentes/navbar';\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport Fade from 'react-reveal/Fade';\r\nimport { css } from \"@emotion/core\";\r\nimport { setRequestDone } from '../api';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowLeft, faPaperPlane, faCheckCircle, faHome, faEye } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst overrideSpinnerInline = css`\r\n  display: inline-block;\r\n  vertical-align: middle;\r\n`;\r\n\r\nconst Preparation = ({ location }) => {\r\n\r\n    const { id, title, about, link, type, points } = location.state.data;\r\n\r\n    const [success, setSuccess] = useState(false);\r\n    const [urlResult, setUrlResult] = useState('');\r\n    const [loading, setLoading] = useState(false); // Determina si se está enviando el form\r\n    const [intention, setIntention] = useState('');\r\n    const [hook, setHook] = useState('');\r\n    const [ortography, setOrtography] = useState('');\r\n    const [improvement, setImprovement] = useState('');\r\n\r\n    const history = useHistory();\r\n\r\n    const intentionRequested = points.includes('INTENCION');\r\n    const hookRequested = points.includes('ENGANCHE');\r\n    const ortographyRequested = points.includes('ORTOGRAFIA');\r\n\r\n\r\n    const updIntention = (e) => {\r\n        setIntention(e.target.value);\r\n    }\r\n\r\n    const updHook = (e) => {\r\n        setHook(e.target.value);\r\n    }\r\n\r\n    const updOrtography = (e) => {\r\n        setOrtography(e.target.value);\r\n    }\r\n\r\n    const updImprovement = (e) => {\r\n        setImprovement(e.target.value);\r\n    }\r\n\r\n    const goBackwards = () => {\r\n        history.push('/admin');\r\n    }\r\n\r\n    const send = async (e) => {\r\n        e.preventDefault();\r\n        if (!checkErrors()) {\r\n            setLoading(true);\r\n            saveChanges();\r\n        }\r\n    }\r\n\r\n    const saveChanges = () => {\r\n        const data = {\r\n            requestId: id,\r\n            title: title.trim(),\r\n            type: type.trim(),\r\n            intention: intention.trim(),\r\n            hook: hook.trim(),\r\n            ortography: ortography.trim(),\r\n            improvement: improvement.trim(),\r\n        };\r\n\r\n        setRequestDone(data).then(result => {\r\n            window.scrollTo(0, 0);\r\n            setLoading(false);\r\n            if (!result.error) {\r\n                setUrlResult(result.url);\r\n                setSuccess(true);\r\n            } else {\r\n                alert(result.error);\r\n                setSuccess(false);\r\n            }\r\n        });\r\n    }\r\n\r\n    const checkErrors = () => {\r\n\r\n        // Name\r\n        if (intentionRequested) {\r\n            if (!(/^(?!\\s*$).{1,1000}/.test(intention))) {\r\n                alert('La intención de la obra debe tener de 1 a 1000 caracteres');\r\n                return true;\r\n            }\r\n        }\r\n\r\n        // Hooks\r\n        if (hookRequested) {\r\n            if (!(/^(?!\\s*$).{1,1000}/.test(hook))) {\r\n                alert('En enganche de la obra debe tener de 1 a 1000 caracteres');\r\n                return true;\r\n            }\r\n        }\r\n\r\n        // Ortography\r\n        if (ortographyRequested) {\r\n            if (!(/^(?!\\s*$).{1,1000}/.test(ortography))) {\r\n                alert('La ortografía de la obra debe tener de 1 a 1000 caracteres');\r\n                return true;\r\n            }\r\n        }\r\n\r\n        // Improvement (optional)\r\n        if (improvement) {\r\n            if (!(/^(?!\\s*$).{1,1000}/.test(improvement))) {\r\n                alert('El consejo para el autor debe tener de 1 a 1000 caracteres');\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n        setSuccess(false);\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <Navbar />\r\n            <main className='main-body below-navbar colored-background'>\r\n                <section className='container-xl section prep-req-container'>\r\n                    <div className='flex-align-center mb-2'>\r\n                        <FontAwesomeIcon onClick={goBackwards} className='mr-1' icon={faArrowLeft} size='lg' />\r\n                        <h4 className='request-prep-title m-0 clamp clamp-2'>Crítica: {title}</h4>\r\n                    </div>\r\n                    {\r\n                        success\r\n                            ?\r\n                            <div className='form-container text-align-center'>\r\n                                <Fade bottom>\r\n                                    <FontAwesomeIcon color={'#3DE58D'} icon={faCheckCircle} style={{ fontSize: '8rem' }} />\r\n                                    <h3 className='mt-1 mb-1'>¡Crítica enviada!</h3>\r\n                                </Fade>\r\n                                <p className='txt-responsive-form m0-auto'>Tu experiencia ha aumentado :)</p>\r\n                                <div className='button-container mt-3'>\r\n                                    <button onClick={() => window.open(urlResult, '_blank')} className='button button-light-purple button-option-request ml-auto'>\r\n                                        <FontAwesomeIcon icon={faEye} size='1x' />\r\n                                        {' '}\r\n                                                Ver resultado\r\n                                        </button>\r\n                                    <button onClick={goBackwards} className='button button-blue button-option-request mr-auto'>\r\n                                        <FontAwesomeIcon icon={faHome} size='1x' />\r\n                                        {' '}\r\n                                                Regresar\r\n                                        </button>\r\n                                </div>\r\n                            </div>\r\n                            :\r\n                            <>\r\n                                <div className=''>\r\n                                    <p>{about}</p>\r\n                                    <h4>Link de la obra</h4>\r\n                                    {\r\n                                        link\r\n                                            ?\r\n                                            <a target='_blank' href={link}>{link}</a>\r\n                                            :\r\n                                            <p>No existe link</p>\r\n                                    }\r\n                                    {\r\n                                        intentionRequested\r\n                                        &&\r\n                                        <div className='form-group'>\r\n                                            <h4>¿Se logró transmitir la idea?</h4>\r\n                                            <textarea minLength=\"1\" maxLength=\"1000\" rows=\"4\" value={intention} onChange={updIntention} id=\"txtIntencion\" placeholder=\"Ejemplo: Siento que la idea se transmite correctamente, porque genera en el lector una sensación de...\"></textarea>\r\n                                        </div>\r\n                                    }\r\n                                    {\r\n                                        hookRequested\r\n                                        &&\r\n                                        <div className='form-group'>\r\n                                            <h4>¿Qué tal fue el enganche de la obra?</h4>\r\n                                            <textarea minLength=\"1\" maxLength=\"1000\" rows=\"4\" value={hook} onChange={updHook} id=\"txtEnganche\" placeholder=\"Ejemplo: Considero que tiene un enganche bueno, pero no es suficiente. Debería enganchar mucho desde un inicio...\"></textarea>\r\n                                        </div>\r\n                                    }\r\n                                    {\r\n                                        ortographyRequested\r\n                                        &&\r\n                                        <div className='form-group'>\r\n                                            <h4>¿Qué tal fue la ortografía?</h4>\r\n                                            <textarea minLength=\"1\" maxLength=\"1000\" rows=\"4\" value={ortography} onChange={updOrtography} id=\"txtOrtografia\" placeholder=\"Ejemplo: La ortografía fue excelente. Haces un correcto uso de las comas, los puntos y las tildes...\"></textarea>\r\n                                        </div>\r\n                                    }\r\n                                    <div className='form-group'>\r\n                                        <h4>¿Algún consejo para que el autor pueda mejorar? (Opcional)</h4>\r\n                                        <textarea minLength=\"1\" maxLength=\"1000\" rows=\"4\" value={improvement} onChange={updImprovement} id=\"txtOrtografia\" placeholder=\"Ejemplo: La ortografía fue excelente. Haces un correcto uso de las comas, los puntos y las tildes...\"></textarea>\r\n                                    </div>\r\n                                </div>\r\n                                <div className='form-buttons-container mt-3'>\r\n                                    {\r\n                                        loading\r\n                                            ?\r\n                                            <span className='button button-green justify-self-right'>\r\n                                                Enviando\r\n                                {' '}\r\n                                                <ClipLoader color={'#fff'} loading={true} css={overrideSpinnerInline} size={22} />\r\n                                            </span>\r\n                                            :\r\n                                            <button onClick={send} className='button button-green justify-self-right'>\r\n                                                <FontAwesomeIcon icon={faPaperPlane} size='1x' />\r\n                                                {' '}\r\n                                                <span className='d-none d-md-inline'>\r\n                                                    Enviar\r\n                                                </span>\r\n                                            </button>\r\n                                    }\r\n                                </div>\r\n                            </>\r\n                    }\r\n                </section>\r\n            </main>\r\n            <Footer />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Preparation;","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\pages\\solicitud-diseno.js",["239","240","241"],"C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\pages\\prep_diseno.js",["242","243"],"import React, { useRef, useState, useEffect } from 'react'\r\nimport Footer from '../componentes/footer/footer';\r\nimport Navbar from '../componentes/navbar';\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport Fade from 'react-reveal/Fade';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { css } from \"@emotion/core\";\r\nimport { getGeneratedId, uploadImage, setRequestDone } from '../api';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowLeft, faPaperPlane, faCheckCircle, faHome, faEye } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst overrideSpinnerInline = css`\r\n  display: inline-block;\r\n  vertical-align: middle;\r\n`;\r\n\r\nconst maxFileSize = 5242880;\r\n\r\nconst Preparation = ({ location }) => {\r\n\r\n    const { title, id, type, link } = location.state.data;\r\n\r\n    const refDesign = useRef(null);\r\n\r\n    const [success, setSuccess] = useState(false);\r\n    const [urlResult, setUrlResult] = useState('');\r\n    const [loading, setLoading] = useState(false); // Determina si se está enviando el form\r\n    const [comment, setComment] = useState('');\r\n    const [design, setDesign] = useState(null);\r\n\r\n    const history = useHistory();\r\n\r\n    const updComment = (e) => {\r\n        setComment(e.target.value);\r\n    }\r\n\r\n    const goBackwards = () => {\r\n        history.push('/admin');\r\n    }\r\n\r\n    const startSelectDesign = (e) => {\r\n        e.preventDefault();\r\n        refDesign.current.click();\r\n    }\r\n\r\n    const selectDesign = (e) => {\r\n        e.preventDefault();\r\n        const file = e.target.files[0];\r\n        if (file) {\r\n            if (file.size <= maxFileSize) {\r\n                setDesign(file);\r\n            } else {\r\n                alert('La imagen debe ser menor a 5MB')\r\n            }\r\n        }\r\n    }\r\n\r\n    const deleteDesign = (e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        setDesign(null);\r\n    }\r\n\r\n    const send = async (e) => {\r\n        e.preventDefault();\r\n        if (!checkErrors()) {\r\n            setLoading(true);\r\n            saveChanges();\r\n        }\r\n    }\r\n\r\n    const saveChanges = () => {\r\n        const data = {\r\n            requestId: id,\r\n            type: type.trim(),\r\n            comment: comment.trim()\r\n        };\r\n\r\n        uploadImage('solicitud-diseno', design)\r\n            .then(url => {\r\n                setRequestDone({ ...data, urlResult: url }).then(result => {\r\n                    window.scrollTo(0, 0);\r\n                    setLoading(false);\r\n                    if (!result.error) {\r\n                        setUrlResult(result.url);\r\n                        setSuccess(true);\r\n                    } else {\r\n                        alert(result.error);\r\n                        setSuccess(false);\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                setLoading(false);\r\n                setSuccess(false);\r\n                alert('Error al subir la imagen. Reintente');\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n    const checkErrors = () => {\r\n\r\n        // Comment\r\n        if (comment) {\r\n            if (!(/^(?!\\s*$).{1,1000}/.test(comment))) {\r\n                alert('Tu comentario debe debe tener de 1 a 1000 caracteres');\r\n                return true;\r\n            }\r\n        }\r\n\r\n        // File\r\n        if (!design) {\r\n            alert('Debes subir tu diseño final');\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n        setSuccess(false);\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <Navbar />\r\n            <main className='main-body below-navbar colored-background'>\r\n                <section className='container-xl section prep-req-container'>\r\n                    <div className='flex-align-center mb-2'>\r\n                        <FontAwesomeIcon onClick={goBackwards} className='mr-1' icon={faArrowLeft} size='lg' />\r\n                        <h4 className='request-prep-title m-0 clamp clamp-2'>Diseño: {title}</h4>\r\n                    </div>\r\n                    {\r\n                        success\r\n                            ?\r\n                            <div className='form-container text-align-center'>\r\n                                <Fade bottom>\r\n                                    <FontAwesomeIcon color={'#3DE58D'} icon={faCheckCircle} style={{ fontSize: '8rem' }} />\r\n                                    <h3 className='mt-1 mb-1'>¡Diseño enviado!</h3>\r\n                                </Fade>\r\n                                <p className='txt-responsive-form m0-auto'>Tu experiencia ha aumentado :)</p>\r\n                                <div className='button-container mt-3'>\r\n                                    <button onClick={() => window.open(urlResult, '_blank')} className='button button-light-purple button-option-request ml-auto'>\r\n                                        <FontAwesomeIcon icon={faEye} size='1x' />\r\n                                        {' '}\r\n                                                Ver resultado\r\n                                        </button>\r\n                                    <button onClick={goBackwards} className='button button-blue button-option-request mr-auto'>\r\n                                        <FontAwesomeIcon icon={faHome} size='1x' />\r\n                                        {' '}\r\n                                                Regresar\r\n                                        </button>\r\n                                </div>\r\n                            </div>\r\n                            :\r\n                            <>\r\n                                <div className=''>\r\n                                    <h4>Link de la obra</h4>\r\n                                    {\r\n                                        link\r\n                                            ?\r\n                                            <a target='_blank' href={link}>{link}</a>\r\n                                            :\r\n                                            <p>No existe link</p>\r\n                                    }\r\n                                    <div className='form-group'>\r\n                                        <h4>Diseño terminado</h4>\r\n                                        {\r\n                                            design\r\n                                                ?\r\n                                                <button onClick={startSelectDesign} className={`d-flex justify-content-between align-items-center button button-light-purple button-thin stretch ${design ? 'd-flex' : ''}`}>\r\n                                                    <span className='clamp clamp-1'>\r\n                                                        {design.name}\r\n                                                    </span>\r\n                                                    <span onClick={deleteDesign} className='fa fa-times' style={{ color: 'white' }}></span>\r\n                                                </button>\r\n                                                :\r\n                                                <button onClick={startSelectDesign} className={`button button-light-purple button-thin stretch ${design ? 'd-flex' : ''}`}>\r\n                                                    <span>\r\n                                                        Subir diseño\r\n                                        </span>\r\n                                                </button>\r\n                                        }\r\n                                        <input type=\"file\" onChange={selectDesign} accept=\"image/*\" ref={refDesign} className='d-none' id=\"flDiseno\" />\r\n                                    </div>\r\n                                    <div className='form-group'>\r\n                                        <h4>¿Algún comentario o recomendación? (Opcional)</h4>\r\n                                        <textarea minLength=\"1\" maxLength=\"1000\" rows=\"4\" value={comment} onChange={updComment} placeholder=\"Ejemplo: Considero que tiene un enganche bueno, pero no es suficiente. Debería enganchar mucho desde un inicio...\"></textarea>\r\n                                    </div>\r\n                                </div>\r\n                                <div className='form-buttons-container mt-3'>\r\n                                    {\r\n                                        loading\r\n                                            ?\r\n                                            <span className='button button-green justify-self-right'>\r\n                                                Enviando\r\n                                                {' '}\r\n                                                <ClipLoader color={'#fff'} loading={true} css={overrideSpinnerInline} size={22} />\r\n                                            </span>\r\n                                            :\r\n                                            <button onClick={send} className='button button-green justify-self-right'>\r\n                                                <FontAwesomeIcon icon={faPaperPlane} size='1x' />\r\n                                                {' '}\r\n                                                <span className='d-none d-md-inline'>\r\n                                                    Enviar\r\n                                                </span>\r\n                                            </button>\r\n                                    }\r\n                                </div>\r\n                            </>\r\n                    }\r\n                </section>\r\n            </main>\r\n            <Footer />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Preparation;","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\pages\\prev_resultado.js",["244","245","246","247","248","249","250","251","252","253","254","255"],"C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\customRouter\\publicRoute.js",[],"C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\customRouter\\privateRoute.js",[],"C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\drawer\\index.js",[],"C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\firebase.js",[],"C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\api.js",["256","257"],"C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\helpers\\userStorage.js",["258"],"C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\modal\\designDetail.js",["259","260","261","262","263","264","265","266","267","268","269","270","271"],"import React, { useContext, useState, useEffect } from 'react';\r\nimport ConfirmationModal from './confirmationModal';\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport Avatar from '../avatar';\r\nimport Zoom from 'react-reveal/Zoom';\r\nimport { getDateText, getExpDateText, getMessengerTypeName, getDesignType, getFormattedPhone, extractLink } from '../../helpers/functions';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { AuthContext } from '../../context/AuthContext';\r\nimport { css } from \"@emotion/core\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faAngleDown, faHandPaper, faLayerGroup, faPaintBrush, faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport { getProfileStorage } from '../../helpers/userStorage';\r\nimport './modals.css';\r\nimport { faWhatsapp } from '@fortawesome/free-brands-svg-icons';\r\n\r\nconst iconSize = 20;\r\nconst color = '#756F86';\r\n\r\nconst overrideSpinnerInline = css`\r\n  display: inline-block;\r\n  margin-left: .6rem;\r\n  vertical-align: middle;\r\n`;\r\n\r\nconst Modal = ({ isOpen, data, takeRequest, takingRequest, close }) => {\r\n\r\n    const { logged } = useContext(AuthContext);\r\n\r\n    const [openConfirmationModal, setOpenConfirmationModal] = useState(false);\r\n\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        if (isOpen) {\r\n            document.body.style.overflow = 'hidden';\r\n        } else {\r\n            document.body.style.overflow = 'unset';\r\n        }\r\n    }, [isOpen]);\r\n\r\n    useEffect(() => {\r\n        if (isOpen) {\r\n            document.body.style.overflow = 'hidden';\r\n        } else {\r\n            document.body.style.overflow = 'unset';\r\n        }\r\n    }, [isOpen]);\r\n\r\n    let styles = '';\r\n    if (isOpen) {\r\n        styles = 'open';\r\n    } else {\r\n        styles = 'close';\r\n    }\r\n\r\n    const { icon, text } = getDesignType(data?.designType);\r\n\r\n    const confirm = () => {\r\n        setOpenConfirmationModal(false);\r\n        takeRequest(data?.id);\r\n    }\r\n    const isTakenByMe = data?.takenBy == logged.uid;\r\n    const messengerType = data?.messengerType;\r\n    const profile = getProfileStorage();\r\n    const formattedPhone = getFormattedPhone(data?.phone);\r\n    const formattedLink = extractLink(data?.link);\r\n    const artist = {\r\n        fName: profile?.fName || '',\r\n        lName: profile?.lName || '',\r\n        contactEmail: profile?.contactEmail || '',\r\n        networks: profile?.networks || []\r\n    };\r\n    if (data) {\r\n        data.artist = artist;\r\n    }\r\n\r\n    if (isTakenByMe) {\r\n        getExpDateText(data?.takenAt, data?.expDate)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ConfirmationModal\r\n                isOpen={openConfirmationModal}\r\n                title='Casi listo'\r\n                message='Al aceptar, tienes tres días para entregar la crítica o acordar una fecha con la persona interesada. ¿Continuar?'\r\n                confirm={confirm}\r\n                close={() => setOpenConfirmationModal(false)} />\r\n            <div className={'overlay overlay-modal ' + styles} onClick={close}>\r\n            </div>\r\n            <Zoom bottom collapse when={isOpen}>\r\n                <div className={'modal ' + styles}>\r\n                    <div className='modal-container'>\r\n                        <div className='header-container position-relative'>\r\n                            <Avatar clases='modal-avatar' />\r\n                            <div className='title-container'>\r\n                                <h3 className='clamp clamp-1'>{data?.title}</h3>\r\n                                <p>{\r\n                                    data?.status == 'DISPONIBLE' || isTakenByMe && data?.status == 'HECHO'\r\n                                        ?\r\n                                        getDateText(data?.createdAt.seconds * 1000)\r\n                                        :\r\n                                        isTakenByMe && data?.status == 'TOMADO'\r\n                                            ?\r\n                                            getExpDateText(data?.expDate.seconds * 1000)\r\n                                            :\r\n                                            null\r\n                                }</p>\r\n                            </div>\r\n                            <FontAwesomeIcon icon={faAngleDown} onClick={close} className='close-icon' />\r\n                        </div>\r\n                        <div className='description-container'>\r\n                            <h4>Tipo de diseño</h4>\r\n                            <span className={icon} style={{ color, fontSize: iconSize }}>{data?.icon}</span>\r\n                            <p className='d-inline ml-1'>{text}</p>\r\n                            {\r\n                                data?.designType == 'CR'\r\n                                &&\r\n                                <>\r\n                                    <h4>Días para el lanzamiento</h4>\r\n                                    <p>{data?.daysLeft}</p>\r\n                                </>\r\n                            }\r\n                            <h4>¿Qué quiero transmitir?</h4>\r\n                            <p>{data?.intention || 'No hay intención'}</p>\r\n                            <h4>Boceto de referencia</h4>\r\n                            {\r\n                                data?.urlImg\r\n                                    ?\r\n                                    <div>\r\n                                        <a target='_blank' href={data?.urlImg}>\r\n                                            <img src={data?.urlImg} alt='img-boceto' className='sample-design-detail' />\r\n                                        </a>\r\n                                    </div>\r\n                                    :\r\n                                    <p>'No hay boceto de referencia</p>\r\n                            }\r\n                            <h4>Link de la obra</h4>\r\n                            {\r\n                                formattedLink\r\n                                    ?\r\n                                    <a target='_blank' className='clamp clamp-1' href={formattedLink}>{formattedLink}</a>\r\n                                    :\r\n                                    <p>No existe link</p>\r\n                            }\r\n                            <h4>Pseudónimo del autor</h4>\r\n                            <p>{data?.author || 'Sin nombre'}</p>\r\n                            {\r\n                                isTakenByMe\r\n                                &&\r\n                                <>\r\n                                    <h4>Datos de contacto</h4>\r\n                                    <p className=\"m-0\"><b>Nombre:</b> {data?.name}</p>\r\n                                    <p className=\"m-0\"><b>Contacto:</b> {data?.phone} ({getMessengerTypeName(messengerType)})</p>\r\n                                    {\r\n                                        messengerType == 'WSP' && formattedPhone\r\n                                        &&\r\n                                        <button onClick={() => window.open('https://web.whatsapp.com/send?phone=' + formattedPhone)} className='button button-whatsapp button-blue button-option-request my-1'>\r\n                                            <FontAwesomeIcon color={'#fff'} icon={faWhatsapp} className='icon' />\r\n                                                Contactar\r\n                                        </button>\r\n                                    }\r\n                                    <p className=\"m-0 mb-2\"><b>Correo:</b> {data?.email}</p>\r\n                                </>\r\n                            }\r\n                        </div>\r\n                        <div className=\"footer-card-container\">\r\n                            <div className='button-container'>\r\n                                {\r\n                                    takingRequest\r\n                                        ?\r\n                                        <button onClick={() => { }} className='button button-blue button-option-request'>\r\n                                            Cargando\r\n                                                {' '}\r\n                                            <ClipLoader color={'#fff'} loading={true} css={overrideSpinnerInline} size={22} />\r\n                                        </button>\r\n                                        :\r\n                                        <>\r\n                                            <>\r\n                                                {\r\n                                                    data?.status == 'DISPONIBLE'\r\n                                                        ?\r\n                                                        <button onClick={() => setOpenConfirmationModal(true)} className='button button-blue button-option-request'>\r\n                                                            <FontAwesomeIcon color={'#fff'} icon={faHandPaper} className='icon' />\r\n                                                            Tomar pedido\r\n                                                        </button>\r\n                                                        :\r\n                                                        data?.status == 'TOMADO' && isTakenByMe\r\n                                                            ?\r\n                                                            <button onClick={() => history.push('prep_diseno', { data })} className='button button-green button-option-request'>\r\n                                                                <FontAwesomeIcon color={'#fff'} icon={faPaintBrush} className='icon' />\r\n                                                            Iniciar diseño\r\n                                                            </button>\r\n                                                            :\r\n                                                            null\r\n                                                }\r\n                                            </>\r\n                                            {\r\n                                                data?.status == 'HECHO' && isTakenByMe\r\n                                                && (\r\n                                                    <button onClick={() => history.push('prev_resultado', { data })} className='button button-green button-option-request'>\r\n                                                        <FontAwesomeIcon color={'#fff'} icon={faLayerGroup} className='icon' />\r\n                                                        Ir a resultado\r\n                                                    </button>\r\n                                                )\r\n                                            }\r\n                                            <button onClick={close} className='button button-red button-option-request'>\r\n                                                <FontAwesomeIcon color={'#fff'} icon={faTimes} className='icon' />\r\n                                                Cerrar\r\n                                            </button>\r\n                                        </>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Zoom>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Modal;","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\modal\\critiqueDetail.js",["272","273","274","275","276","277","278","279","280","281","282"],"import React, { useContext, useState, useEffect } from 'react';\r\nimport ConfirmationModal from './confirmationModal';\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport Avatar from '../avatar';\r\nimport Zoom from 'react-reveal/Zoom';\r\nimport { getDateText, getExpDateText, getMessengerTypeName, getFormattedPhone, getAbrevPointName, extractLink } from '../../helpers/functions';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { AuthContext } from '../../context/AuthContext';\r\nimport { css } from \"@emotion/core\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faAngleDown, faEdit, faHandPaper, faLayerGroup, faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport { getProfileStorage } from '../../helpers/userStorage';\r\nimport './modals.css';\r\nimport { faWhatsapp } from '@fortawesome/free-brands-svg-icons';\r\n\r\nconst overrideSpinnerInline = css`\r\n  display: inline-block;\r\n  margin-left: .6rem;\r\n  vertical-align: middle;\r\n`;\r\n\r\nconst Modal = ({ isOpen, data, takeRequest, takingRequest, close }) => {\r\n\r\n    const { logged } = useContext(AuthContext);\r\n\r\n    const [openConfirmationModal, setOpenConfirmationModal] = useState(false);\r\n\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        if (isOpen) {\r\n            document.body.style.overflow = 'hidden';\r\n        } else {\r\n            document.body.style.overflow = 'unset';\r\n        }\r\n    }, [isOpen]);\r\n\r\n    useEffect(() => {\r\n        if (isOpen) {\r\n            document.body.style.overflow = 'hidden';\r\n        } else {\r\n            document.body.style.overflow = 'unset';\r\n        }\r\n    }, [isOpen]);\r\n\r\n    let styles = '';\r\n    if (isOpen) {\r\n        styles = 'open';\r\n    } else {\r\n        styles = 'close';\r\n    }\r\n\r\n    const confirm = () => {\r\n        setOpenConfirmationModal(false);\r\n        takeRequest(data?.id);\r\n    }\r\n\r\n    const isTakenByMe = data?.takenBy == logged.uid;\r\n    const messengerType = data?.messengerType;\r\n    const profile = getProfileStorage();\r\n    const formattedPhone = getFormattedPhone(data?.phone);\r\n    const formattedLink = extractLink(data?.link);\r\n    const artist = {\r\n        fName: profile?.fName || '',\r\n        lName: profile?.lName || '',\r\n        contactEmail: profile?.contactEmail || '',\r\n        networks: profile?.networks || []\r\n    };\r\n    if (data) {\r\n        data.artist = artist;\r\n    }\r\n    //console.log(formattedPhone)\r\n    return (\r\n        <>\r\n            <ConfirmationModal\r\n                isOpen={openConfirmationModal}\r\n                title='Casi listo'\r\n                message='Al aceptar, tienes tres días para entregar la crítica o acordar una fecha con la persona interesada. ¿Continuar?'\r\n                confirm={confirm}\r\n                close={() => setOpenConfirmationModal(false)} />\r\n            <div className={'overlay overlay-modal ' + styles} onClick={close}>\r\n            </div>\r\n            <Zoom bottom collapse when={isOpen}>\r\n                <div className={'modal ' + styles}>\r\n                    <div className='modal-container'>\r\n                        <div className='header-container position-relative'>\r\n                            <Avatar clases='modal-avatar' />\r\n                            <div className='title-container'>\r\n                                <h3 className='clamp clamp-1'>{data?.title}</h3>\r\n                                <p>{\r\n                                    data?.status == 'DISPONIBLE' || isTakenByMe && data?.status == 'HECHO'\r\n                                        ?\r\n                                        getDateText(data?.createdAt.seconds * 1000)\r\n                                        :\r\n                                        isTakenByMe && data?.status == 'TOMADO'\r\n                                            ?\r\n                                            getExpDateText(data?.expDate.seconds * 1000)\r\n                                            :\r\n                                            null\r\n                                }</p>\r\n                            </div>\r\n                            <FontAwesomeIcon icon={faAngleDown} onClick={close} className='close-icon' />\r\n                        </div>\r\n                        <div className='description-container'>\r\n                            <p>{data?.about || 'No hay descripción'}</p>\r\n                            <h4>Link de la obra</h4>\r\n                            {\r\n                                formattedLink ?\r\n                                    <a target='_blank' className='clamp clamp-1' href={formattedLink}>{formattedLink}</a>\r\n                                    :\r\n                                    <p>No existe link</p>\r\n                            }\r\n                            <h4>¿Qué quiero transmitir?</h4>\r\n                            <p>{data?.intention || 'No hay intención'}</p>\r\n                            <h4>Puntos a criticar</h4>\r\n                            <ul>\r\n                                {\r\n                                    data?.points?.map(point => (\r\n                                        <li key={point}>{getAbrevPointName(point)}</li>\r\n                                    ))\r\n                                }\r\n                            </ul>\r\n                            {\r\n                                (!data?.points || data?.points?.length < 1)\r\n                                &&\r\n                                <p>No se han especificado puntos</p>\r\n                            }\r\n                            {\r\n                                isTakenByMe\r\n                                &&\r\n                                <>\r\n                                    <h4>Datos de contacto</h4>\r\n                                    <p className=\"m-0\"><b>Nombre:</b> {data?.name}</p>\r\n                                    <p className=\"m-0\"><b>Contacto:</b> {data?.phone} ({getMessengerTypeName(messengerType)})</p>\r\n                                    {\r\n                                        messengerType == 'WSP' && formattedPhone\r\n                                        &&\r\n                                        <button onClick={() => window.open('https://web.whatsapp.com/send?phone=' + formattedPhone)} className='button button-whatsapp button-blue button-option-request my-1'>\r\n                                            <FontAwesomeIcon color={'#fff'} icon={faWhatsapp} className='icon' />\r\n                                                Contactar\r\n                                        </button>\r\n                                    }\r\n                                    <p className=\"m-0 mb-2\"><b>Correo:</b> {data?.email}</p>\r\n                                </>\r\n                            }\r\n                        </div>\r\n                        <div className=\"footer-card-container\">\r\n                            <div className='button-container'>\r\n                                {\r\n                                    takingRequest\r\n                                        ?\r\n                                        <button onClick={() => { }} className='button button-blue button-option-request'>\r\n                                            Cargando\r\n                                                {' '}\r\n                                            <ClipLoader color={'#fff'} loading={true} css={overrideSpinnerInline} size={22} />\r\n                                        </button>\r\n                                        :\r\n                                        <>\r\n                                            <>\r\n                                                {\r\n                                                    data?.status == 'DISPONIBLE'\r\n                                                        ?\r\n                                                        <button onClick={() => setOpenConfirmationModal(true)} className='button button-blue button-option-request'>\r\n                                                            <FontAwesomeIcon color={'#fff'} icon={faHandPaper} className='icon' />\r\n                                                            Tomar pedido\r\n                                                        </button>\r\n                                                        :\r\n                                                        data?.status == 'TOMADO' && isTakenByMe\r\n                                                            ?\r\n                                                            <button onClick={() => history.push('prep_critica', { data })} className='button button-green button-option-request'>\r\n                                                                <FontAwesomeIcon color={'#fff'} icon={faEdit} className='icon' />\r\n                                                            Iniciar crítica\r\n                                                            </button>\r\n                                                            :\r\n                                                            null\r\n                                                }\r\n                                            </>\r\n                                            {\r\n                                                data?.status == 'HECHO' && isTakenByMe\r\n                                                && (\r\n                                                    <button onClick={() => history.push('prev_resultado', { data })} className='button button-green button-option-request'>\r\n                                                        <FontAwesomeIcon color={'#fff'} icon={faLayerGroup} className='icon' />\r\n                                                        Ir a resultado\r\n                                                    </button>\r\n                                                )\r\n                                            }\r\n                                            <button onClick={close} className='button button-red button-option-request'>\r\n                                                <FontAwesomeIcon color={'#fff'} icon={faTimes} className='icon' />\r\n                                                Cerrar\r\n                                            </button>\r\n                                        </>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </Zoom>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Modal;","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\footer\\footer.js",[],"C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\data\\data.js",[],"C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\hooks\\useStepObserver.js",[],"C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\stories-carrousel\\carrousel.js",[],"C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\home-panorama\\panorama.js",[],"C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\forms\\step-manager\\step-manager.js",[],"C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\navbar\\index.js",[],"C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\request-card\\index.js",[],"C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\dropdown-image\\index.js",[],"C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\drawer\\drawer.js",["283"],"import React, { useEffect, useContext } from 'react'\r\nimport { DrawerContext } from '../../context/DrawerContext'\r\nimport { AuthContext } from '../../context/AuthContext'\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { logout } from '../../api'\r\nimport './drawer.css'\r\n\r\nconst Drawer = () => {\r\n\r\n    const { logged } = useContext(AuthContext);\r\n    const { isOpen, close } = useContext(DrawerContext);\r\n\r\n    let history = useHistory();\r\n\r\n    const logoutUser = (e) => {\r\n        e.preventDefault();\r\n        logout()\r\n            .then(res => {\r\n                if (res) {\r\n                    close();\r\n                    history.push('/login');\r\n                }\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (isOpen) {\r\n            document.body.style.overflow = 'hidden';\r\n        } else {\r\n            document.body.style.overflow = 'unset';\r\n        }\r\n    }, [isOpen]);\r\n\r\n    let styles = '';\r\n    if (isOpen) {\r\n        styles = 'open';\r\n    } else {\r\n        styles = 'close';\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={'overlay ' + styles} onClick={close}>\r\n            </div>\r\n            <div className={'drawer ' + styles}>\r\n                {\r\n                    logged\r\n                        ?\r\n                        <a onClick={logoutUser} className='btn-drawer'>\r\n                            Salir\r\n                        </a>\r\n                        :\r\n                        <>\r\n                            <Link to='/sol_critica' onClick={close} className='btn-drawer'>\r\n                                Pide tu crítica\r\n                            </Link>\r\n                            <Link to='/sol_diseno' onClick={close} className='btn-drawer'>\r\n                                Pide tu diseño\r\n                            </Link>\r\n                            <Link to='/login' onClick={close} className='btn-drawer'>\r\n                                Login de creativos\r\n                            </Link>\r\n                        </>\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Drawer;","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\tabs\\index.js",[],"C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\tag\\index.js",[],"C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\forms\\forms-steps\\index.js",[],"C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\loading-screen\\index.js",[],"C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\helpers\\functions.js",["284","285","286","287"],"C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\modal\\confirmationModal.js",[],"C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\navbar\\navbar.js",["288"],"import React, { useRef, useState, useContext, useEffect } from 'react'\r\nimport Avatar from '../avatar'\r\nimport { useOutsideListener } from '../../hooks/useOutsideListener';\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { logout } from '../../api'\r\nimport { Link } from \"react-router-dom\"\r\nimport { DrawerContext } from '../../context/DrawerContext'\r\nimport { AuthContext } from '../../context/AuthContext'\r\nimport { getProfileStorage } from '../../helpers/userStorage'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faAngleDown } from '@fortawesome/free-solid-svg-icons';\r\nimport Logo from '../../img/logo.png'\r\nimport Sanguchito from '../../img/sanguchito.svg'\r\nimport './navbar.css'\r\n\r\nconst Navbar = ({ startTransparent }) => {\r\n\r\n    const { open, close } = useContext(DrawerContext);\r\n    const { logged } = useContext(AuthContext);\r\n\r\n    const [openOptions, setOpenOptions] = useState(false);\r\n    let history = useHistory();\r\n\r\n    const outsideListenerRef = useRef(null); // Escucha cuando se hace click fuera de\r\n    const arrowTogglerRef = useRef(null);\r\n\r\n    const { outsideListener$ } = useOutsideListener(outsideListenerRef);\r\n    const [scrolled, setScrolled] = useState(false);\r\n    const [width, setWidth] = useState(0);\r\n\r\n    const handleScroll = () => {\r\n        const offset = window.scrollY\r\n        if (offset > 20) {\r\n            setScrolled(true)\r\n        } else {\r\n            setScrolled(false)\r\n        }\r\n    }\r\n\r\n    const logoutUser = (e) => {\r\n        e.preventDefault();\r\n        logout()\r\n            .then(res => {\r\n                if (res) {\r\n                    close();\r\n                    history.push('/login');\r\n                }\r\n            })\r\n    }\r\n\r\n    const toggleOptionsContainer = () => {\r\n        setOpenOptions(!openOptions);\r\n    }\r\n\r\n    const updWith = () => {\r\n        setWidth(window.innerWidth);\r\n    }\r\n\r\n    useEffect(() => {\r\n        outsideListener$.subscribe(event => {\r\n            if (arrowTogglerRef.current && !arrowTogglerRef.current.contains(event.target)) {\r\n                setOpenOptions(false);\r\n            }\r\n        })\r\n    }, [outsideListener$, arrowTogglerRef])\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"scroll\", handleScroll)\r\n        return () => window.removeEventListener(\"scroll\", handleScroll)\r\n    }, [scrolled]);\r\n\r\n    useEffect(() => {\r\n        if (width === 0) {\r\n            setWidth(window.innerWidth);\r\n        }\r\n\r\n        if (width < 768) {\r\n            setOpenOptions(false);\r\n        }\r\n\r\n        window.addEventListener('resize', updWith);\r\n        return () => window.removeEventListener('resize', updWith);\r\n    }, [width]);\r\n\r\n    let navClasses = 'main-navbar';\r\n    if (!startTransparent || scrolled) {\r\n        navClasses += ' navbar-scrolled';\r\n    }\r\n    if (logged) {\r\n        navClasses += ' logged';\r\n    }\r\n\r\n    let optionsClasses = 'container-submenu-navbar';\r\n    if (openOptions) {\r\n        optionsClasses += ' open';\r\n    } else {\r\n        optionsClasses += ' close';\r\n    }\r\n\r\n    let fName, lName, urlImg;\r\n    const profile = getProfileStorage();\r\n    if (profile) {\r\n        fName = profile.fName;\r\n        lName = profile.lName;\r\n        urlImg = profile.urlImg;\r\n    }\r\n\r\n    return (\r\n        <nav className={navClasses}>\r\n            <div className='container-xl container-navbar position-relative'>\r\n                <Link to='/' className='logo-header'>\r\n                    <img alt='logo' src={Logo} />\r\n                </Link>\r\n                <div className='navbar-nav'>\r\n                    {\r\n                        logged\r\n                            ?\r\n                            <>\r\n                                <span className='btn-nav clamp clamp-1'>\r\n                                    {fName} {lName}\r\n                                </span>\r\n                                <Avatar clases='img-profile-navbar' />\r\n                                <span ref={arrowTogglerRef} onClick={toggleOptionsContainer} className='btn-nav m-0 pl-1 pr-1'>\r\n                                    <FontAwesomeIcon icon={faAngleDown} size='1x' />\r\n                                </span>\r\n                            </>\r\n                            :\r\n                            <>\r\n                                <Link to='/sol_critica' className='btn-nav'>\r\n                                    Críticas\r\n                                </Link>\r\n                                <Link to='/sol_diseno' className='btn-nav'>\r\n                                    Diseños\r\n                                </Link>\r\n                                <Link to='/login' className='btn-nav'>\r\n                                    Login\r\n                                </Link>\r\n                            </>\r\n                    }\r\n                </div>\r\n                <img alt='sanguchito' onClick={open} src={Sanguchito} className='img-sanguchito' />\r\n            </div>\r\n            <div ref={outsideListenerRef} className={optionsClasses}>\r\n                <ul>\r\n                    <li onClick={logoutUser}>\r\n                        Salir\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar;\r\n","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\request-card\\card.js",["289","290","291","292","293","294","295","296","297","298"],"import React, { useContext } from 'react';\r\nimport Avatar from '../avatar';\r\nimport { getDateText, getExpDateText } from '../../helpers/functions';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { AuthContext } from '../../context/AuthContext';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faEdit, faPaintBrush, faEye, faLayerGroup } from '@fortawesome/free-solid-svg-icons';\r\nimport { getProfileStorage } from '../../helpers/userStorage';\r\nimport './card.css'\r\n\r\nconst Card = React.forwardRef(({ data, select }, ref) => {\r\n\r\n    const { logged } = useContext(AuthContext);\r\n    const history = useHistory();\r\n\r\n    const isTakenByMe = data?.takenBy == logged.uid;\r\n\r\n    const profile = getProfileStorage();\r\n    const artist = {\r\n        fName: profile.fName || '',\r\n        lName: profile.lName || '',\r\n        contactEmail: profile.contactEmail || '',\r\n        networks: profile.networks || []\r\n    };\r\n    data.artist = artist;\r\n    return (\r\n        <div ref={ref} className='request-card-container'>\r\n            <div className='header-container'>\r\n                <Avatar clases='request-avatar' />\r\n                <div className='title-container'>\r\n                    <h3 className='clamp clamp-1'>{data?.title}</h3>\r\n                    <p>\r\n                        {\r\n                            data?.status == 'DISPONIBLE' || isTakenByMe && data?.status == 'HECHO'\r\n                                ?\r\n                                getDateText(data?.createdAt.seconds * 1000)\r\n                                :\r\n                                isTakenByMe && data?.status == 'TOMADO'\r\n                                    ?\r\n                                    getExpDateText(data?.expDate.seconds * 1000)\r\n                                    :\r\n                                    null\r\n                        }\r\n                    </p>\r\n                </div>\r\n            </div>\r\n            <div className='description-container'>\r\n                <p className='clamp clamp-2'>\r\n                    {data.intention}\r\n                </p>\r\n            </div>\r\n            <div className='footer-card-container'>\r\n                <div className='button-container'>\r\n                    {\r\n                        data?.status == 'TOMADO' && isTakenByMe\r\n                        && (\r\n                            data?.type == 'CRITICA'\r\n                                ?\r\n                                <button onClick={() => history.push('prep_critica', { data })} className='button button-green button-option-request'>\r\n                                    <FontAwesomeIcon color={'#fff'} icon={faEdit} className='icon' />\r\n                                    Iniciar crítica\r\n                                </button>\r\n                                :\r\n                                data?.type == 'DISENO'\r\n                                    ?\r\n                                <button onClick={() => history.push('prep_diseno', { data })} className='button button-green button-option-request'>\r\n                                    <FontAwesomeIcon color={'#fff'} icon={faPaintBrush} className='icon' />\r\n                                    Iniciar diseño\r\n                                </button>\r\n                                    :\r\n                                null\r\n                        )\r\n                    }\r\n                    {\r\n                        data?.status == 'HECHO' && isTakenByMe\r\n                        && (\r\n                            <button onClick={() => history.push('prev_resultado', { data })} className='button button-green button-option-request'>\r\n                                <FontAwesomeIcon color={'#fff'} icon={faLayerGroup} className='icon' />\r\n                                Ir a resultado\r\n                            </button>\r\n                        )\r\n                    }\r\n                    <button onClick={() => select(data)} className='button button-blue button-option-request'>\r\n                        <FontAwesomeIcon color={'#fff'} icon={faEye} className='icon' />\r\n                        Ver\r\n                </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default Card;","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\dropdown-image\\dropdown.js",["299"],"import React, { useRef, useState, useEffect } from 'react';\r\nimport { useOutsideListener } from '../../hooks/useOutsideListener';\r\nimport './dropdown.css';\r\n\r\nconst tamanoIcono = 20;\r\nconst color = '#756F86';\r\n\r\nconst Dropdown = ({ list, select, stretch, selectedItem }) => {\r\n\r\n    const [open, setOpen] = useState(false);\r\n    const outsideListenerRef = useRef(null); // Escucha cuando se hace click fuera de\r\n    const { outsideListener$ } = useOutsideListener(outsideListenerRef);\r\n\r\n    useEffect(() => {\r\n        outsideListener$.subscribe(() => {\r\n            setOpen(false);\r\n        })\r\n    }, [outsideListener$]);\r\n\r\n    const toggleDropdown = (e) => {\r\n        e.preventDefault();\r\n        setOpen(!open);\r\n    }\r\n\r\n    const selectItem = (e, item) => {\r\n        e.preventDefault();\r\n        setOpen(false);\r\n        select(item);\r\n    }\r\n\r\n    const tag = (text) => (\r\n        text &&\r\n        <span className='dropdown-list-tag'>\r\n            {text}\r\n        </span>\r\n    )\r\n\r\n    return (\r\n        <div\r\n            ref={outsideListenerRef}\r\n            className='container-select-image'>\r\n            <button className={`select-image position-relative ${stretch ? 'stretch' : ''}`} onClick={toggleDropdown}>\r\n                <span className={selectedItem.icon} style={{ color, marginRight: '1rem', fontSize: tamanoIcono + 'px' }}></span>\r\n                {\r\n                    selectedItem.text\r\n                    &&\r\n                    <span className='mr-1 position-relative' style={{ color }}>\r\n                        {selectedItem.text}\r\n                        {tag(selectedItem.tag)}\r\n                    </span>\r\n                }\r\n                <span className='fa fa-caret-down' style={{ color }}></span>\r\n            </button>\r\n            {\r\n                open\r\n                &&\r\n                <div className={`selectable-list ${stretch ? 'stretch' : ''}`}>\r\n                    {\r\n                        list.map((item, index) => item.displayInDropdown != false && (\r\n                            <div key={index} onClick={(e) => selectItem(e, item)} className='selectable-list-item'>\r\n                                <span className={item.icon} style={{ color, fontSize: tamanoIcono + 'px' }}></span>\r\n                                {\r\n                                    item.text\r\n                                    &&\r\n                                    <span className='ml-1 position-relative' style={{ color }}>\r\n                                        {item.text}\r\n                                        {tag(item.tag)}\r\n                                    </span>\r\n                                }\r\n                            </div>\r\n                        ))\r\n                    }\r\n                </div>\r\n\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dropdown;","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\tabs\\tabs.js",["300"],"import React from 'react'\r\nimport ImgVacio from \"../../img/reading-sitting.svg\";\r\nimport InfiniteScroll from 'react-infinite-scroll-component'\r\nimport './tabs.css'\r\n\r\nconst Tabs = ({ tabs, requestList, requestMoreData, hasMore, loader, activeIndex, select, initialLoading, loadingMore, children }) => {\r\n\r\n    const porcAnchoPestana = 100 / tabs.length;\r\n\r\n    const childrenArray = React.Children.toArray(children);\r\n\r\n    const switchTab = (e, index) => {\r\n        e.preventDefault();\r\n        select(index);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"material-tabs\">\r\n                {\r\n                    tabs.map((pestana, index) => (\r\n                        <a key={index} onClick={(e) => switchTab(e, index)} className=\"active\">{pestana}</a>\r\n                    ))\r\n                }\r\n                <span className=\"tab-bar\" style={{ width: `${porcAnchoPestana}%`, left: `${porcAnchoPestana * activeIndex}%` }}></span>\r\n            </div>\r\n            {\r\n\r\n                initialLoading\r\n                    ?\r\n                    loader\r\n                    :\r\n                    requestList && requestList.length > 0\r\n                        ?\r\n                        <InfiniteScroll\r\n                            className=\"tab-content\"\r\n                            dataLength={requestList.length}\r\n                            next={requestMoreData}\r\n                            hasMore={hasMore}\r\n                            loader={loader}>\r\n                            {\r\n                                childrenArray\r\n                            }\r\n                        </InfiniteScroll>\r\n                        :\r\n                        <div>\r\n                            <img src={ImgVacio} className=\"img-vacio\" alt=\"img-vacio\" />\r\n                            <h2 className=\"text-align-center m-0 text-empty\">Oops! aún nada por aquí</h2>\r\n                        </div>\r\n            }\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Tabs;\r\n","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\tag\\tag.js",[],"C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\forms\\forms-steps\\form-steps.js",["301"],"import React from 'react'\r\nimport './form-steps.css'\r\n\r\nconst Steps = ({ activeIndex, navigateTo, steps }) => {\r\n\r\n    const chunksPercentage = 100 / (steps.length + 1);\r\n    const totalWidth = chunksPercentage * (steps.length - 1);\r\n\r\n    return (\r\n        <div className='form-steps'>\r\n            <div className='line' style={{ left: chunksPercentage + '%', width: totalWidth + '%' }}></div>\r\n            {\r\n                steps.map((step, index) => (\r\n                    <div className='step-container'>\r\n                        <div onClick={() => navigateTo(index)} className={`form-step ${index == activeIndex ? 'active' : ''}`}>{index + 1}</div>\r\n                        <div className='step-text'>{step}</div>\r\n                    </div>\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Steps;","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\avatar\\index.js",[],"C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\loading-screen\\loading-screen.js",[],"C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\story-card\\index.js",[],"C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\hooks\\useOutsideListener.js",["302"],"import React, { useRef, useEffect } from \"react\";\r\nimport { Subject } from 'rxjs';\r\n\r\n/**\r\n * Hook that alerts clicks outside of the passed ref\r\n */\r\nexport const useOutsideListener = (ref) => {\r\n\r\n    const outsideListener = useRef(new Subject());\r\n\r\n    useEffect(() => {\r\n        /**\r\n       * Alert if clicked on outside of element\r\n       */\r\n        function handleClickOutside(event) {\r\n            if (ref.current && !ref.current.contains(event.target)) {\r\n                outsideListener.current.next(event);\r\n            }\r\n        }\r\n\r\n        // Bind the event listener\r\n        document.addEventListener(\"mousedown\", handleClickOutside);\r\n        return () => {\r\n            // Unbind the event listener on clean up\r\n            document.removeEventListener(\"mousedown\", handleClickOutside);\r\n        };\r\n    }, [ref]);\r\n\r\n    return {\r\n        outsideListener$: outsideListener.current\r\n    }\r\n\r\n}\r\n","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\avatar\\avatar.js",["303"],"import React, { useState, useEffect } from 'react'\r\nimport GenericUserImg from '../../img/usuario-generico.svg'\r\nimport './avatar.css';\r\n\r\nconst Avatar = ({ img, clases }) => {\r\n    const [avatarImg, setAvatarImg] = useState(GenericUserImg);\r\n\r\n    useEffect(() => {\r\n        setAvatarImg(avatarImg);\r\n    }, [img])\r\n\r\n    return (\r\n        <div className={clases+' img-avatar-container'}>\r\n            <img className='img-avatar' onError={() => setAvatarImg(GenericUserImg)} alt='img-avatar' src={avatarImg} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Avatar;\r\n","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\story-card\\story_card.js",[],"C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\customRouter\\anyRoute.js",["304"],"C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\helmet\\index.js",[],"C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\helmet\\helmet-metadata.js",[],"C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\modal\\punctuation.js",["305","306","307","308","309","310","311","312","313","314","315","316"],"import React, { useContext, useState } from 'react';\r\nimport ConfirmationModal from './confirmationModal';\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport Avatar from '../avatar';\r\nimport Zoom from 'react-reveal/Zoom';\r\nimport { contactTypes } from '../../data/data';\r\nimport { getDateText, getExpDateText } from '../../helpers/functions';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { designTypes } from '../../data/data';\r\nimport { addCommentRequestResult } from '../../api';\r\nimport { AuthContext } from '../../context/AuthContext';\r\nimport { css } from \"@emotion/core\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faAngleDown, faCheck, faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport './modals.css';\r\n\r\nconst iconSize = 20;\r\nconst color = '#756F86';\r\n\r\nconst overrideSpinnerInline = css`\r\n  display: inline-block;\r\n  margin-left: .6rem;\r\n  vertical-align: middle;\r\n`;\r\n\r\nconst Modal = ({ isOpen, requestId, requestType, close }) => {\r\n\r\n    const { logged } = useContext(AuthContext);\r\n    const [alias, setAlias] = useState('');\r\n    const [feedback, setFeedback] = useState('');\r\n    const [sendingFeedback, setSendingFeedback] = useState(false);\r\n    const [success, setSuccess] = useState(false);\r\n\r\n    let title = '';\r\n    let message = '';\r\n    let messagePlaceholder = '';\r\n    let styles = '';\r\n\r\n    if (isOpen) {\r\n        styles = 'open';\r\n    } else {\r\n        styles = 'close';\r\n    }\r\n\r\n    if (success) {\r\n        styles += ' punctuation-modal';\r\n    }\r\n\r\n    switch (requestType) {\r\n        case 'CRITICA':\r\n            title = '¡Maravilloso!';\r\n            message = 'Has dado amor a esta crítica. ¿Deseas dejarle un mensaje al crítico?';\r\n            messagePlaceholder = 'Me encantó la crítica, tu punto de vista me ayudará en mucho.';\r\n            break;\r\n        case 'DISENO':\r\n            title = '¡Maravilloso!';\r\n            message = 'Has dado amor a este diseño. ¿Deseas dejarle un mensaje al diseñador?';\r\n            messagePlaceholder = 'Me encantó el diseño, aunque pienso que puedes mejorar en...';\r\n            break;\r\n    }\r\n\r\n    const addComment = () => {\r\n        setSendingFeedback(true);\r\n        if (!checkErrors()) {\r\n            addCommentRequestResult(requestId, alias, feedback).then(({ data, error }) => {\r\n                if (!error) {\r\n                    setSendingFeedback(false);\r\n                    setSuccess(true);\r\n                } else {\r\n                    setSendingFeedback(false);\r\n                    alert('No se pudo agregar el mensaje');\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    const checkErrors = () => {\r\n\r\n        if (alias.length > 50) {\r\n            alert('Tu alias debe tener de 1 a 50 caracteres');\r\n            return true;\r\n        }\r\n\r\n        if (feedback.length > 1000) {\r\n            alert('Tu mensaje debe tener de 1 a 1000 caracteres');\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={'overlay overlay-modal ' + styles} onClick={close}>\r\n            </div>\r\n            <Zoom bottom collapse when={isOpen}>\r\n                <div className={'modal modal-fit modal-center ' + styles}>\r\n                    {\r\n                        success\r\n                            ?\r\n                            <div className='modal-container'>\r\n                                <div className='header-container position-relative'>\r\n                                    <div className='title-container'>\r\n                                        <h3 className='clamp clamp-1'>¡Listo!</h3>\r\n                                    </div>\r\n                                    <FontAwesomeIcon icon={faAngleDown} onClick={close} className='close-icon' />\r\n                                </div>\r\n                                <div className=\"footer-card-container\">\r\n                                    <button onClick={close} className='button button-green stretch'>\r\n                                        <FontAwesomeIcon icon={faCheck} size='xl' />\r\n                                        {' '}\r\n                                        Volver\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                            :\r\n                            <div className='modal-container'>\r\n                                <div className='header-container position-relative'>\r\n                                    <div className='title-container'>\r\n                                        <h3 className='clamp clamp-1'>{title}</h3>\r\n                                    </div>\r\n                                    <FontAwesomeIcon icon={faAngleDown} onClick={close} className='close-icon' />\r\n                                </div>\r\n                                <div className='description-container'>\r\n                                    <p>{message}</p>\r\n                                    <form>\r\n                                        <div className='form-group'>\r\n                                            <label htmlFor=\"txtAlias\">Tu alias</label>\r\n                                            <input minLength=\"1\" maxLength=\"50\" type=\"text\" value={alias} onChange={(e) => setAlias(e.target.value)} id=\"txtAlias\" placeholder=\"Ingresa tu alias\" />\r\n                                        </div>\r\n                                        <div className='form-group'>\r\n                                            <label htmlFor=\"txtFeedback\">Mensaje</label>\r\n                                            <textarea minLength=\"1\" maxLength=\"1000\" rows=\"3\" value={feedback} onChange={(e) => setFeedback(e.target.value)} id=\"txtFeedback\" placeholder={messagePlaceholder}></textarea>\r\n                                        </div>\r\n                                    </form>\r\n                                </div>\r\n                                <div className=\"footer-card-container\">\r\n                                    {\r\n                                        sendingFeedback\r\n                                            ?\r\n                                            <button className='button button-green stretch'>\r\n                                                <ClipLoader color={'#fff'} loading={true} css={overrideSpinnerInline} size={22} />\r\n                                            </button>\r\n                                            :\r\n                                            <button onClick={addComment} className='button button-green stretch'>\r\n                                                <FontAwesomeIcon icon={faCheck} size='xl' />\r\n                                                {' '}\r\n                                    Enviar\r\n                                    </button>\r\n                                    }\r\n\r\n                                </div>\r\n                            </div>\r\n                    }\r\n\r\n                </div>\r\n            </Zoom>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Modal;","C:\\Users\\Gricardov\\Desktop\\Temple Luna\\tlweb\\src\\componentes\\speech-bubble\\speech-bubble.js",[],{"ruleId":"317","replacedBy":"318"},{"ruleId":"319","replacedBy":"320"},{"ruleId":"321","severity":1,"message":"322","line":47,"column":9,"nodeType":"323","messageId":"324","endLine":54,"endColumn":10},{"ruleId":"325","severity":1,"message":"326","line":72,"column":23,"nodeType":"327","messageId":"328","endLine":72,"endColumn":25},{"ruleId":"329","severity":1,"message":"330","line":156,"column":8,"nodeType":"331","endLine":156,"endColumn":42,"suggestions":"332"},{"ruleId":"333","severity":1,"message":"334","line":43,"column":26,"nodeType":"335","messageId":"336","endLine":43,"endColumn":27,"suggestions":"337"},{"ruleId":"325","severity":1,"message":"338","line":85,"column":20,"nodeType":"327","messageId":"328","endLine":85,"endColumn":22},{"ruleId":"325","severity":1,"message":"338","line":86,"column":48,"nodeType":"327","messageId":"328","endLine":86,"endColumn":50},{"ruleId":"333","severity":1,"message":"334","line":163,"column":26,"nodeType":"335","messageId":"336","endLine":163,"endColumn":27,"suggestions":"339"},{"ruleId":"325","severity":1,"message":"326","line":199,"column":35,"nodeType":"327","messageId":"328","endLine":199,"endColumn":37},{"ruleId":"340","severity":1,"message":"341","line":169,"column":45,"nodeType":"342","endLine":169,"endColumn":76},{"ruleId":"333","severity":1,"message":"334","line":202,"column":26,"nodeType":"335","messageId":"336","endLine":202,"endColumn":27,"suggestions":"343"},{"ruleId":"325","severity":1,"message":"326","line":208,"column":29,"nodeType":"327","messageId":"328","endLine":208,"endColumn":31},{"ruleId":"325","severity":1,"message":"326","line":329,"column":73,"nodeType":"327","messageId":"328","endLine":329,"endColumn":75},{"ruleId":"344","severity":1,"message":"345","line":8,"column":10,"nodeType":"346","messageId":"347","endLine":8,"endColumn":24},{"ruleId":"340","severity":1,"message":"341","line":163,"column":45,"nodeType":"342","endLine":163,"endColumn":76},{"ruleId":"344","severity":1,"message":"348","line":31,"column":12,"nodeType":"346","messageId":"347","endLine":31,"endColumn":19},{"ruleId":"344","severity":1,"message":"349","line":38,"column":12,"nodeType":"346","messageId":"347","endLine":38,"endColumn":18},{"ruleId":"329","severity":1,"message":"350","line":115,"column":8,"nodeType":"331","endLine":115,"endColumn":29,"suggestions":"351"},{"ruleId":"325","severity":1,"message":"326","line":153,"column":64,"nodeType":"327","messageId":"328","endLine":153,"endColumn":66},{"ruleId":"325","severity":1,"message":"326","line":153,"column":99,"nodeType":"327","messageId":"328","endLine":153,"endColumn":101},{"ruleId":"325","severity":1,"message":"326","line":155,"column":64,"nodeType":"327","messageId":"328","endLine":155,"endColumn":66},{"ruleId":"325","severity":1,"message":"326","line":155,"column":113,"nodeType":"327","messageId":"328","endLine":155,"endColumn":115},{"ruleId":"325","severity":1,"message":"326","line":165,"column":54,"nodeType":"327","messageId":"328","endLine":165,"endColumn":56},{"ruleId":"325","severity":1,"message":"326","line":165,"column":131,"nodeType":"327","messageId":"328","endLine":165,"endColumn":133},{"ruleId":"325","severity":1,"message":"326","line":177,"column":34,"nodeType":"327","messageId":"328","endLine":177,"endColumn":36},{"ruleId":"325","severity":1,"message":"326","line":197,"column":38,"nodeType":"327","messageId":"328","endLine":197,"endColumn":40},{"ruleId":"352","severity":1,"message":"353","line":204,"column":41,"nodeType":"342","endLine":204,"endColumn":121},{"ruleId":"321","severity":1,"message":"322","line":182,"column":13,"nodeType":"323","messageId":"324","endLine":189,"endColumn":14},{"ruleId":"325","severity":1,"message":"326","line":215,"column":27,"nodeType":"327","messageId":"328","endLine":215,"endColumn":29},{"ruleId":"325","severity":1,"message":"326","line":17,"column":38,"nodeType":"327","messageId":"328","endLine":17,"endColumn":40},{"ruleId":"325","severity":1,"message":"326","line":62,"column":39,"nodeType":"327","messageId":"328","endLine":62,"endColumn":41},{"ruleId":"325","severity":1,"message":"326","line":99,"column":50,"nodeType":"327","messageId":"328","endLine":99,"endColumn":52},{"ruleId":"354","severity":1,"message":"355","line":99,"column":66,"nodeType":"356","messageId":"357","endLine":99,"endColumn":68},{"ruleId":"354","severity":1,"message":"355","line":99,"column":81,"nodeType":"356","messageId":"357","endLine":99,"endColumn":83},{"ruleId":"325","severity":1,"message":"326","line":99,"column":97,"nodeType":"327","messageId":"328","endLine":99,"endColumn":99},{"ruleId":"325","severity":1,"message":"326","line":103,"column":69,"nodeType":"327","messageId":"328","endLine":103,"endColumn":71},{"ruleId":"325","severity":1,"message":"326","line":117,"column":50,"nodeType":"327","messageId":"328","endLine":117,"endColumn":52},{"ruleId":"340","severity":1,"message":"341","line":131,"column":41,"nodeType":"342","endLine":131,"endColumn":80},{"ruleId":"340","severity":1,"message":"341","line":142,"column":37,"nodeType":"342","endLine":142,"endColumn":103},{"ruleId":"325","severity":1,"message":"326","line":156,"column":55,"nodeType":"327","messageId":"328","endLine":156,"endColumn":57},{"ruleId":"325","severity":1,"message":"326","line":181,"column":66,"nodeType":"327","messageId":"328","endLine":181,"endColumn":68},{"ruleId":"325","severity":1,"message":"326","line":188,"column":70,"nodeType":"327","messageId":"328","endLine":188,"endColumn":72},{"ruleId":"325","severity":1,"message":"326","line":199,"column":62,"nodeType":"327","messageId":"328","endLine":199,"endColumn":64},{"ruleId":"325","severity":1,"message":"326","line":58,"column":39,"nodeType":"327","messageId":"328","endLine":58,"endColumn":41},{"ruleId":"325","severity":1,"message":"326","line":91,"column":50,"nodeType":"327","messageId":"328","endLine":91,"endColumn":52},{"ruleId":"354","severity":1,"message":"355","line":91,"column":66,"nodeType":"356","messageId":"357","endLine":91,"endColumn":68},{"ruleId":"354","severity":1,"message":"355","line":91,"column":81,"nodeType":"356","messageId":"357","endLine":91,"endColumn":83},{"ruleId":"325","severity":1,"message":"326","line":91,"column":97,"nodeType":"327","messageId":"328","endLine":91,"endColumn":99},{"ruleId":"325","severity":1,"message":"326","line":95,"column":69,"nodeType":"327","messageId":"328","endLine":95,"endColumn":71},{"ruleId":"340","severity":1,"message":"341","line":109,"column":37,"nodeType":"342","endLine":109,"endColumn":103},{"ruleId":"325","severity":1,"message":"326","line":136,"column":55,"nodeType":"327","messageId":"328","endLine":136,"endColumn":57},{"ruleId":"325","severity":1,"message":"326","line":161,"column":66,"nodeType":"327","messageId":"328","endLine":161,"endColumn":68},{"ruleId":"325","severity":1,"message":"326","line":168,"column":70,"nodeType":"327","messageId":"328","endLine":168,"endColumn":72},{"ruleId":"325","severity":1,"message":"326","line":179,"column":62,"nodeType":"327","messageId":"328","endLine":179,"endColumn":64},{"ruleId":"358","severity":1,"message":"359","line":50,"column":25,"nodeType":"342","endLine":50,"endColumn":72},{"ruleId":"325","severity":1,"message":"326","line":69,"column":57,"nodeType":"327","messageId":"328","endLine":69,"endColumn":59},{"ruleId":"325","severity":1,"message":"326","line":77,"column":46,"nodeType":"327","messageId":"328","endLine":77,"endColumn":48},{"ruleId":"325","severity":1,"message":"326","line":85,"column":47,"nodeType":"327","messageId":"328","endLine":85,"endColumn":49},{"ruleId":"325","severity":1,"message":"338","line":96,"column":23,"nodeType":"327","messageId":"328","endLine":96,"endColumn":25},{"ruleId":"344","severity":1,"message":"360","line":105,"column":9,"nodeType":"346","messageId":"347","endLine":105,"endColumn":15},{"ruleId":"325","severity":1,"message":"326","line":16,"column":39,"nodeType":"327","messageId":"328","endLine":16,"endColumn":41},{"ruleId":"325","severity":1,"message":"326","line":34,"column":42,"nodeType":"327","messageId":"328","endLine":34,"endColumn":44},{"ruleId":"354","severity":1,"message":"355","line":34,"column":58,"nodeType":"356","messageId":"357","endLine":34,"endColumn":60},{"ruleId":"354","severity":1,"message":"355","line":34,"column":73,"nodeType":"356","messageId":"357","endLine":34,"endColumn":75},{"ruleId":"325","severity":1,"message":"326","line":34,"column":89,"nodeType":"327","messageId":"328","endLine":34,"endColumn":91},{"ruleId":"325","severity":1,"message":"326","line":38,"column":61,"nodeType":"327","messageId":"328","endLine":38,"endColumn":63},{"ruleId":"325","severity":1,"message":"326","line":55,"column":38,"nodeType":"327","messageId":"328","endLine":55,"endColumn":40},{"ruleId":"325","severity":1,"message":"326","line":57,"column":40,"nodeType":"327","messageId":"328","endLine":57,"endColumn":42},{"ruleId":"325","severity":1,"message":"326","line":64,"column":44,"nodeType":"327","messageId":"328","endLine":64,"endColumn":46},{"ruleId":"325","severity":1,"message":"326","line":75,"column":38,"nodeType":"327","messageId":"328","endLine":75,"endColumn":40},{"ruleId":"325","severity":1,"message":"338","line":59,"column":74,"nodeType":"327","messageId":"328","endLine":59,"endColumn":76},{"ruleId":"358","severity":1,"message":"359","line":22,"column":25,"nodeType":"342","endLine":22,"endColumn":96},{"ruleId":"325","severity":1,"message":"326","line":15,"column":94,"nodeType":"327","messageId":"328","endLine":15,"endColumn":96},{"ruleId":"344","severity":1,"message":"361","line":1,"column":8,"nodeType":"346","messageId":"347","endLine":1,"endColumn":13},{"ruleId":"329","severity":1,"message":"362","line":10,"column":8,"nodeType":"331","endLine":10,"endColumn":13,"suggestions":"363"},{"ruleId":"344","severity":1,"message":"364","line":4,"column":10,"nodeType":"346","messageId":"347","endLine":4,"endColumn":18},{"ruleId":"344","severity":1,"message":"365","line":2,"column":8,"nodeType":"346","messageId":"347","endLine":2,"endColumn":25},{"ruleId":"344","severity":1,"message":"366","line":4,"column":8,"nodeType":"346","messageId":"347","endLine":4,"endColumn":14},{"ruleId":"344","severity":1,"message":"367","line":6,"column":10,"nodeType":"346","messageId":"347","endLine":6,"endColumn":22},{"ruleId":"344","severity":1,"message":"368","line":7,"column":10,"nodeType":"346","messageId":"347","endLine":7,"endColumn":21},{"ruleId":"344","severity":1,"message":"369","line":7,"column":23,"nodeType":"346","messageId":"347","endLine":7,"endColumn":37},{"ruleId":"344","severity":1,"message":"370","line":8,"column":10,"nodeType":"346","messageId":"347","endLine":8,"endColumn":20},{"ruleId":"344","severity":1,"message":"371","line":9,"column":10,"nodeType":"346","messageId":"347","endLine":9,"endColumn":21},{"ruleId":"344","severity":1,"message":"372","line":14,"column":32,"nodeType":"346","messageId":"347","endLine":14,"endColumn":39},{"ruleId":"344","severity":1,"message":"373","line":17,"column":7,"nodeType":"346","messageId":"347","endLine":17,"endColumn":15},{"ruleId":"344","severity":1,"message":"374","line":18,"column":7,"nodeType":"346","messageId":"347","endLine":18,"endColumn":12},{"ruleId":"344","severity":1,"message":"375","line":28,"column":13,"nodeType":"346","messageId":"347","endLine":28,"endColumn":19},{"ruleId":"321","severity":1,"message":"322","line":49,"column":5,"nodeType":"323","messageId":"324","endLine":60,"endColumn":6},"no-native-reassign",["376"],"no-negated-in-lhs",["377"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'requestData'. Either include it or remove the dependency array.","ArrayExpression",["378"],"no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["379","380"],"Expected '!==' and instead saw '!='.",["381","382"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement",["383","384"],"no-unused-vars","'getGeneratedId' is defined but never used.","Identifier","unusedVar","'success' is assigned a value but never used.","'author' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'checkScroll'. Either include it or remove the dependency array.",["385"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-mixed-operators","Unexpected mix of '||' and '&&'.","LogicalExpression","unexpectedMixedOperator","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'urlImg' is assigned a value but never used.","'React' is defined but never used.","React Hook useEffect has a missing dependency: 'avatarImg'. Either include it or remove the dependency array. You can also do a functional update 'setAvatarImg(a => ...)' if you only need 'avatarImg' in the 'setAvatarImg' call.",["386"],"'Redirect' is defined but never used.","'ConfirmationModal' is defined but never used.","'Avatar' is defined but never used.","'contactTypes' is defined but never used.","'getDateText' is defined but never used.","'getExpDateText' is defined but never used.","'useHistory' is defined but never used.","'designTypes' is defined but never used.","'faTimes' is defined but never used.","'iconSize' is assigned a value but never used.","'color' is assigned a value but never used.","'logged' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"387","fix":"388"},{"messageId":"389","fix":"390","desc":"391"},{"messageId":"392","fix":"393","desc":"394"},{"messageId":"389","fix":"395","desc":"391"},{"messageId":"392","fix":"396","desc":"394"},{"messageId":"389","fix":"397","desc":"391"},{"messageId":"392","fix":"398","desc":"394"},{"desc":"399","fix":"400"},{"desc":"401","fix":"402"},"Update the dependencies array to be: [activeTabIndex, requestData, requestType.type]",{"range":"403","text":"404"},"removeEscape",{"range":"405","text":"406"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"407","text":"408"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"409","text":"406"},{"range":"410","text":"408"},{"range":"411","text":"406"},{"range":"412","text":"408"},"Update the dependencies array to be: [checkScroll, hasScrolledToOffset]",{"range":"413","text":"414"},"Update the dependencies array to be: [avatarImg, img]",{"range":"415","text":"416"},[6416,6450],"[activeTabIndex, requestData, requestType.type]",[1323,1324],"",[1323,1323],"\\",[4990,4991],[4990,4990],[6185,6186],[6185,6185],[4821,4842],"[checkScroll, hasScrolledToOffset]",[309,314],"[avatarImg, img]"]